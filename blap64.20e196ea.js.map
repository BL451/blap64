{"mappings":"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","sources":["<anon>","src/views/elements/p5-element.js","src/views/Home/sketch.js","src/views/Oops/sketch.js","src/views/CodeArt/sketch.js","src/views/Installations/sketch.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire905d\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire905d\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $800sp = parcelRequire(\"800sp\");\n\nvar $baa6D = parcelRequire(\"baa6D\");\nconst $7c52c1757ddfa23f$export$d038dabfbf61338f = function(p, options = {}) {\n    let ui = [];\n    let ui_opacity = 0;\n    let smoothX, smoothY;\n    let short;\n    let intro_texts = [];\n    let animation_states = [];\n    let animation_manager;\n    let font_sizes;\n    let mobile = false;\n    let skipAnimations = options.skipAnimations || false;\n    p.setup = async function() {\n        p.noCanvas();\n        const s = (0, $baa6D.getViewportSize)();\n        p.createCanvas(s.width, s.height);\n        mobile = (0, $baa6D.widthCheck)(p.width);\n        p.background(23);\n        p.noFill();\n        p.stroke(230);\n        p.strokeWeight(4);\n        p.strokeCap(p.PROJECT);\n        await (0, $baa6D.loadGoogleFontSet)('../../assets/fonts/BPdotsSquareVF.ttf');\n        p.textAlign(p.CENTER, p.CENTER);\n        short = p.min(p.width, p.height);\n        const s_font = Math.max(0.022 * p.width, 32);\n        ui.push(new (0, $baa6D.UICornerBoxButton)(p, 0.25 * p.width, 0.7 * p.height, 0.26 * short, 0.26 * short, 0.01 * p.width, 0.01 * p.width, \"INTERACTIVE\\nMEDIA\", s_font));\n        ui.push(new (0, $baa6D.UIArcButton)(p, 0.5 * p.width, 0.7 * p.height, 0.3 * short, 0.3 * short, 0.01 * p.width, 0.01 * p.width, \"PHOTO\", s_font));\n        ui.push(new (0, $baa6D.UITriangleButton)(p, 0.75 * p.width, 0.35 * p.height, 0.2 * short, 0.2 * short, 0.01 * p.width, 0.01 * p.width, -0.5 * p.PI, \"ABOUT\", s_font));\n        ui.push(new (0, $baa6D.UIHexButton)(p, 0.75 * p.width, 0.7 * p.height, 0.3 * short, 0.3 * short, 0.01 * p.width, 0.01 * p.width, \"COLLECT\", s_font));\n        // Apply quadratic curve layout to UI elements\n        layoutUI();\n        smoothX = p.width / 2;\n        smoothY = p.height / 2;\n        p.textFont('BPdotsSquareVF', {\n            fontVariationSettings: `wght 900`\n        });\n        font_sizes = (0, $baa6D.getFontSizes)(p.width, p.height);\n        let padding = [\n            0.04,\n            0.15\n        ];\n        if (mobile) padding = [\n            0.025,\n            0.05\n        ];\n        intro_texts.push(new (0, $baa6D.TextWriter)(p, padding[0] * p.width, padding[0] * p.width, p.width, p.height / 2, \"HELLO, FRIEND.\", font_sizes.large));\n        intro_texts.push(new (0, $baa6D.TextWriter)(p, padding[1] * p.width, 0.18 * p.height, p.width / 2, p.height / 2, \"I play many roles:\", font_sizes.small));\n        intro_texts.push(new (0, $baa6D.TextWriter)(p, padding[1] * p.width, 0.22 * p.height, p.width, p.height / 2, \"CREATIVE TECHNOLOGIST\\nEDUCATOR\\nARTIST\", font_sizes.medium));\n        animation_states = [\n            {\n                \"start_time\": 500,\n                \"duration\": 1000,\n                \"idx\": 0,\n                \"fn\": intro_texts[0].renderSequentialRandom.bind(intro_texts[0]),\n                \"args\": [],\n                \"persist\": true\n            },\n            {\n                \"start_time\": 3000,\n                \"duration\": 1000,\n                \"idx\": 0,\n                \"fn\": intro_texts[0].renderTransition.bind(intro_texts[0]),\n                \"args\": [\n                    \"HELLO, FRIEND.\",\n                    \"My name is Benjamin Lappalainen\"\n                ],\n                \"persist\": true\n            },\n            {\n                \"start_time\": 4000,\n                \"duration\": 500,\n                \"idx\": 1,\n                \"fn\": intro_texts[1].renderSequentialRandom.bind(intro_texts[1]),\n                \"args\": [],\n                \"persist\": true\n            },\n            {\n                \"start_time\": 4750,\n                \"duration\": 2000,\n                \"idx\": 2,\n                \"fn\": intro_texts[2].renderSequentialRandom.bind(intro_texts[2]),\n                \"args\": [],\n                \"persist\": true\n            },\n            {\n                \"start_time\": 7250,\n                \"duration\": 1000,\n                \"idx\": 2,\n                \"fn\": intro_texts[2].renderTransition.bind(intro_texts[2]),\n                \"args\": [\n                    \"CREATIVE TECHNOLOGIST\\nEDUCATOR\\nARTIST\",\n                    \"CREATIVE TECHNOLOGIST\\nEDUCATOR\\nARTIST\\nand more...\"\n                ],\n                \"persist\": true\n            },\n            {\n                \"start_time\": 5000,\n                \"duration\": 1000,\n                \"idx\": 0,\n                \"fn\": intro_texts[0].renderTransition.bind(intro_texts[0]),\n                \"args\": [\n                    \"My name is Benjamin Lappalainen\",\n                    \"Benjamin Lappalainen\"\n                ],\n                \"persist\": true\n            },\n            {\n                \"start_time\": 7000,\n                \"duration\": 250,\n                \"idx\": 0,\n                \"fn\": intro_texts[0].renderTransition.bind(intro_texts[0]),\n                \"args\": [\n                    \"Benjamin Lappalainen\",\n                    \"BLAP\"\n                ],\n                \"persist\": true\n            },\n            {\n                \"start_time\": 7500,\n                \"duration\": 250,\n                \"idx\": 0,\n                \"fn\": intro_texts[0].renderTransition.bind(intro_texts[0]),\n                \"args\": [\n                    \"BLAP\",\n                    \"BLAP64\"\n                ],\n                \"persist\": true\n            },\n            {\n                \"start_time\": 4000,\n                \"duration\": 1000,\n                \"idx\": 3,\n                \"fn\": setUIOpacity,\n                \"args\": [],\n                \"persist\": false\n            }\n        ];\n        animation_manager = new (0, $baa6D.AnimationManager)(animation_states);\n        // Skip animations if requested\n        if (skipAnimations) {\n            // Set final states immediately\n            intro_texts[0].t = \"BLAP64\";\n            intro_texts[1].t = \"I play many roles:\";\n            intro_texts[2].t = \"CREATIVE TECHNOLOGIST\\nEDUCATOR\\nARTIST\\nand more...\";\n            ui_opacity = 255;\n            animation_manager.t = 999999;\n        }\n        window.addEventListener(\"focus\", (event)=>{\n            if (p.millis() > 5000) setUIOpacity(1);\n        });\n    };\n    p.draw = function() {\n        // deltaTime allows us to be framerate agnostic for animation speed\n        smoothX = (0, $baa6D.smoothFollow)(p.mouseX, smoothX, 0.003 * p.deltaTime);\n        smoothY = (0, $baa6D.smoothFollow)(p.mouseY, smoothY, 0.003 * p.deltaTime);\n        p.clear();\n        p.background(23);\n        p.textAlign(p.CENTER, p.CENTER);\n        ui.forEach((ui_element)=>{\n            const l = ui_element.dist(smoothX, smoothY);\n            ui_element.cs.x = (0, $baa6D.easeInCubic)(p.map(l, 0, 0.5 * p.width, 1, 0));\n            ui_element.cs.y = (0, $baa6D.easeInCubic)(p.map(l, 0, 0.5 * p.width, 1, 0));\n            p.strokeWeight(1 + 0.015 * short * (0, $baa6D.easeInCubic)(p.map(l, 0, 0.5 * p.width, 1, 0, true)));\n            p.noFill();\n            if (ui_element.contains(p.mouseX, p.mouseY)) p.stroke(230, 20, 20, ui_opacity);\n            else p.stroke(230, ui_opacity);\n            ui_element.render();\n            // Text rendering\n            p.noStroke();\n            let d = 0;\n            if (!mobile) d = ui_element.textWriter.dist(smoothX, smoothY);\n            p.textFont('BPdotsSquareVF', {\n                fontVariationSettings: `wght ${p.map(d / p.width, 1, 0, 100, 900, true)}`\n            });\n            if (ui_element.contains(p.mouseX, p.mouseY)) p.fill(230, 20, 20, ui_opacity);\n            else p.fill(230, ui_opacity);\n            ui_element.textWriter.renderSequentialRandom(p.map(d, 100, 0.5 * p.width, 1, 0, true));\n        });\n        p.noFill();\n        p.stroke(230);\n        p.strokeWeight(2);\n        p.noStroke();\n        p.fill(230);\n        p.textAlign(p.LEFT, p.TOP);\n        p.textFont('BPdotsSquareVF', {\n            fontVariationSettings: `wght 900`\n        });\n        animation_manager.execute(p);\n        // Update cursor based on hover state\n        (0, $baa6D.updateCursor)(p, p.mouseX, p.mouseY, ui);\n    };\n    p.mousePressed = function(event) {\n        if (event && event.button !== 0) return;\n        if (ui_opacity < 128) return;\n        const ANIMATION_DELAY = 500;\n        ui.forEach((ui_element, index)=>{\n            if (ui_element.contains(p.mouseX, p.mouseY)) {\n                // Navigate based on which UI element was clicked\n                if (window.appRouter) switch(index){\n                    case 0:\n                        setTimeout(()=>{\n                            window.appRouter.navigate('/interactive');\n                        }, ANIMATION_DELAY);\n                        break;\n                    case 1:\n                        // Add photo route when available\n                        console.log('Photo section coming soon!');\n                        break;\n                    case 2:\n                        setTimeout(()=>{\n                            window.appRouter.navigate('/about');\n                        }, ANIMATION_DELAY);\n                        break;\n                }\n                return;\n            }\n        });\n    };\n    // Enhanced windowResized function that automatically updates all UI elements\n    // Maintains proportional positioning and sizing based on new canvas dimensions\n    // Preserves animation states when not skipping animations\n    p.windowResized = function windowResized() {\n        const s = (0, $baa6D.getViewportSize)();\n        p.resizeCanvas(s.width, s.height);\n        short = p.min(s.width, s.height);\n        mobile = (0, $baa6D.widthCheck)(p.width);\n        // Update font sizes based on new dimensions\n        font_sizes = (0, $baa6D.getFontSizes)(p.width, p.height);\n        // Update padding based on new width\n        let padding = [\n            0.05,\n            0.15\n        ];\n        if (mobile) padding = [\n            0.025,\n            0.05\n        ];\n        // Clear and recreate UI elements with new proportional positions\n        // UI elements: corner box, arc, and triangle buttons at 25%, 50%, 75% width\n        ui.length = 0;\n        const s_font = Math.max(0.022 * p.width, 32);\n        ui.push(new (0, $baa6D.UICornerBoxButton)(p, 0.25 * p.width, 0.7 * p.height, 0.26 * short, 0.26 * short, 0.01 * p.width, 0.01 * p.width, \"INTERACTIVE\\nMEDIA\", s_font));\n        ui.push(new (0, $baa6D.UIArcButton)(p, 0.5 * p.width, 0.7 * p.height, 0.3 * short, 0.3 * short, 0.01 * p.width, 0.01 * p.width, \"PHOTO\", s_font));\n        ui.push(new (0, $baa6D.UITriangleButton)(p, 0.75 * p.width, 0.35 * p.height, 0.2 * short, 0.2 * short, 0.01 * p.width, 0.01 * p.width, -0.5 * p.PI, \"ABOUT\", s_font));\n        ui.push(new (0, $baa6D.UIHexButton)(p, 0.75 * p.width, 0.7 * p.height, 0.3 * short, 0.3 * short, 0.01 * p.width, 0.01 * p.width, \"COLLECT\", s_font));\n        // Apply quadratic curve layout to UI elements\n        layoutUI();\n        // Update intro text elements positions and sizes\n        if (skipAnimations) {\n            // Preserve final states when skipping animations\n            intro_texts.length = 0;\n            intro_texts.push(new (0, $baa6D.TextWriter)(p, padding[0] * p.width, padding[0] * p.width, 0.8 * p.width, p.height / 2, \"BLAP64\", font_sizes.large));\n            intro_texts.push(new (0, $baa6D.TextWriter)(p, padding[1] * p.width, 0.18 * p.height, p.width / 2, p.height / 2, \"I play many roles:\", font_sizes.small));\n            intro_texts.push(new (0, $baa6D.TextWriter)(p, padding[1] * p.width, 0.22 * p.height, p.width, p.height / 2, \"CREATIVE TECHNOLOGIST\\nEDUCATOR\\nARTIST\\nand more...\", font_sizes.medium));\n        } else {\n            // Update positions but preserve current animation states and text content\n            intro_texts[0].p.x = padding[0] * p.width;\n            intro_texts[0].p.y = padding[0] * p.width;\n            intro_texts[0].s.x = 0.8 * p.width;\n            intro_texts[0].s.y = p.height / 2;\n            intro_texts[0].size = font_sizes.large;\n            intro_texts[1].p.x = padding[1] * p.width;\n            intro_texts[1].p.y = 0.18 * p.height;\n            intro_texts[1].s.x = p.width / 2;\n            intro_texts[1].s.y = p.height / 2;\n            intro_texts[1].size = font_sizes.small;\n            intro_texts[2].p.x = padding[1] * p.width;\n            intro_texts[2].p.y = 0.22 * p.height;\n            intro_texts[2].s.x = p.width;\n            intro_texts[2].s.y = p.height / 2;\n            intro_texts[2].size = font_sizes.medium;\n        }\n    };\n    function setUIOpacity(v) {\n        ui_opacity = 255 * v;\n    }\n    // Layout UI elements along a quadratic curve going up towards the right\n    function layoutUI() {\n        if (ui.length === 0) return;\n        if (mobile) {\n            // Mobile layout: arrange in 2x2 grid in lower third of screen\n            const gridCenterX = 0.5 * p.width;\n            const gridCenterY = 0.7 * p.height; // Lower third of screen\n            const gridSpacing = 0.45 * p.width; // Spacing between grid positions\n            // Grid positions: 2x2 layout\n            const gridPositions = [\n                {\n                    x: gridCenterX - gridSpacing / 2,\n                    y: gridCenterY - gridSpacing / 2\n                },\n                {\n                    x: gridCenterX + gridSpacing / 2,\n                    y: gridCenterY - gridSpacing / 2\n                },\n                {\n                    x: gridCenterX - gridSpacing / 2,\n                    y: gridCenterY + gridSpacing / 2\n                },\n                {\n                    x: gridCenterX + gridSpacing / 2,\n                    y: gridCenterY + gridSpacing / 2\n                } // Bottom-right\n            ];\n            // Position UI elements in grid\n            for(let i = 0; i < ui.length; i++){\n                const pos = gridPositions[i % gridPositions.length]; // Handle more than 4 elements\n                // Update UI element position\n                ui[i].p.x = pos.x;\n                ui[i].p.y = pos.y;\n                // Update corresponding TextWriter position\n                ui[i].textWriter.p.x = pos.x;\n                ui[i].textWriter.p.y = pos.y;\n            }\n        } else {\n            // Desktop layout: quadratic curve\n            // Define curve parameters - curve goes from bottom-left to top-right\n            const startX = 0.15 * p.width; // Start X position (15% from left)\n            const startY = 0.75 * p.height; // Start Y position (75% from top, near bottom)\n            const endX = 0.85 * p.width; // End X position (85% from left)\n            const endY = 0.2 * p.height; // End Y position (20% from top, near top)\n            // Quadratic curve control point to create convex upward arc\n            const controlX = 0.6 * p.width; // Control point X\n            const controlY = 0.65 * p.height; // Control point Y (creates convex curve)\n            // Calculate positions for each UI element along the curve\n            for(let i = 0; i < ui.length; i++){\n                // Parameter t goes from 0 to 1 along the curve\n                const t = ui.length > 1 ? i / (ui.length - 1) : 0;\n                // Quadratic Bezier curve formula: P(t) = (1-t)²P₀ + 2(1-t)tP₁ + t²P₂\n                const oneMinusT = 1 - t;\n                const x = oneMinusT * oneMinusT * startX + 2 * oneMinusT * t * controlX + t * t * endX;\n                const y = oneMinusT * oneMinusT * startY + 2 * oneMinusT * t * controlY + t * t * endY;\n                // Update UI element position\n                ui[i].p.x = x;\n                ui[i].p.y = y;\n                // Update corresponding TextWriter position\n                ui[i].textWriter.p.x = x;\n                ui[i].textWriter.p.y = y;\n            }\n        }\n    }\n};\nconst $7c52c1757ddfa23f$export$6704eadea0be434f = (node, options = {})=>{\n    return new p5((p)=>$7c52c1757ddfa23f$export$d038dabfbf61338f(p, options), node);\n};\n\n\n\nvar $baa6D = parcelRequire(\"baa6D\");\nconst $82b1d05426f642e7$export$d038dabfbf61338f = function(p) {\n    let fbo = undefined;\n    let short = 128;\n    p.setup = function setup() {\n        p.noCanvas();\n        p.pixelDensity(1);\n        const s = (0, $baa6D.getViewportSize)();\n        p.createCanvas(s.width, s.height, p.WEBGL);\n        // Options for creating our framebuffer, width and height relative to the size of our canvas determine the pixelation appearance\n        const options = {\n            width: 128,\n            height: 128,\n            textureFiltering: p.NEAREST\n        };\n        // Disable p5's smoothing\n        p.noSmooth();\n        p.ellipseMode(p.CENTER);\n        short = p.min(s.width, s.height);\n        // Make the framebuffer\n        fbo = p.createFramebuffer(options);\n        // p5 in instance mode doesn't seem to work well with elements in a shadow root and doesn't remove the \"p5_loading\" div by itself\n        let bg = document.getElementById(\"bg\");\n        let loading_div = bg.shadowRoot.getElementById(\"p5_loading\");\n        if (loading_div) loading_div.remove();\n    };\n    p.draw = function draw() {\n        p.clear();\n        fbo.begin(); // Begin drawing stuff in the framebuffer\n        p.noFill();\n        p.stroke(200, 20, 20);\n        p.strokeWeight(p.abs(p.sin(p.frameCount / 42)));\n        p.clear();\n        p.rotateX(p.frameCount / 50);\n        p.rotateY(p.frameCount / 200);\n        p.circle(0, 0, 64);\n        p.rotateY(p.PI / 2);\n        p.circle(0, 0, 64);\n        fbo.end(); // Finish drawing stuff in the framebuffer\n        // Render an image of the framebuffer, centering and stretching it to the size of the canvas\n        p.image(fbo, -short / 2, -short / 2, short, short);\n    };\n    p.windowResized = function windowResized() {\n        const s = (0, $baa6D.getViewportSize)();\n        p.resizeCanvas(s.width, s.height);\n        short = p.min(s.width, s.height);\n    };\n};\nconst $82b1d05426f642e7$export$121e7a268b92cc36 = (node)=>{\n    return new p5($82b1d05426f642e7$export$d038dabfbf61338f, node);\n};\n\n\n\nvar $baa6D = parcelRequire(\"baa6D\");\nconst $a850a1f0a1459307$export$d038dabfbf61338f = function(p) {\n    let ui = [];\n    let short = 128;\n    let smoothX = 0;\n    let smoothY = 0;\n    let mobile = false;\n    let cx, cy, r;\n    p.setup = function setup() {\n        p.noCanvas();\n        p.pixelDensity(1);\n        const s = (0, $baa6D.getViewportSize)();\n        p.createCanvas(s.width, s.height);\n        short = p.min(s.width, s.height);\n        cx = 0.5 * p.width;\n        cy = 0.6 * p.height;\n        r = 0.2 * short;\n        layoutUI();\n        p.background(23);\n        p.textAlign(p.CENTER, p.CENTER);\n        p.strokeCap(p.PROJECT);\n        // p5 in instance mode doesn't seem to work well with elements in a shadow root and doesn't remove the \"p5_loading\" div by itself\n        let bg = document.getElementById(\"bg\");\n        let loading_div = bg.shadowRoot.getElementById(\"p5_loading\");\n        if (loading_div) loading_div.remove();\n    };\n    p.draw = function draw() {\n        p.background(23);\n        smoothX = (0, $baa6D.smoothFollow)(p.mouseX, smoothX, 0.003 * p.deltaTime);\n        smoothY = (0, $baa6D.smoothFollow)(p.mouseY, smoothY, 0.003 * p.deltaTime);\n        p.noFill();\n        p.stroke(230);\n        p.strokeWeight(1);\n        ui.forEach((ui_element)=>{\n            const l = ui_element.dist(smoothX, smoothY);\n            ui_element.cs.x = (0, $baa6D.easeInCubic)(p.map(l, 0, 0.5 * p.width, 1, 0));\n            ui_element.cs.y = (0, $baa6D.easeInCubic)(p.map(l, 0, 0.5 * p.width, 1, 0));\n            //p.strokeWeight(1 + 0.015*short*easeInCubic(p.map(l, 0, 0.5*p.width, 1, 0, true)));\n            p.noFill();\n            if (ui_element.contains(p.mouseX, p.mouseY)) p.stroke(230, 20, 20);\n            else p.stroke(230);\n            ui_element.renderTriangle();\n            // Text rendering\n            p.noStroke();\n            let d = 0;\n            if (!mobile) d = l; //ui_element.textWriter.dist(smoothX, smoothY);\n            p.textFont('BPdotsSquareVF', {\n                fontVariationSettings: `wght ${p.map(d / p.width, 1, 0, 100, 900, true)}`\n            });\n            if (ui_element.contains(p.mouseX, p.mouseY)) p.fill(230, 20, 20);\n            else p.fill(230);\n            ui_element.textWriter.renderSequentialRandom(p.map(d, 100, 0.5 * p.width, 1, 0, true));\n        });\n        renderDecor();\n        // Update cursor based on hover state\n        (0, $baa6D.updateCursor)(p, p.mouseX, p.mouseY, ui);\n    };\n    p.windowResized = function windowResized() {\n        const s = (0, $baa6D.getViewportSize)();\n        p.resizeCanvas(s.width, s.height);\n        short = p.min(s.width, s.height);\n        cx = 0.5 * p.width;\n        cy = 0.6 * p.height;\n        r = 0.2 * short;\n        layoutUI();\n    };\n    p.mousePressed = function(event) {\n        if (event && event.button !== 0) return;\n        const ANIMATION_DELAY = 500;\n        ui.forEach((ui_element, index)=>{\n            if (ui_element.contains(p.mouseX, p.mouseY)) {\n                // Navigate based on which UI element was clicked\n                if (window.appRouter) switch(index){\n                    case 0:\n                        setTimeout(()=>{\n                            window.appRouter.navigate('/interactive/live');\n                        }, ANIMATION_DELAY);\n                        break;\n                    case 1:\n                        // Add photo route when available\n                        console.log('PHYSICAL ARTIFACTS COMING SOON');\n                        break;\n                    case 2:\n                        setTimeout(()=>{\n                            window.appRouter.navigate('/about');\n                        }, ANIMATION_DELAY);\n                        break;\n                }\n                return;\n            }\n        });\n    };\n    function layoutUI() {\n        ui.length = 0;\n        const s_font = Math.max(0.022 * p.width, 32);\n        ui.push(new (0, $baa6D.UITriangleButton)(p, cx, cy - r, 0.1 * short, 0.1 * short, 0.01 * p.width, 0.01 * p.width, -0.5 * p.PI, \"LIVE\\nEXPERIENCES\", s_font));\n        ui[0].setTextOffset(0, -0.9 * r);\n        ui.push(new (0, $baa6D.UITriangleButton)(p, cx - r * p.cos(p.PI / 6), cy + r * p.sin(p.PI / 6), 0.1 * short, 0.1 * short, 0.01 * p.width, 0.01 * p.width, -0.5 * p.PI, \"PHYSICAL\\nARTIFACTS\", s_font));\n        ui[1].setTextOffset(-0.95 * r * p.cos(p.PI / 6), 0.95 * r * p.sin(p.PI / 6));\n        ui.push(new (0, $baa6D.UITriangleButton)(p, cx + r * p.cos(p.PI / 6), cy + r * p.sin(p.PI / 6), 0.1 * short, 0.1 * short, 0.01 * p.width, 0.01 * p.width, -0.5 * p.PI, \"WEB\\nEXPERIENCES\", s_font));\n        ui[2].setTextOffset(0.95 * r * p.cos(p.PI / 6), 0.95 * r * p.sin(p.PI / 6));\n    }\n    function renderDecor() {\n        const t = 0.0003 * p.millis();\n        p.noFill();\n        p.stroke(230);\n        p.strokeWeight(1);\n        let m = p.createVector(smoothX, smoothY);\n        let c = p.createVector(cx, cy);\n        let new_v = p5.Vector.sub(m, c);\n        const h = new_v.heading();\n        let new_cx = cx + 0.1 * p.min(new_v.mag(), 3 * r) * p.cos(h);\n        let new_cy = cy + 0.1 * p.min(new_v.mag(), 3 * r) * p.sin(h);\n        p.circle(new_cx, new_cy, 0.5 * r);\n        let a_mod = -h;\n        let a0 = a_mod + zcn(t);\n        let a1 = 2 * p.PI / 3 + a_mod + zcn(t);\n        let a2 = 4 * p.PI / 3 + a_mod + zcn(t);\n        let c00 = radialToCartesian(0.2 * r, a0);\n        let c01 = radialToCartesian(0.3 * r, a0);\n        let c10 = radialToCartesian(0.2 * r, a1);\n        let c11 = radialToCartesian(0.3 * r, a1);\n        let c20 = radialToCartesian(0.2 * r, a2);\n        let c21 = radialToCartesian(0.3 * r, a2);\n        p.line(new_cx + c00.x, new_cy + c00.y, new_cx + c01.x, new_cy + c01.y);\n        p.line(new_cx + c10.x, new_cy + c10.y, new_cx + c11.x, new_cy + c11.y);\n        p.line(new_cx + c20.x, new_cy + c20.y, new_cx + c21.x, new_cy + c21.y);\n        a_mod = p.abs(a_mod);\n        for(let i = 0; i < 3; i++){\n            let ad = p.PI * zcn(0.1 * a_mod + 0.0003 * p.millis());\n            a0 = i * p.TWO_PI / 3 + 0.6 * p.PI / 6 + a_mod + ad;\n            a1 = i * p.TWO_PI / 3 + 1.4 * p.PI / 6 + a_mod + ad;\n            c00 = radialToCartesian(0.5 * r, a0);\n            c01 = radialToCartesian(0.5 * r, a1);\n            p.line(new_cx + c00.x, new_cy + c00.y, new_cx + c01.x, new_cy + c01.y);\n            let lm = 0.02 * a_mod / p.PI + 0.02;\n            let rmi = (0.5 - lm) * r;\n            let rmo = (0.5 + lm) * r;\n            c00 = radialToCartesian(rmi, a0);\n            c01 = radialToCartesian(rmo, a0);\n            p.line(new_cx + c00.x, new_cy + c00.y, new_cx + c01.x, new_cy + c01.y);\n            c00 = radialToCartesian(rmi, a1);\n            c01 = radialToCartesian(rmo, a1);\n            p.line(new_cx + c00.x, new_cy + c00.y, new_cx + c01.x, new_cy + c01.y);\n        }\n    }\n    function radialToCartesian(r, a) {\n        return {\n            x: r * p.cos(a),\n            y: -r * p.sin(a)\n        };\n    }\n    function zcn(x = 0, y = 0, z = 0) {\n        return 2 * (p.noise(x, y, z) - 0.5);\n    }\n};\nconst $a850a1f0a1459307$export$6d40932eaa280b79 = (node)=>{\n    return new p5($a850a1f0a1459307$export$d038dabfbf61338f, node);\n};\n\n\n\nvar $baa6D = parcelRequire(\"baa6D\");\n\nvar $JTwtx = parcelRequire(\"JTwtx\");\n\n\n\nconst $10c5b62b251f1acf$export$d038dabfbf61338f = function(p, options = {}) {\n    let ui = [];\n    let short = 128;\n    let smoothX = 0;\n    let smoothY = 0;\n    let smoothV = p.createVector(smoothX, smoothY);\n    let mobile = false;\n    let cx, cy, r;\n    let planetButtons = [];\n    let star_colours = [\n        '#faa000',\n        '#0842f5',\n        '#e61414'\n    ];\n    let activeInfoCard = null;\n    let infoCardAlpha = 0;\n    let infoCardAnimationStart = 0;\n    let infoCardAnimating = false;\n    let targetAlpha = 0;\n    let galleryScrollX = 0;\n    let targetGalleryScrollX = 0;\n    let galleryDragging = false;\n    let galleryDragStartX = 0;\n    let galleryStartScrollX = 0;\n    let loadedMedia = new Map();\n    let expandedMediaIndex = null;\n    let expandedMediaAlpha = 0;\n    let expandedMediaAnimating = false;\n    let expandedMediaAnimationStart = 0;\n    let targetExpandedAlpha = 0;\n    let nativeVideoElement = null;\n    let pendingProjectSlug = null;\n    let layoutInitialized = false;\n    let frameCount = 0;\n    let currentPath = null;\n    let isInternalNavigation = false;\n    let hashChangeHandler = null;\n    // Add cleanup method to be called when sketch is destroyed\n    p.cleanupSketch = function() {\n        // Clean up native video element\n        if (nativeVideoElement) {\n            nativeVideoElement.remove();\n            nativeVideoElement = null;\n        }\n        // Clean up any loaded video elements\n        loadedMedia.forEach((mediaData, path)=>{\n            if (mediaData.type === 'video' && mediaData.element && mediaData.element.remove) mediaData.element.remove();\n        });\n        loadedMedia.clear();\n        // Reset state\n        activeInfoCard = null;\n        expandedMediaIndex = null;\n        infoCardAlpha = 0;\n        expandedMediaAlpha = 0;\n        // Re-enable browser swipe navigation\n        document.body.style.overscrollBehavior = '';\n        document.body.style.touchAction = '';\n        // Remove hash change listener\n        if (hashChangeHandler) {\n            window.removeEventListener('hashchange', hashChangeHandler);\n            hashChangeHandler = null;\n        }\n    // Don't clear session storage here - let setup function handle it for back navigation detection\n    };\n    // Helper functions for layout calculations\n    function getCardDimensions() {\n        const isMobile = (0, $baa6D.widthCheck)(p.width);\n        const cardSize = isMobile ? p.min(p.width * 0.95, p.height * 0.9) : p.min(p.width * 0.9, p.height * 0.85, 900);\n        const cardX = (p.width - cardSize) / 2;\n        const cardY = (p.height - cardSize) / 2;\n        return {\n            size: cardSize,\n            x: cardX,\n            y: cardY,\n            isMobile: isMobile\n        };\n    }\n    function getGalleryLayout(cardSize, cardX, cardY, isMobile) {\n        const baseTextScale = isMobile ? cardSize / 400 : cardSize / 600;\n        const padding = 25 * baseTextScale;\n        const lineHeight = 25 * baseTextScale;\n        const galleryY = cardY + padding + lineHeight * 5.3;\n        const galleryHeight = cardSize * 0.4;\n        return {\n            galleryY: galleryY,\n            galleryHeight: galleryHeight,\n            baseTextScale: baseTextScale,\n            padding: padding,\n            lineHeight: lineHeight\n        };\n    }\n    function getGalleryItemDimensions(galleryHeight, scale) {\n        const galleryPadding = 10 * scale;\n        const itemHeight = galleryHeight - 2 * galleryPadding;\n        const itemWidth = itemHeight * 1.5; // 3:2 aspect ratio\n        return {\n            itemWidth: itemWidth,\n            itemHeight: itemHeight,\n            galleryPadding: galleryPadding\n        };\n    }\n    function renderCloseButton(x, y, size, alpha) {\n        const padding = size * 0.25;\n        // Close button background\n        p.fill(50, 50, 50, 200 * (alpha / 255));\n        p.stroke(200, alpha);\n        p.strokeWeight(1);\n        p.rect(x, y, size, size);\n        // X symbol\n        p.stroke(200, alpha);\n        p.strokeWeight(2);\n        p.line(x + padding, y + padding, x + size - padding, y + size - padding);\n        p.line(x + size - padding, y + padding, x + padding, y + size - padding);\n    }\n    function renderPlayIcon(x, y, size, alpha) {\n        // Semi-transparent play button background\n        p.fill(0, 0, 0, 120 * (alpha / 255));\n        p.noStroke();\n        p.circle(x + size / 2, y + size / 2, size);\n        // Play triangle\n        p.fill(255, 255, 255, 180 * (alpha / 255));\n        const triangleSize = size * 0.35;\n        const triangleCenterX = x + size / 2 + triangleSize * 0.1;\n        const triangleCenterY = y + size / 2;\n        p.triangle(triangleCenterX - triangleSize / 2, triangleCenterY - triangleSize / 2, triangleCenterX - triangleSize / 2, triangleCenterY + triangleSize / 2, triangleCenterX + triangleSize / 2, triangleCenterY);\n    }\n    function initializeLayout() {\n        const s = (0, $baa6D.getViewportSize)();\n        short = p.min(s.width, s.height);\n        mobile = (0, $baa6D.widthCheck)(s.width);\n        cx = 0.5 * p.width;\n        cy = 0.5 * p.height;\n        r = 0.07 * short;\n        setupSolarSystem(r);\n        layoutUI();\n        layoutInitialized = true;\n    }\n    p.setup = async function setup() {\n        p.noCanvas();\n        p.pixelDensity(1);\n        const s = (0, $baa6D.getViewportSize)();\n        p.createCanvas(s.width, s.height);\n        initializeLayout();\n        p.background(23);\n        p.textAlign(p.CENTER, p.CENTER);\n        p.strokeCap(p.PROJECT);\n        await (0, $baa6D.loadGoogleFontSet)('../../assets/fonts/BPdotsSquareVF.ttf');\n        await (0, $baa6D.loadGoogleFontSet)('../../assets/fonts/ZxGamut.ttf');\n        p.textFont('BPdotsSquareVF', {\n            fontVariationSettings: `wght 900`\n        });\n        // p5 in instance mode doesn't seem to work well with elements in a shadow root and doesn't remove the \"p5_loading\" div by itself\n        let bg = document.getElementById(\"bg\");\n        let loading_div = bg.shadowRoot.getElementById(\"p5_loading\");\n        if (loading_div) loading_div.remove();\n        // Handle direct project navigation via URL parameter\n        if (options && options.project) {\n            pendingProjectSlug = options.project;\n            currentPath = `/interactive/live/${options.project}`;\n            // Store that we have an active project\n            sessionStorage.setItem('installationsActiveProject', options.project);\n        } else {\n            currentPath = '/interactive/live';\n            // Check if we had an active project before and now we don't\n            const wasActiveProject = sessionStorage.getItem('installationsActiveProject');\n            if (wasActiveProject) {\n                // We navigated back from a project to main page - clear the storage\n                sessionStorage.removeItem('installationsActiveProject');\n                // Ensure no project opens automatically on back navigation\n                pendingProjectSlug = null;\n                // Initialize with info card closed\n                activeInfoCard = null;\n                infoCardAlpha = 0;\n                targetAlpha = 0;\n                infoCardAnimating = false;\n            }\n        }\n        // Add hash change listener to detect back navigation within the same route\n        hashChangeHandler = function(event) {\n            const newHash = window.location.hash.substr(1);\n            const cleanPath = newHash && newHash !== '' ? newHash.startsWith('/') ? newHash : '/' + newHash : '/';\n            // If we're on the installations page and URL changed to just /interactive/live\n            // and we have an active info card, close it\n            if (cleanPath === '/interactive/live' && activeInfoCard !== null) closeInfoCard();\n        };\n        window.addEventListener('hashchange', hashChangeHandler);\n    };\n    p.draw = function draw() {\n        p.background(23);\n        frameCount++;\n        smoothX = (0, $baa6D.smoothFollow)(p.mouseX, smoothX, 0.003 * p.deltaTime);\n        smoothY = (0, $baa6D.smoothFollow)(p.mouseY, smoothY, 0.003 * p.deltaTime);\n        smoothV.x = smoothX;\n        smoothV.y = smoothY;\n        p.noFill();\n        p.stroke(230);\n        p.strokeWeight(1);\n        renderSolarSystem();\n        // Handle pending project opening after layout is initialized and a few frames have passed\n        if (pendingProjectSlug && layoutInitialized && planetButtons && planetButtons.length > 0 && frameCount > 5) {\n            const projectIndex = (0, $JTwtx.getProjectIndexBySlug)(pendingProjectSlug);\n            if (projectIndex !== -1 && projectIndex < planetButtons.length) {\n                openInfoCard(projectIndex);\n                pendingProjectSlug = null; // Clear the pending slug\n            } else // If project not found, clear the pending slug to avoid infinite attempts\n            pendingProjectSlug = null;\n        }\n        p.noFill();\n        p.stroke(230, 50);\n        const s = short * 0.03;\n        p.push();\n        p.translate(smoothX, smoothY);\n        p.rotate(p.TWO_PI * p.noise(smoothX / short, smoothY / short, 0.0001 * p.millis()));\n        p.circle(0, 0, 0.33 * s);\n        p.triangle(s, 0, s * p.cos(p.TWO_PI / 3), s * p.sin(p.TWO_PI / 3), s * p.cos(2 * p.TWO_PI / 3), s * p.sin(2 * p.TWO_PI / 3));\n        p.pop();\n        // Update info card animation\n        if (infoCardAnimating) {\n            const elapsed = p.millis() - infoCardAnimationStart;\n            const progress = p.constrain(elapsed / 250, 0, 1);\n            infoCardAlpha = p.lerp(infoCardAlpha, targetAlpha, progress);\n            if (progress >= 1) {\n                infoCardAnimating = false;\n                infoCardAlpha = targetAlpha;\n                if (targetAlpha === 0) activeInfoCard = null;\n            }\n        }\n        // Update gallery scrolling\n        if (!galleryDragging) galleryScrollX = p.lerp(galleryScrollX, targetGalleryScrollX, 0.1);\n        // Update expanded media animation\n        if (expandedMediaAnimating) {\n            const elapsed = p.millis() - expandedMediaAnimationStart;\n            const progress = p.constrain(elapsed / 300, 0, 1);\n            expandedMediaAlpha = p.lerp(expandedMediaAlpha, targetExpandedAlpha, progress);\n            if (progress >= 1) {\n                expandedMediaAnimating = false;\n                expandedMediaAlpha = targetExpandedAlpha;\n                if (targetExpandedAlpha === 0) expandedMediaIndex = null;\n            }\n        }\n        // Update cursor based on hover state\n        // Don't include planet buttons when info card is active\n        const hoverTargets = activeInfoCard !== null ? [\n            ui,\n            getCloseButtonHoverCheck(),\n            getNavigationButtonHoverCheck()\n        ] : [\n            ui,\n            ...planetButtons,\n            getCloseButtonHoverCheck()\n        ];\n        (0, $baa6D.updateCursor)(p, p.mouseX, p.mouseY, ...hoverTargets);\n        // Render active info card\n        if (activeInfoCard !== null || infoCardAlpha > 0) renderInfoCard((0, $JTwtx.projects)[activeInfoCard]);\n        // Render expanded media overlay\n        if (expandedMediaIndex !== null || expandedMediaAlpha > 0) renderExpandedMedia();\n    };\n    p.windowResized = function windowResized() {\n        const s = (0, $baa6D.getViewportSize)();\n        p.resizeCanvas(s.width, s.height);\n        initializeLayout();\n    };\n    p.mousePressed = function(event) {\n        if (event && event.button !== 0) return;\n        const ANIMATION_DELAY = 500;\n        // Check if clicking on expanded media overlay\n        if (expandedMediaIndex !== null) {\n            const project = (0, $JTwtx.projects)[activeInfoCard];\n            const mediaItem = project.images[expandedMediaIndex];\n            let pathString;\n            if (typeof mediaItem === 'string') pathString = mediaItem;\n            else if (mediaItem && typeof mediaItem === 'object') pathString = mediaItem.default || mediaItem.src || mediaItem.href || mediaItem.toString();\n            else pathString = String(mediaItem);\n            const isVideo = pathString.toLowerCase().match(/\\.(mp4|mov|webm|avi)(\\?.*)?$/i);\n            const isMobile = (0, $baa6D.widthCheck)(p.width);\n            const maxWidth = isMobile ? p.width : p.width * 0.8;\n            const maxHeight = isMobile ? p.height * 0.8 : p.height * 0.8;\n            let mediaWidth, mediaHeight;\n            if (isVideo) {\n                // For native videos, use standard dimensions\n                const aspectRatio = nativeVideoElement && nativeVideoElement.videoWidth && nativeVideoElement.videoHeight ? nativeVideoElement.videoWidth / nativeVideoElement.videoHeight : 16 / 9;\n                if (aspectRatio > maxWidth / maxHeight) {\n                    mediaWidth = maxWidth;\n                    mediaHeight = maxWidth / aspectRatio;\n                } else {\n                    mediaHeight = maxHeight;\n                    mediaWidth = maxHeight * aspectRatio;\n                }\n            } else {\n                // For images, get from loaded media\n                const mediaData = loadedMedia.get(pathString);\n                if (mediaData && mediaData.loaded) {\n                    const img = mediaData.element;\n                    const aspectRatio = img.width / img.height;\n                    if (aspectRatio > maxWidth / maxHeight) {\n                        mediaWidth = maxWidth;\n                        mediaHeight = maxWidth / aspectRatio;\n                    } else {\n                        mediaHeight = maxHeight;\n                        mediaWidth = maxHeight * aspectRatio;\n                    }\n                } else return; // Image not ready\n            }\n            const mediaX = (p.width - mediaWidth) / 2;\n            const mediaY = (p.height - mediaHeight) / 2;\n            // Check close button\n            const closeSize = 40;\n            const closeX = mediaX + mediaWidth - closeSize - 10;\n            const closeY = mediaY + 10;\n            if (p.mouseX >= closeX && p.mouseX <= closeX + closeSize && p.mouseY >= closeY && p.mouseY <= closeY + closeSize) {\n                closeExpandedMedia();\n                return;\n            }\n            // Native video players handle their own controls\n            // Click outside media closes it\n            if (p.mouseX < mediaX || p.mouseX > mediaX + mediaWidth || p.mouseY < mediaY || p.mouseY > mediaY + mediaHeight) {\n                closeExpandedMedia();\n                return;\n            }\n            return;\n        }\n        // Check UI elements\n        ui.forEach((ui_element, index)=>{\n            if (ui_element.contains(p.mouseX, p.mouseY)) {\n                // Navigate based on which UI element was clicked\n                if (window.appRouter) switch(index){\n                    case 0:\n                        setTimeout(()=>{\n                            window.appRouter.navigate('/codeart');\n                        }, ANIMATION_DELAY);\n                        break;\n                    case 1:\n                        // Add photo route when available\n                        console.log('Photo section coming soon!');\n                        break;\n                    case 2:\n                        setTimeout(()=>{\n                            window.appRouter.navigate('/about');\n                        }, ANIMATION_DELAY);\n                        break;\n                }\n                return;\n            }\n        });\n        // Check if clicking on info card or close button\n        if (activeInfoCard !== null) {\n            const { size: cardSize, x: cardX, y: cardY, isMobile: isMobile } = getCardDimensions();\n            const closeButtonSize = isMobile ? 44 : 30;\n            const closeButtonX = cardX + cardSize - closeButtonSize - 10;\n            const closeButtonY = cardY + 10;\n            // Check if clicking close button\n            if (p.mouseX >= closeButtonX && p.mouseX <= closeButtonX + closeButtonSize && p.mouseY >= closeButtonY && p.mouseY <= closeButtonY + closeButtonSize) {\n                closeInfoCard();\n                return;\n            }\n            // Check if clicking navigation arrows\n            if ((0, $JTwtx.projects).length > 1) {\n                const arrowSize = isMobile ? 50 : 40;\n                const arrowPadding = isMobile ? 20 : 15;\n                const arrowY = cardY + cardSize + arrowPadding;\n                const totalArrowWidth = arrowSize * 2 + arrowPadding * 3;\n                const arrowStartX = cardX + (cardSize - totalArrowWidth) / 2;\n                const leftArrowX = arrowStartX + arrowPadding;\n                const rightArrowX = arrowStartX + arrowPadding * 2 + arrowSize;\n                // Check left arrow (previous with wraparound)\n                if (p.mouseX >= leftArrowX && p.mouseX <= leftArrowX + arrowSize && p.mouseY >= arrowY && p.mouseY <= arrowY + arrowSize) {\n                    const prevIndex = activeInfoCard === 0 ? (0, $JTwtx.projects).length - 1 : activeInfoCard - 1;\n                    navigateToProject(prevIndex);\n                    return;\n                }\n                // Check right arrow (next with wraparound)\n                if (p.mouseX >= rightArrowX && p.mouseX <= rightArrowX + arrowSize && p.mouseY >= arrowY && p.mouseY <= arrowY + arrowSize) {\n                    const nextIndex = activeInfoCard === (0, $JTwtx.projects).length - 1 ? 0 : activeInfoCard + 1;\n                    navigateToProject(nextIndex);\n                    return;\n                }\n            }\n            // Check if clicking in gallery area\n            const project = (0, $JTwtx.projects)[activeInfoCard];\n            if (project.images && project.images.length > 0) {\n                const baseTextScale = isMobile ? cardSize / 400 : cardSize / 600;\n                const padding = 25 * baseTextScale;\n                const lineHeight = 25 * baseTextScale;\n                const galleryY = cardY + padding + lineHeight * 5.3; // Approximate gallery Y position\n                const galleryHeight = cardSize * 0.4;\n                if (p.mouseX >= cardX + padding && p.mouseX <= cardX + cardSize - padding && p.mouseY >= galleryY && p.mouseY <= galleryY + galleryHeight) {\n                    // Start gallery dragging\n                    galleryDragging = true;\n                    galleryDragStartX = p.mouseX;\n                    galleryStartScrollX = galleryScrollX;\n                    return;\n                }\n            }\n            // Check if clicking outside the card\n            if (p.mouseX < cardX || p.mouseX > cardX + cardSize || p.mouseY < cardY || p.mouseY > cardY + cardSize) {\n                closeInfoCard();\n                return;\n            }\n            // If clicking inside the card (but not close button), do nothing\n            return;\n        }\n        // Check planet buttons\n        planetButtons.forEach((planetButton, index)=>{\n            if (planetButton.contains(p.mouseX, p.mouseY)) {\n                openInfoCard(index);\n                // Update URL to include project slug\n                const project = (0, $JTwtx.projects)[index];\n                if (project && project.slug && window.appRouter) {\n                    const newPath = `/interactive/live/${project.slug}`;\n                    // Only update if the current path is different\n                    if (window.location.hash !== `#${newPath}`) {\n                        window.history.pushState(null, '', `#${newPath}`);\n                        currentPath = newPath;\n                    }\n                }\n                return;\n            }\n        });\n    };\n    p.mouseDragged = function() {\n        if (galleryDragging && activeInfoCard !== null) {\n            const dragDistance = p.mouseX - galleryDragStartX;\n            galleryScrollX = galleryStartScrollX + dragDistance;\n            targetGalleryScrollX = galleryScrollX;\n        }\n    };\n    p.mouseReleased = function() {\n        if (galleryDragging) {\n            const dragDistance = Math.abs(p.mouseX - galleryDragStartX);\n            galleryDragging = false;\n            // If minimal drag (< 5 pixels), treat as a click for media expansion\n            if (dragDistance < 5 && activeInfoCard !== null) {\n                const project = (0, $JTwtx.projects)[activeInfoCard];\n                if (project && project.images && project.images.length > 0) {\n                    const { size: cardSize, x: cardX, y: cardY, isMobile: isMobile } = getCardDimensions();\n                    const { galleryY: galleryY, galleryHeight: galleryHeight, baseTextScale: baseTextScale, padding: padding } = getGalleryLayout(cardSize, cardX, cardY, isMobile);\n                    const { itemWidth: itemWidth, itemHeight: itemHeight, galleryPadding: galleryPadding } = getGalleryItemDimensions(galleryHeight, baseTextScale);\n                    const startX = cardX + padding + galleryPadding; // Left padding\n                    const startY = galleryY + galleryPadding; // Top padding\n                    // Check if clicking on a specific media item\n                    for(let i = 0; i < project.images.length; i++){\n                        const itemX = startX + i * (itemWidth + galleryPadding) + galleryScrollX;\n                        if (p.mouseX >= itemX && p.mouseX <= itemX + itemWidth && p.mouseY >= startY && p.mouseY <= startY + itemHeight) {\n                            openExpandedMedia(i);\n                            return;\n                        }\n                    }\n                }\n            }\n            // Apply momentum/easing to final scroll position\n            const project = (0, $JTwtx.projects)[activeInfoCard];\n            if (project && project.images && project.images.length > 0) {\n                const cardSize = (0, $baa6D.widthCheck)(p.width) ? p.min(p.width * 0.95, p.height * 0.9) : p.min(p.width * 0.9, p.height * 0.85, 900);\n                const isMobile = (0, $baa6D.widthCheck)(p.width);\n                const baseTextScale = isMobile ? cardSize / 400 : cardSize / 600;\n                const padding = 25 * baseTextScale;\n                const galleryWidth = cardSize - 2 * padding;\n                const galleryHeight = cardSize * 0.4;\n                const itemHeight = galleryHeight * 0.9;\n                const itemWidth = itemHeight * 1.5; // 3:2 aspect ratio\n                const itemSpacing = 20 * baseTextScale;\n                const totalWidth = project.images.length * (itemWidth + itemSpacing) - itemSpacing;\n                const maxScroll = p.max(0, totalWidth - galleryWidth + 20 * baseTextScale);\n                targetGalleryScrollX = p.constrain(targetGalleryScrollX, -maxScroll, 0);\n            }\n        }\n    };\n    p.mouseWheel = function(event) {\n        if (activeInfoCard !== null) {\n            const project = (0, $JTwtx.projects)[activeInfoCard];\n            if (project && project.images && project.images.length > 0) {\n                // Check if mouse is over gallery area\n                const { size: cardSize, x: cardX, y: cardY, isMobile: isMobile } = getCardDimensions();\n                const { galleryY: galleryY, galleryHeight: galleryHeight, baseTextScale: baseTextScale, padding: padding } = getGalleryLayout(cardSize, cardX, cardY, isMobile);\n                if (p.mouseX >= cardX + padding && p.mouseX <= cardX + cardSize - padding && p.mouseY >= galleryY && p.mouseY <= galleryY + galleryHeight) {\n                    const scrollAmount = event.delta * 2;\n                    targetGalleryScrollX -= scrollAmount;\n                    // Constrain scroll bounds using correct 3:2 aspect ratio\n                    const galleryWidth = cardSize - 2 * padding;\n                    const itemHeight = galleryHeight * 0.9;\n                    const itemWidth = itemHeight * 1.5; // 3:2 aspect ratio\n                    const itemSpacing = 20 * baseTextScale;\n                    const totalWidth = project.images.length * (itemWidth + itemSpacing) - itemSpacing;\n                    const maxScroll = p.max(0, totalWidth - galleryWidth + 20 * baseTextScale);\n                    targetGalleryScrollX = p.constrain(targetGalleryScrollX, -maxScroll, 0);\n                    return false; // Prevent page scroll\n                }\n            }\n        }\n    };\n    function layoutUI() {\n        ui.length = 0;\n        const s_font = Math.max(0.022 * p.width, 32);\n    }\n    function openInfoCard(index) {\n        activeInfoCard = index;\n        targetAlpha = 255;\n        infoCardAnimationStart = p.millis();\n        infoCardAnimating = true;\n        galleryScrollX = 0;\n        targetGalleryScrollX = 0;\n        galleryDragging = false;\n        loadMediaForProject((0, $JTwtx.projects)[index]);\n        // Disable browser swipe navigation while info card is open\n        document.body.style.overscrollBehavior = 'none';\n        document.body.style.touchAction = 'none';\n        // Update breadcrumb to show current project\n        const project = (0, $JTwtx.projects)[index];\n        if (project && project.slug) Promise.resolve((parcelRequire(\"drhU0\"))).then(({ updateBreadcrumb: updateBreadcrumb })=>{\n            updateBreadcrumb(`/interactive/live/${project.slug}`);\n        });\n    }\n    function closeInfoCard() {\n        targetAlpha = 0;\n        infoCardAnimationStart = p.millis();\n        infoCardAnimating = true;\n        galleryScrollX = 0;\n        targetGalleryScrollX = 0;\n        galleryDragging = false;\n        // Clean up any expanded media\n        if (expandedMediaIndex !== null) closeExpandedMedia();\n        // Re-enable browser swipe navigation when info card is closed\n        document.body.style.overscrollBehavior = '';\n        document.body.style.touchAction = '';\n        // Update URL back to main installations page\n        if (window.location.hash.includes('/interactive/live/') && window.location.hash !== '#/interactive/live') {\n            window.history.pushState(null, '', '#/interactive/live');\n            currentPath = '/interactive/live';\n        }\n        // Update breadcrumb back to installations page\n        Promise.resolve((parcelRequire(\"drhU0\"))).then(({ updateBreadcrumb: updateBreadcrumb })=>{\n            updateBreadcrumb('/interactive/live');\n        });\n        // Clear session storage\n        sessionStorage.removeItem('installationsActiveProject');\n    }\n    function getCloseButtonHoverCheck() {\n        return (mouseX, mouseY)=>{\n            if (activeInfoCard !== null) {\n                const { size: cardSize, x: cardX, y: cardY, isMobile: isMobile } = getCardDimensions();\n                const closeButtonSize = isMobile ? 44 : 30;\n                const closeButtonX = cardX + cardSize - closeButtonSize - 10;\n                const closeButtonY = cardY + 10;\n                return mouseX >= closeButtonX && mouseX <= closeButtonX + closeButtonSize && mouseY >= closeButtonY && mouseY <= closeButtonY + closeButtonSize;\n            }\n            return false;\n        };\n    }\n    function setupSolarSystem(starRadius) {\n        planetButtons = [];\n        /*\n        If this gets too busy, we could consider having a \"system\" for each year that can be selected from a side/bottom menu?\n        OR we make a larger virtual canvas and \"pan\" around to visit other systems? >:^)\n        */ const planetCount = (0, $JTwtx.projects).length;\n        for(let i = 0; i < planetCount; i++){\n            const orbitRadius = starRadius * (1.8 + i * 0.8);\n            const angle = p.random(p.TWO_PI);\n            const speed = 0.00005 / (1 + i * 0.3);\n            const size = starRadius * (0.3 + p.random(0.2));\n            const color = p.map(i, 0, planetCount, 230, 120);\n            const textSize = mobile ? Math.max(16, size * 0.8) : Math.max(14, size * 0.7);\n            const textOffsetY = size * 1.2; // Position text below planet\n            planetButtons.push(new (0, $baa6D.UIPlanetButton)(p, 0, 0, size, orbitRadius, angle, speed, color, (0, $JTwtx.projects)[i].name, textSize, 0, textOffsetY));\n        }\n    }\n    function renderSolarSystem() {\n        // Draw the central star\n        renderStar(cx, cy, r);\n        // Draw planets\n        p.noFill();\n        p.strokeWeight(1);\n        planetButtons.forEach((planetButton, idx)=>{\n            // Update planet position\n            planetButton.updatePosition(cx, cy, p.deltaTime);\n            // Draw orbital path (faint)\n            p.noFill();\n            p.stroke(80, 80, 80, 100);\n            p.strokeWeight(1);\n            p.circle(cx, cy, planetButton.orbitRadius * 2);\n            // Render planet\n            planetButton.render(smoothV, short);\n        });\n    }\n    function renderStar(x, y, radius) {\n        // Draw the central star body\n        p.fill(star_colours[0]);\n        p.noStroke();\n        p.circle(x, y, radius * 0.8);\n        // Draw rotating triangle ring\n        const triangleCount = 3;\n        const ringRadius = radius * (0.69 + 0.03 * p.sin(0.001 * p.millis()));\n        const triangleSize = radius * 0.15;\n        const rotationSpeed = 0.00005;\n        const currentTime = p.millis();\n        const rotationAngle = currentTime * rotationSpeed;\n        for(let i = 0; i < triangleCount; i++){\n            const angle = p.TWO_PI / triangleCount * i + rotationAngle;\n            const trianglePos = radialToCartesian(ringRadius, angle);\n            const triangleX = x + trianglePos.x;\n            const triangleY = y + trianglePos.y;\n            p.push();\n            p.translate(triangleX, triangleY);\n            p.rotate(-angle + p.HALF_PI); // Point triangles outward\n            p.triangle(0, -triangleSize * 0.6, -triangleSize * 0.5, triangleSize * 0.5, triangleSize * 0.5, triangleSize * 0.5);\n            p.pop();\n        }\n    }\n    function renderInfoCard(project) {\n        // Calculate card size based on screen size\n        const { size: cardSize, x: cardX, y: cardY, isMobile: isMobile } = getCardDimensions();\n        // Card background with semi-transparent overlay\n        p.fill(0, 0, 0, 120 * (infoCardAlpha / 255));\n        p.noStroke();\n        p.rect(0, 0, p.width, p.height);\n        // Main card background\n        p.fill(23, 23, 23, 240 * (infoCardAlpha / 255));\n        p.stroke(230, infoCardAlpha);\n        p.strokeWeight(2);\n        p.rect(cardX, cardY, cardSize, cardSize);\n        // Close button\n        const closeButtonSize = isMobile ? 44 : 30;\n        const closeButtonX = cardX + cardSize - closeButtonSize - 10;\n        const closeButtonY = cardY + 10;\n        renderCloseButton(closeButtonX, closeButtonY, closeButtonSize, infoCardAlpha);\n        // Text styling\n        p.fill(230, infoCardAlpha);\n        p.noStroke();\n        p.textAlign(p.LEFT, p.TOP);\n        // Scale text sizes based on card size - smaller fonts for desktop\n        const baseTextScale = isMobile ? cardSize / 400 : cardSize / 600;\n        const padding = 25 * baseTextScale;\n        const lineHeight = 25 * baseTextScale;\n        let textY = cardY + padding;\n        // Project Name (larger)\n        p.textFont('BPdotsSquareVF', {\n            fontVariationSettings: `wght 900`\n        });\n        p.textSize(24 * baseTextScale);\n        p.text(project.name, cardX + padding, textY, cardSize - 2 * padding - closeButtonSize);\n        textY += lineHeight * 1.8;\n        // Type\n        p.textSize(16 * baseTextScale);\n        p.text(project.type, cardX + padding, textY, cardSize - 2 * padding);\n        textY += lineHeight;\n        // Location\n        p.text(project.location, cardX + padding, textY, cardSize - 2 * padding);\n        textY += lineHeight;\n        // Year\n        p.text(project.year, cardX + padding, textY, cardSize - 2 * padding);\n        textY += lineHeight * 1.5;\n        // Gallery section (if images exist)\n        if (project.images && project.images.length > 0) {\n            const galleryHeight = cardSize * 0.4;\n            const galleryY = textY;\n            renderGallery(project.images, cardX + padding, galleryY, cardSize - 2 * padding, galleryHeight, baseTextScale);\n            textY += galleryHeight + lineHeight;\n        }\n        // Description (if available)\n        if (project.description && project.description.length > 0) {\n            p.textFont('ZxGamut', {\n                fontVariationSettings: `wght 400`\n            });\n            p.textSize(14 * baseTextScale);\n            p.fill(230, infoCardAlpha);\n            p.noStroke();\n            const descriptionHeight = cardSize - (textY - cardY) - padding;\n            p.text(project.description, cardX + padding, textY, cardSize - 2 * padding, descriptionHeight);\n            // Reset font back to default\n            p.textFont('BPdotsSquareVF', {\n                fontVariationSettings: `wght 900`\n            });\n        }\n        // Navigation arrows (only show if there are multiple projects)\n        if ((0, $JTwtx.projects).length > 1) renderNavigationArrows(cardX, cardY, cardSize, isMobile, baseTextScale);\n    }\n    function renderNavigationArrows(cardX, cardY, cardSize, isMobile, baseTextScale) {\n        // Arrow button dimensions - responsive to screen size\n        const arrowSize = isMobile ? 50 : 40;\n        const arrowPadding = isMobile ? 20 : 15;\n        const arrowY = cardY + cardSize + arrowPadding;\n        // Position arrows centered below the card\n        const totalArrowWidth = arrowSize * 2 + arrowPadding * 3; // 2 arrows + spacing\n        const arrowStartX = cardX + (cardSize - totalArrowWidth) / 2;\n        const leftArrowX = arrowStartX + arrowPadding;\n        const rightArrowX = arrowStartX + arrowPadding * 2 + arrowSize;\n        // Arrows are always active with wraparound navigation\n        const arrowAlpha = infoCardAlpha;\n        // Left arrow (previous with wraparound)\n        renderArrowButton(leftArrowX, arrowY, arrowSize, 'left', arrowAlpha, isMobile);\n        // Right arrow (next with wraparound)  \n        renderArrowButton(rightArrowX, arrowY, arrowSize, 'right', arrowAlpha, isMobile);\n        // Project counter text (e.g., \"2 / 7\")\n        const counterY = arrowY + arrowSize + (isMobile ? 25 : 20);\n        p.fill(230, infoCardAlpha);\n        p.noStroke();\n        p.textAlign(p.CENTER, p.CENTER);\n        p.textFont('BPdotsSquareVF', {\n            fontVariationSettings: `wght 600`\n        });\n        p.textSize((isMobile ? 16 : 14) * baseTextScale);\n        p.text(`${activeInfoCard + 1} / ${(0, $JTwtx.projects).length}`, cardX + cardSize / 2, counterY);\n    }\n    function renderArrowButton(x, y, size, direction, alpha, isMobile) {\n        // Button background\n        p.fill(40, 40, 40, alpha);\n        p.stroke(100, alpha);\n        p.strokeWeight(isMobile ? 2 : 1);\n        p.rect(x, y, size, size);\n        // Arrow symbol\n        p.fill(230, alpha);\n        p.noStroke();\n        const arrowPadding = size * 0.25;\n        const arrowCenterX = x + size / 2;\n        const arrowCenterY = y + size / 2;\n        const arrowWidth = size * 0.3;\n        const arrowHeight = size * 0.4;\n        if (direction === 'left') // Left-pointing triangle\n        p.triangle(arrowCenterX - arrowWidth / 2, arrowCenterY, arrowCenterX + arrowWidth / 2, arrowCenterY - arrowHeight / 2, arrowCenterX + arrowWidth / 2, arrowCenterY + arrowHeight / 2);\n        else // Right-pointing triangle  \n        p.triangle(arrowCenterX + arrowWidth / 2, arrowCenterY, arrowCenterX - arrowWidth / 2, arrowCenterY - arrowHeight / 2, arrowCenterX - arrowWidth / 2, arrowCenterY + arrowHeight / 2);\n    }\n    function navigateToProject(newIndex, fromHashChange = false) {\n        if (newIndex >= 0 && newIndex < (0, $JTwtx.projects).length && newIndex !== activeInfoCard) {\n            // Update active info card\n            activeInfoCard = newIndex;\n            // Reset gallery scroll\n            galleryScrollX = 0;\n            targetGalleryScrollX = 0;\n            // Close any expanded media\n            if (expandedMediaIndex !== null) closeExpandedMedia();\n            // Load media for new project\n            loadMediaForProject((0, $JTwtx.projects)[newIndex]);\n            // Update URL and breadcrumb\n            const newProject = (0, $JTwtx.projects)[newIndex];\n            if (newProject && newProject.slug) {\n                const newPath = `/interactive/live/${newProject.slug}`;\n                // Only update URL if this wasn't triggered by a hash change\n                if (!fromHashChange) {\n                    isInternalNavigation = true;\n                    window.history.replaceState(null, '', `#${newPath}`);\n                }\n                currentPath = newPath;\n                // Update breadcrumb\n                Promise.resolve((parcelRequire(\"drhU0\"))).then(({ updateBreadcrumb: updateBreadcrumb })=>{\n                    updateBreadcrumb(newPath);\n                });\n                // Update session storage\n                sessionStorage.setItem('installationsActiveProject', newProject.slug);\n            }\n        }\n    }\n    function getNavigationButtonHoverCheck() {\n        return (mouseX, mouseY)=>{\n            if (activeInfoCard !== null && (0, $JTwtx.projects).length > 1) {\n                const { size: cardSize, x: cardX, y: cardY, isMobile: isMobile } = getCardDimensions();\n                const arrowSize = isMobile ? 50 : 40;\n                const arrowPadding = isMobile ? 20 : 15;\n                const arrowY = cardY + cardSize + arrowPadding;\n                const totalArrowWidth = arrowSize * 2 + arrowPadding * 3;\n                const arrowStartX = cardX + (cardSize - totalArrowWidth) / 2;\n                const leftArrowX = arrowStartX + arrowPadding;\n                const rightArrowX = arrowStartX + arrowPadding * 2 + arrowSize;\n                // Check left arrow (always active with wraparound)\n                if (mouseX >= leftArrowX && mouseX <= leftArrowX + arrowSize && mouseY >= arrowY && mouseY <= arrowY + arrowSize) return true;\n                // Check right arrow (always active with wraparound)\n                if (mouseX >= rightArrowX && mouseX <= rightArrowX + arrowSize && mouseY >= arrowY && mouseY <= arrowY + arrowSize) return true;\n            }\n            return false;\n        };\n    }\n    function loadMediaForProject(project) {\n        if (!project.images || project.images.length === 0) return;\n        project.images.forEach((mediaItem, index)=>{\n            const pathString = (0, $baa6D.getMediaPath)(mediaItem);\n            if (!loadedMedia.has(pathString)) {\n                const isVideo = (0, $baa6D.isVideoFile)(pathString);\n                // On mobile, check if we have a thumbnail for this video\n                if (mobile && isVideo) {\n                    if (project.thumbnails && project.thumbnails[mediaItem]) {\n                        // Load thumbnail image instead of video for mobile\n                        const thumbnailPath = project.thumbnails[mediaItem];\n                        p.loadImage(thumbnailPath, (img)=>{\n                            loadedMedia.set(pathString, {\n                                element: img,\n                                type: 'video-thumbnail',\n                                videoSrc: pathString,\n                                loaded: true\n                            });\n                        }, (err)=>{\n                            console.error('Failed to load video thumbnail:', thumbnailPath, err);\n                            // Fallback to black placeholder if thumbnail fails\n                            loadedMedia.set(pathString, {\n                                element: null,\n                                type: 'video-placeholder',\n                                videoSrc: pathString,\n                                loaded: true\n                            });\n                        });\n                    } else // No thumbnail available - use black placeholder\n                    loadedMedia.set(pathString, {\n                        element: null,\n                        type: 'video-placeholder',\n                        videoSrc: pathString,\n                        loaded: true\n                    });\n                    return;\n                }\n                if (isVideo) loadVideoElement(pathString);\n                else p.loadImage(pathString, (img)=>{\n                    loadedMedia.set(pathString, {\n                        element: img,\n                        type: 'image',\n                        loaded: true\n                    });\n                }, (err)=>{\n                    console.error('Failed to load image:', pathString, err);\n                });\n            }\n        });\n    }\n    function loadVideoElement(pathString) {\n        const video = p.createVideo(pathString, ()=>{\n            loadedMedia.set(pathString, {\n                element: video,\n                type: 'video',\n                loaded: true\n            });\n        });\n        video.hide();\n        video.volume(0);\n        // Set attributes for iOS compatibility first\n        video.elt.setAttribute('playsinline', true);\n        video.elt.setAttribute('muted', true);\n        video.elt.setAttribute('preload', 'metadata');\n        // Different behavior for mobile vs desktop\n        if (!mobile) // Desktop: autoplay looping for moving preview\n        video.loop();\n        else {\n            // Mobile: load first frame only (fallback when no thumbnail available)\n            video.noLoop();\n            video.pause();\n            video.elt.addEventListener('loadedmetadata', ()=>{\n                video.elt.currentTime = 0.1;\n            });\n            video.elt.addEventListener('seeked', ()=>{\n                video.pause();\n            });\n        }\n        video.elt.addEventListener('loadeddata', ()=>{\n            loadedMedia.set(pathString, {\n                element: video,\n                type: 'video',\n                loaded: true\n            });\n        });\n        video.elt.addEventListener('canplay', ()=>{\n            loadedMedia.set(pathString, {\n                element: video,\n                type: 'video',\n                loaded: true\n            });\n        });\n        loadedMedia.set(pathString, {\n            element: video,\n            type: 'video',\n            loaded: false\n        });\n        setTimeout(()=>{\n            const currentData = loadedMedia.get(pathString);\n            if (currentData && !currentData.loaded) loadedMedia.set(pathString, {\n                element: video,\n                type: 'video',\n                loaded: true\n            });\n        }, 3000);\n    }\n    function renderGallery(images, x, y, width, height, scale) {\n        if (!images || images.length === 0) return;\n        // Gallery container background\n        p.fill(0, 0, 0, 100 * (infoCardAlpha / 255));\n        p.stroke(230, infoCardAlpha * 0.3);\n        p.strokeWeight(1);\n        p.rect(x, y, width, height);\n        // Set up clipping mask for gallery\n        p.push();\n        // Create clipping rectangle\n        p.drawingContext.save();\n        p.drawingContext.beginPath();\n        p.drawingContext.rect(x, y, width, height);\n        p.drawingContext.clip();\n        // Use 3:2 aspect ratio for gallery items with equal padding\n        const padding = 10 * scale; // Equal padding for all sides and between items\n        const itemHeight = height - 2 * padding; // Account for top and bottom padding\n        const itemWidth = itemHeight * 1.5; // 3:2 aspect ratio\n        const totalWidth = images.length * (itemWidth + padding) - padding; // Last item doesn't need trailing padding\n        const startX = x + padding; // Left padding\n        const startY = y + padding; // Top padding\n        // Constrain scroll bounds\n        const maxScroll = p.max(0, totalWidth - width + 2 * padding);\n        targetGalleryScrollX = p.constrain(targetGalleryScrollX, -maxScroll, 0);\n        // Render media items\n        images.forEach((mediaItem, index)=>{\n            const pathString = (0, $baa6D.getMediaPath)(mediaItem);\n            const itemX = startX + index * (itemWidth + padding) + galleryScrollX;\n            // Only render if visible\n            if (itemX + itemWidth >= x && itemX <= x + width) {\n                const mediaData = loadedMedia.get(pathString);\n                if (mediaData && mediaData.loaded) {\n                    p.push();\n                    p.tint(255, infoCardAlpha);\n                    try {\n                        if (mediaData.type === 'image') {\n                            // Fill the entire box, cropping as needed\n                            const img = mediaData.element;\n                            const { sourceX: sourceX, sourceY: sourceY, sourceWidth: sourceWidth, sourceHeight: sourceHeight } = (0, $baa6D.calculateCropDimensions)(img.width, img.height, itemWidth, itemHeight);\n                            p.image(img, itemX, startY, itemWidth, itemHeight, sourceX, sourceY, sourceWidth, sourceHeight);\n                        } else if (mediaData.type === 'video-thumbnail') {\n                            // Mobile: Show thumbnail image with play icon\n                            const img = mediaData.element;\n                            const { sourceX: sourceX, sourceY: sourceY, sourceWidth: sourceWidth, sourceHeight: sourceHeight } = (0, $baa6D.calculateCropDimensions)(img.width, img.height, itemWidth, itemHeight);\n                            p.image(img, itemX, startY, itemWidth, itemHeight, sourceX, sourceY, sourceWidth, sourceHeight);\n                            // Small play icon overlay\n                            const playSize = itemWidth * 0.15;\n                            const playX = itemX + (itemWidth - playSize) / 2;\n                            const playY = startY + (itemHeight - playSize) / 2;\n                            renderPlayIcon(playX, playY, playSize, infoCardAlpha);\n                        } else if (mediaData.type === 'video') {\n                            // Show first frame of video as preview\n                            const video = mediaData.element;\n                            if (video.elt && (video.elt.readyState >= 1 || video.elt.videoWidth > 0)) {\n                                const videoWidth = video.elt.videoWidth || video.width || 1920;\n                                const videoHeight = video.elt.videoHeight || video.height || 1080;\n                                const { sourceX: sourceX, sourceY: sourceY, sourceWidth: sourceWidth, sourceHeight: sourceHeight } = (0, $baa6D.calculateCropDimensions)(videoWidth, videoHeight, itemWidth, itemHeight);\n                                p.image(video, itemX, startY, itemWidth, itemHeight, sourceX, sourceY, sourceWidth, sourceHeight);\n                            } else {\n                                // Fallback to dark background if video not ready\n                                p.fill(40, 40, 40, 200 * (infoCardAlpha / 255));\n                                p.noStroke();\n                                p.rect(itemX, startY, itemWidth, itemHeight);\n                            }\n                            // Smaller, more subtle play icon overlay\n                            const playSize = itemWidth * 0.15; // Reduced from 0.3 to 0.15\n                            const playX = itemX + (itemWidth - playSize) / 2;\n                            const playY = startY + (itemHeight - playSize) / 2;\n                            // Semi-transparent play button background\n                            p.fill(0, 0, 0, 120 * (infoCardAlpha / 255)); // Darker, more subtle\n                            p.noStroke();\n                            p.circle(playX + playSize / 2, playY + playSize / 2, playSize);\n                            // Play triangle - smaller and more subtle\n                            p.fill(255, 255, 255, 180 * (infoCardAlpha / 255));\n                            const triangleSize = playSize * 0.35;\n                            const triangleCenterX = playX + playSize / 2 + triangleSize * 0.1;\n                            const triangleCenterY = playY + playSize / 2;\n                            p.triangle(triangleCenterX - triangleSize / 2, triangleCenterY - triangleSize / 2, triangleCenterX - triangleSize / 2, triangleCenterY + triangleSize / 2, triangleCenterX + triangleSize / 2, triangleCenterY);\n                        } else if (mediaData.type === 'video-placeholder') {\n                            // Mobile: Show black placeholder with play icon\n                            p.fill(23, 23, 23, 240 * (infoCardAlpha / 255));\n                            p.noStroke();\n                            p.rect(itemX, startY, itemWidth, itemHeight);\n                            // Small play icon overlay\n                            const playSize = itemWidth * 0.15;\n                            const playX = itemX + (itemWidth - playSize) / 2;\n                            const playY = startY + (itemHeight - playSize) / 2;\n                            renderPlayIcon(playX, playY, playSize, infoCardAlpha);\n                        }\n                    } catch (error) {\n                        console.warn('Error rendering media:', error);\n                        // Fall back to placeholder\n                        p.fill(80, 80, 80, 150 * (infoCardAlpha / 255));\n                        p.stroke(120, infoCardAlpha * 0.5);\n                        p.strokeWeight(1);\n                        p.rect(itemX, startY, itemWidth, itemHeight);\n                        // Show error text\n                        p.fill(200, infoCardAlpha * 0.7);\n                        p.noStroke();\n                        p.textAlign(p.CENTER, p.CENTER);\n                        p.textSize(10 * scale);\n                        p.text(mediaData.type === 'video' ? 'Video Error' : 'Image Error', itemX + itemWidth / 2, startY + itemHeight / 2);\n                    }\n                    p.pop();\n                } else {\n                    // Placeholder for loading media\n                    p.fill(50, 50, 50, 150 * (infoCardAlpha / 255));\n                    p.stroke(100, infoCardAlpha * 0.5);\n                    p.strokeWeight(1);\n                    p.rect(itemX, startY, itemWidth, itemHeight);\n                    // Loading text\n                    p.fill(150, infoCardAlpha * 0.7);\n                    p.noStroke();\n                    p.textAlign(p.CENTER, p.CENTER);\n                    p.textSize(12 * scale);\n                    p.text('Loading...', itemX + itemWidth / 2, startY + itemHeight / 2);\n                }\n                // Media border\n                p.noFill();\n                p.stroke(230, infoCardAlpha * 0.6);\n                p.strokeWeight(1);\n                p.rect(itemX, startY, itemWidth, itemHeight);\n            }\n        });\n        // Scroll indicators (if needed)\n        if (totalWidth > width) {\n            const indicatorAlpha = infoCardAlpha * 0.8;\n            // Left scroll indicator\n            if (galleryScrollX < 0) {\n                p.fill(230, indicatorAlpha);\n                p.noStroke();\n                p.triangle(x + 5, y + height / 2, x + 15, y + height / 2 - 5, x + 15, y + height / 2 + 5);\n            }\n            // Right scroll indicator\n            if (galleryScrollX > -maxScroll) {\n                p.fill(230, indicatorAlpha);\n                p.noStroke();\n                p.triangle(x + width - 5, y + height / 2, x + width - 15, y + height / 2 - 5, x + width - 15, y + height / 2 + 5);\n            }\n        }\n        // Restore clipping context\n        p.drawingContext.restore();\n        p.pop();\n    }\n    function radialToCartesian(r, a) {\n        return {\n            x: r * p.cos(a),\n            y: -r * p.sin(a)\n        };\n    }\n    function openExpandedMedia(index) {\n        expandedMediaIndex = index;\n        targetExpandedAlpha = 255;\n        expandedMediaAnimationStart = p.millis();\n        expandedMediaAnimating = true;\n    }\n    function closeExpandedMedia() {\n        targetExpandedAlpha = 0;\n        expandedMediaAnimationStart = p.millis();\n        expandedMediaAnimating = true;\n        // Clean up native video element\n        if (nativeVideoElement) {\n            nativeVideoElement.remove();\n            nativeVideoElement = null;\n        }\n    }\n    function renderExpandedNativeVideo(videoPath) {\n        // Dark overlay\n        p.fill(0, 0, 0, 200 * (expandedMediaAlpha / 255));\n        p.noStroke();\n        p.rect(0, 0, p.width, p.height);\n        // Create or update native video element\n        if (!nativeVideoElement) {\n            nativeVideoElement = document.createElement('video');\n            nativeVideoElement.src = videoPath;\n            nativeVideoElement.controls = true;\n            nativeVideoElement.preload = 'metadata';\n            nativeVideoElement.setAttribute('playsinline', true);\n            nativeVideoElement.muted = true;\n            // Style the video element\n            nativeVideoElement.style.position = 'fixed';\n            nativeVideoElement.style.zIndex = '1000';\n            nativeVideoElement.style.backgroundColor = '#000';\n            nativeVideoElement.style.borderRadius = '8px';\n            // Add to DOM\n            document.body.appendChild(nativeVideoElement);\n        }\n        // Calculate video size and position (full width on mobile, 80% on desktop)\n        const isMobile = (0, $baa6D.widthCheck)(p.width);\n        const maxWidth = isMobile ? p.width : p.width * 0.8;\n        const maxHeight = isMobile ? p.height * 0.8 : p.height * 0.8;\n        // Use 16:9 aspect ratio as default, or actual video ratio if available\n        let aspectRatio = 16 / 9;\n        if (nativeVideoElement.videoWidth && nativeVideoElement.videoHeight) aspectRatio = nativeVideoElement.videoWidth / nativeVideoElement.videoHeight;\n        let videoWidth, videoHeight;\n        if (aspectRatio > maxWidth / maxHeight) {\n            videoWidth = maxWidth;\n            videoHeight = maxWidth / aspectRatio;\n        } else {\n            videoHeight = maxHeight;\n            videoWidth = maxHeight * aspectRatio;\n        }\n        // Position the video element\n        const videoX = (p.width - videoWidth) / 2;\n        const videoY = (p.height - videoHeight) / 2;\n        // Apply positioning and sizing\n        nativeVideoElement.style.left = videoX + 'px';\n        nativeVideoElement.style.top = videoY + 'px';\n        nativeVideoElement.style.width = videoWidth + 'px';\n        nativeVideoElement.style.height = videoHeight + 'px';\n        nativeVideoElement.style.opacity = expandedMediaAlpha / 255;\n        // Close button (drawn over the video)\n        const closeSize = 40;\n        const closeX = videoX + videoWidth - closeSize - 10;\n        const closeY = videoY + 10;\n        p.fill(0, 0, 0, 150 * (expandedMediaAlpha / 255));\n        p.stroke(255, expandedMediaAlpha);\n        p.strokeWeight(2);\n        p.rect(closeX, closeY, closeSize, closeSize);\n        // X symbol\n        p.stroke(255, expandedMediaAlpha);\n        p.strokeWeight(3);\n        const padding = 12;\n        p.line(closeX + padding, closeY + padding, closeX + closeSize - padding, closeY + closeSize - padding);\n        p.line(closeX + closeSize - padding, closeY + padding, closeX + padding, closeY + closeSize - padding);\n    }\n    function renderExpandedMedia() {\n        if (activeInfoCard === null || expandedMediaIndex === null) return;\n        const project = (0, $JTwtx.projects)[activeInfoCard];\n        if (!project.images || expandedMediaIndex >= project.images.length) return;\n        const mediaItem = project.images[expandedMediaIndex];\n        let pathString;\n        if (typeof mediaItem === 'string') pathString = mediaItem;\n        else if (mediaItem && typeof mediaItem === 'object') pathString = mediaItem.default || mediaItem.src || mediaItem.href || mediaItem.toString();\n        else pathString = String(mediaItem);\n        const mediaData = loadedMedia.get(pathString);\n        const isVideo = pathString.toLowerCase().match(/\\.(mp4|mov|webm|avi)(\\?.*)?$/i);\n        // For videos or video placeholders, use native video player\n        if (isVideo || mediaData && (mediaData.type === 'video-placeholder' || mediaData.type === 'video-thumbnail')) {\n            // Use the original video source for native player\n            const videoSrc = mediaData && mediaData.videoSrc ? mediaData.videoSrc : pathString;\n            renderExpandedNativeVideo(videoSrc);\n            return;\n        }\n        // For images, continue with p5.js rendering\n        if (!mediaData || !mediaData.loaded) return;\n        // Dark overlay\n        p.fill(0, 0, 0, 200 * (expandedMediaAlpha / 255));\n        p.noStroke();\n        p.rect(0, 0, p.width, p.height);\n        // Calculate media size (full width on mobile, 80% on desktop)\n        const isMobile = (0, $baa6D.widthCheck)(p.width);\n        const maxWidth = isMobile ? p.width : p.width * 0.8;\n        const maxHeight = isMobile ? p.height * 0.8 : p.height * 0.8;\n        let mediaWidth, mediaHeight;\n        if (mediaData.type === 'image') {\n            const img = mediaData.element;\n            const aspectRatio = img.width / img.height;\n            if (aspectRatio > maxWidth / maxHeight) {\n                mediaWidth = maxWidth;\n                mediaHeight = maxWidth / aspectRatio;\n            } else {\n                mediaHeight = maxHeight;\n                mediaWidth = maxHeight * aspectRatio;\n            }\n        } else if (mediaData.type === 'video') {\n            const video = mediaData.element;\n            // Get video dimensions with fallbacks\n            let videoWidth = video.elt.videoWidth || video.width || 1920;\n            let videoHeight = video.elt.videoHeight || video.height || 1080;\n            // Ensure we have valid dimensions\n            if (videoWidth <= 0 || videoHeight <= 0) {\n                videoWidth = 1920;\n                videoHeight = 1080;\n            }\n            const aspectRatio = videoWidth / videoHeight;\n            if (aspectRatio > maxWidth / maxHeight) {\n                mediaWidth = maxWidth;\n                mediaHeight = maxWidth / aspectRatio;\n            } else {\n                mediaHeight = maxHeight;\n                mediaWidth = maxHeight * aspectRatio;\n            }\n        }\n        const mediaX = (p.width - mediaWidth) / 2;\n        const mediaY = (p.height - mediaHeight) / 2;\n        // Render expanded media\n        p.push();\n        p.tint(255, expandedMediaAlpha);\n        p.image(mediaData.element, mediaX, mediaY, mediaWidth, mediaHeight);\n        p.pop();\n        // Close button\n        const closeSize = 40;\n        const closeX = mediaX + mediaWidth - closeSize - 10;\n        const closeY = mediaY + 10;\n        p.fill(0, 0, 0, 150 * (expandedMediaAlpha / 255));\n        p.stroke(255, expandedMediaAlpha);\n        p.strokeWeight(2);\n        p.rect(closeX, closeY, closeSize, closeSize);\n        // X symbol\n        p.stroke(255, expandedMediaAlpha);\n        p.strokeWeight(3);\n        const padding = 12;\n        p.line(closeX + padding, closeY + padding, closeX + closeSize - padding, closeY + closeSize - padding);\n        p.line(closeX + closeSize - padding, closeY + padding, closeX + padding, closeY + closeSize - padding);\n        // No custom controls needed - native video handles everything\n        function zcn(x = 0, y = 0, z = 0) {\n            return 2 * (p.noise(x, y, z) - 0.5);\n        }\n    }\n};\nconst $10c5b62b251f1acf$export$4d92f5370eca5938 = (node, options = {})=>{\n    return new p5((p)=>$10c5b62b251f1acf$export$d038dabfbf61338f(p, options), node);\n};\n\n\nclass $1e164a6ac005f7d0$export$b95f0ca738335a5f extends (0, $800sp.LitElement) {\n    static styles = (0, $800sp.css)`\n        canvas {\n            display: block;\n            margin: 0;\n            padding: 0;\n            overflow: hidden;\n            width: 100%;\n            height: 100%;\n        }\n    `;\n    static properties = {\n        id: {\n            type: String\n        },\n        sketch: {\n            type: String\n        },\n        skipAnimations: {\n            type: Boolean\n        },\n        options: {\n            type: Object\n        }\n    };\n    constructor(){\n        super();\n        this.id = \"bg\";\n        this.sketch = \"\";\n        this.skipAnimations = false;\n        this.options = {};\n        this.p5Instance = null;\n        this.containerDiv = null;\n        this.isInitialized = false;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Initialize the sketch when the element is added to the DOM\n        this.updateComplete.then(()=>{\n            if (!this.isInitialized) this.initializeSketch();\n        });\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        // Clean up the p5 instance when the element is removed from the DOM\n        this.cleanupSketch();\n    }\n    updated(changedProperties) {\n        super.updated(changedProperties);\n        // Only reinitialize if already initialized and properties actually changed\n        if (this.isInitialized && (changedProperties.has('sketch') || changedProperties.has('skipAnimations') || changedProperties.has('options'))) {\n            this.cleanupSketch();\n            this.initializeSketch();\n        } else if (!this.isInitialized) // Initialize for the first time\n        this.initializeSketch();\n    }\n    cleanupSketch() {\n        try {\n            if (this.p5Instance) {\n                console.log(`p5-element: Cleaning up p5 instance for ${this.sketch}`);\n                // Call custom cleanup method if it exists\n                if (typeof this.p5Instance.cleanupSketch === 'function') this.p5Instance.cleanupSketch();\n                // Remove the p5 instance properly\n                this.p5Instance.remove();\n                this.p5Instance = null;\n            }\n            if (this.containerDiv) // Clear the container div\n            this.containerDiv.innerHTML = '';\n            this.isInitialized = false;\n        } catch (error) {\n            console.error('p5-element: Error during cleanup:', error);\n            // Force cleanup even if there's an error\n            this.p5Instance = null;\n            if (this.containerDiv) this.containerDiv.innerHTML = '';\n            this.isInitialized = false;\n        }\n    }\n    initializeSketch() {\n        try {\n            if (!this.containerDiv) this.containerDiv = this.shadowRoot.querySelector('#sketch-container');\n            if (!this.containerDiv) {\n                console.warn('p5-element: Container not ready yet, retrying...');\n                setTimeout(()=>this.initializeSketch(), 100);\n                return;\n            }\n            // Clear any existing content\n            this.containerDiv.innerHTML = '';\n            console.log(`p5-element: Initializing sketch: ${this.sketch}, skipAnimations: ${this.skipAnimations}, options:`, this.options);\n            // Create the appropriate sketch based on the sketch property\n            if (this.sketch === \"home\") this.p5Instance = (0, $7c52c1757ddfa23f$export$6704eadea0be434f)(this.containerDiv, {\n                skipAnimations: this.skipAnimations\n            });\n            else if (this.sketch === \"codeart\") this.p5Instance = (0, $a850a1f0a1459307$export$6d40932eaa280b79)(this.containerDiv);\n            else if (this.sketch === \"installations\") this.p5Instance = (0, $10c5b62b251f1acf$export$4d92f5370eca5938)(this.containerDiv, this.options);\n            else this.p5Instance = (0, $82b1d05426f642e7$export$121e7a268b92cc36)(this.containerDiv);\n            if (this.p5Instance) {\n                console.log(`p5-element: Successfully created p5 instance for ${this.sketch}`);\n                this.isInitialized = true;\n            }\n        } catch (error) {\n            console.error('p5-element: Error initializing sketch:', error);\n            this.isInitialized = false;\n        }\n    }\n    render() {\n        return (0, $800sp.html)`<div id=\"sketch-container\"></div>`;\n    }\n}\ncustomElements.define(\"p5-element\", $1e164a6ac005f7d0$export$b95f0ca738335a5f);\n\n\n//# sourceMappingURL=blap64.20e196ea.js.map\n","import { LitElement, html, css } from \"lit\";\nimport { homeSketch } from \"../Home/sketch.js\";\nimport { oopsSketch } from \"../Oops/sketch.js\";\nimport { codeartSketch } from \"../CodeArt/sketch.js\";\nimport { installationsSketch } from \"../Installations/sketch.js\";\n\nexport class p5Element extends LitElement {\n    static styles = css`\n        canvas {\n            display: block;\n            margin: 0;\n            padding: 0;\n            overflow: hidden;\n            width: 100%;\n            height: 100%;\n        }\n    `;\n\n    static properties = {\n        id: { type: String },\n        sketch: { type: String },\n        skipAnimations: { type: Boolean },\n        options: { type: Object },\n    };\n\n    constructor() {\n        super();\n        this.id = \"bg\";\n        this.sketch = \"\";\n        this.skipAnimations = false;\n        this.options = {};\n        this.p5Instance = null;\n        this.containerDiv = null;\n        this.isInitialized = false;\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n        // Initialize the sketch when the element is added to the DOM\n        this.updateComplete.then(() => {\n            if (!this.isInitialized) {\n                this.initializeSketch();\n            }\n        });\n    }\n\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        // Clean up the p5 instance when the element is removed from the DOM\n        this.cleanupSketch();\n    }\n\n    updated(changedProperties) {\n        super.updated(changedProperties);\n        // Only reinitialize if already initialized and properties actually changed\n        if (this.isInitialized && (changedProperties.has('sketch') || changedProperties.has('skipAnimations') || changedProperties.has('options'))) {\n            this.cleanupSketch();\n            this.initializeSketch();\n        } else if (!this.isInitialized) {\n            // Initialize for the first time\n            this.initializeSketch();\n        }\n    }\n\n    cleanupSketch() {\n        try {\n            if (this.p5Instance) {\n                console.log(`p5-element: Cleaning up p5 instance for ${this.sketch}`);\n                \n                // Call custom cleanup method if it exists\n                if (typeof this.p5Instance.cleanupSketch === 'function') {\n                    this.p5Instance.cleanupSketch();\n                }\n                \n                // Remove the p5 instance properly\n                this.p5Instance.remove();\n                this.p5Instance = null;\n            }\n            if (this.containerDiv) {\n                // Clear the container div\n                this.containerDiv.innerHTML = '';\n            }\n            this.isInitialized = false;\n        } catch (error) {\n            console.error('p5-element: Error during cleanup:', error);\n            // Force cleanup even if there's an error\n            this.p5Instance = null;\n            if (this.containerDiv) {\n                this.containerDiv.innerHTML = '';\n            }\n            this.isInitialized = false;\n        }\n    }\n\n    initializeSketch() {\n        try {\n            if (!this.containerDiv) {\n                this.containerDiv = this.shadowRoot.querySelector('#sketch-container');\n            }\n\n            if (!this.containerDiv) {\n                console.warn('p5-element: Container not ready yet, retrying...');\n                setTimeout(() => this.initializeSketch(), 100);\n                return;\n            }\n\n            // Clear any existing content\n            this.containerDiv.innerHTML = '';\n\n            console.log(`p5-element: Initializing sketch: ${this.sketch}, skipAnimations: ${this.skipAnimations}, options:`, this.options);\n\n            // Create the appropriate sketch based on the sketch property\n            if (this.sketch === \"home\") {\n                this.p5Instance = homeSketch(this.containerDiv, { skipAnimations: this.skipAnimations });\n            } else if (this.sketch === \"codeart\") {\n                this.p5Instance = codeartSketch(this.containerDiv);\n            } else if (this.sketch === \"installations\") {\n                this.p5Instance = installationsSketch(this.containerDiv, this.options);\n            } else {\n                this.p5Instance = oopsSketch(this.containerDiv);\n            }\n\n            if (this.p5Instance) {\n                console.log(`p5-element: Successfully created p5 instance for ${this.sketch}`);\n                this.isInitialized = true;\n            }\n        } catch (error) {\n            console.error('p5-element: Error initializing sketch:', error);\n            this.isInitialized = false;\n        }\n    }\n\n    render() {\n        return html`<div id=\"sketch-container\"></div>`;\n    }\n}\n\ncustomElements.define(\"p5-element\", p5Element);\n","import { smoothFollow, easeInCubic, getFontSizes, widthCheck, loadGoogleFontSet, injectFontLink, getViewportSize, AnimationManager, UICornerBoxButton, UIArcButton, UITriangleButton, UIHexButton, TextWriter, updateCursor } from \"../../utils\";\n\n// Home sketch with animation support\n// options.skipAnimations: boolean - when true, skips intro animations and shows final state immediately\n// This is automatically enabled when navigating back via browser back/forward buttons\n// or can be manually enabled via URL parameter ?skipAnimations=true\nexport const sketch = function (p, options = {}) {\n\tlet ui = [];\n    let ui_opacity = 0;\n\tlet smoothX, smoothY;\n\tlet short;\n    let intro_texts = [];\n    let animation_states = [];\n    let animation_manager;\n    let font_sizes;\n    let mobile = false;\n    let skipAnimations = options.skipAnimations || false;\n\n\tp.setup = async function() {\n        p.noCanvas();\n\t    const s = getViewportSize();\n\t\tp.createCanvas(s.width, s.height);\n\t\tmobile = widthCheck(p.width);\n\t\tp.background(23);\n\t\tp.noFill();\n\t\tp.stroke(230);\n\t\tp.strokeWeight(4);\n\t\tp.strokeCap(p.PROJECT);\n\t\tawait loadGoogleFontSet('../../assets/fonts/BPdotsSquareVF.ttf');\n\t\tp.textAlign(p.CENTER, p.CENTER);\n\t\tshort = p.min(p.width, p.height);\n\t\tconst s_font = Math.max(0.022*p.width, 32);\n\t\tui.push(new UICornerBoxButton(p, 0.25*p.width, 0.7*p.height, 0.26*short, 0.26*short, 0.01*p.width, 0.01*p.width, \"INTERACTIVE\\nMEDIA\", s_font));\n\t\tui.push(new UIArcButton(p, 0.5*p.width, 0.7*p.height, 0.3*short, 0.3*short, 0.01*p.width, 0.01*p.width, \"PHOTO\", s_font));\n\t\tui.push(new UITriangleButton(p, 0.75*p.width, 0.35*p.height, 0.2*short, 0.2*short, 0.01*p.width, 0.01*p.width, -0.5*p.PI, \"ABOUT\", s_font));\n\t\tui.push(new UIHexButton(p, 0.75*p.width, 0.7*p.height, 0.3*short, 0.3*short, 0.01*p.width, 0.01*p.width, \"COLLECT\", s_font));\n\n\t\t// Apply quadratic curve layout to UI elements\n\t\tlayoutUI();\n\t\tsmoothX = p.width/2;\n\t\tsmoothY = p.height/2;\n\t\tp.textFont('BPdotsSquareVF', {\n            fontVariationSettings: `wght 900`\n        });\n        font_sizes = getFontSizes(p.width, p.height);\n        let padding = [0.04, 0.15];\n        if (mobile){\n            padding = [0.025, 0.05];\n        }\n\n        intro_texts.push(new TextWriter(p, padding[0] * p.width, padding[0] * p.width, p.width, p.height / 2, \"HELLO, FRIEND.\", font_sizes.large));\n        intro_texts.push(new TextWriter(p, padding[1] * p.width, 0.18 * p.height, p.width / 2, p.height / 2, \"I play many roles:\", font_sizes.small));\n        intro_texts.push(new TextWriter(p, padding[1] * p.width, 0.22 * p.height, p.width, p.height / 2, \"CREATIVE TECHNOLOGIST\\nEDUCATOR\\nARTIST\", font_sizes.medium));\n\n        animation_states = [\n            {\n                \"start_time\": 500,\n                \"duration\": 1000,\n                \"idx\": 0,\n                \"fn\": intro_texts[0].renderSequentialRandom.bind(intro_texts[0]),\n                \"args\": [],\n                \"persist\": true,\n            },\n            {\n                \"start_time\": 3000,\n                \"duration\": 1000,\n                \"idx\": 0,\n                \"fn\": intro_texts[0].renderTransition.bind(intro_texts[0]),\n                \"args\": [\"HELLO, FRIEND.\", \"My name is Benjamin Lappalainen\"],\n                \"persist\": true,\n            },\n            {\n                \"start_time\": 4000,\n                \"duration\": 500,\n                \"idx\": 1,\n                \"fn\": intro_texts[1].renderSequentialRandom.bind(intro_texts[1]),\n                \"args\": [],\n                \"persist\": true,\n            },\n            {\n                \"start_time\": 4750,\n                \"duration\": 2000,\n                \"idx\": 2,\n                \"fn\": intro_texts[2].renderSequentialRandom.bind(intro_texts[2]),\n                \"args\": [],\n                \"persist\": true,\n            },\n            {\n                \"start_time\": 7250,\n                \"duration\": 1000,\n                \"idx\": 2,\n                \"fn\": intro_texts[2].renderTransition.bind(intro_texts[2]),\n                \"args\": [\"CREATIVE TECHNOLOGIST\\nEDUCATOR\\nARTIST\", \"CREATIVE TECHNOLOGIST\\nEDUCATOR\\nARTIST\\nand more...\"],\n                \"persist\": true,\n            },\n            {\n                \"start_time\": 5000,\n                \"duration\": 1000,\n                \"idx\": 0,\n                \"fn\": intro_texts[0].renderTransition.bind(intro_texts[0]),\n                \"args\": [\"My name is Benjamin Lappalainen\", \"Benjamin Lappalainen\"],\n                \"persist\": true,\n            },\n            {\n                \"start_time\": 7000,\n                \"duration\": 250,\n                \"idx\": 0,\n                \"fn\": intro_texts[0].renderTransition.bind(intro_texts[0]),\n                \"args\": [\"Benjamin Lappalainen\", \"BLAP\"],\n                \"persist\": true,\n            },\n            {\n                \"start_time\": 7500,\n                \"duration\": 250,\n                \"idx\": 0,\n                \"fn\": intro_texts[0].renderTransition.bind(intro_texts[0]),\n                \"args\": [\"BLAP\", \"BLAP64\"],\n                \"persist\": true,\n            },\n            {\n                \"start_time\": 4000,\n                \"duration\": 1000,\n                \"idx\": 3,\n                \"fn\": setUIOpacity,\n                \"args\": [],\n                \"persist\": false,\n            }\n        ];\n        animation_manager = new AnimationManager(animation_states);\n\n        // Skip animations if requested\n        if (skipAnimations) {\n            // Set final states immediately\n            intro_texts[0].t = \"BLAP64\";\n            intro_texts[1].t = \"I play many roles:\";\n            intro_texts[2].t = \"CREATIVE TECHNOLOGIST\\nEDUCATOR\\nARTIST\\nand more...\";\n            ui_opacity = 255;\n            animation_manager.t = 999999;\n        }\n\n        window.addEventListener(\"focus\", (event) => {\n            if (p.millis() > 5000){\n                setUIOpacity(1);\n            }\n        });\n\t}\n\n\tp.draw = function() {\n\t    // deltaTime allows us to be framerate agnostic for animation speed\n\t\tsmoothX = smoothFollow(p.mouseX, smoothX, 0.003*p.deltaTime);\n\t\tsmoothY = smoothFollow(p.mouseY, smoothY, 0.003*p.deltaTime);\n\t\tp.clear();\n\t\tp.background(23);\n        p.textAlign(p.CENTER, p.CENTER);\n        ui.forEach((ui_element) => {\n            const l = ui_element.dist(smoothX, smoothY);\n            ui_element.cs.x = easeInCubic(p.map(l, 0, 0.5*p.width, 1, 0));\n            ui_element.cs.y = easeInCubic(p.map(l, 0, 0.5*p.width, 1, 0));\n            p.strokeWeight(1 + 0.015*short*easeInCubic(p.map(l, 0, 0.5*p.width, 1, 0, true)));\n            p.noFill();\n            if (ui_element.contains(p.mouseX, p.mouseY)){\n                        p.stroke(230, 20, 20, ui_opacity);\n            } else {\n                        p.stroke(230, ui_opacity);\n            }\n            ui_element.render();\n\n            // Text rendering\n            p.noStroke();\n            let d = 0;\n            if (!mobile){\n                d = ui_element.textWriter.dist(smoothX, smoothY);\n            }\n            p.textFont('BPdotsSquareVF', {\n                fontVariationSettings: `wght ${p.map(d/p.width, 1, 0, 100, 900, true)}`\n            });\n            if (ui_element.contains(p.mouseX, p.mouseY)){\n                p.fill(230, 20, 20, ui_opacity);\n            } else {\n                p.fill(230, ui_opacity);\n            }\n            ui_element.textWriter.renderSequentialRandom(p.map(d, 100, 0.5*p.width, 1, 0, true));\n        });\n        p.noFill();\n        p.stroke(230);\n        p.strokeWeight(2);\n        p.noStroke();\n        p.fill(230);\n        p.textAlign(p.LEFT, p.TOP);\n        p.textFont('BPdotsSquareVF', {\n            fontVariationSettings: `wght 900`\n        });\n        animation_manager.execute(p);\n\n        // Update cursor based on hover state\n        updateCursor(p, p.mouseX, p.mouseY, ui);\n\t}\n\n\tp.mousePressed = function(event){\n\t    if (event && event.button !== 0) {\n            return;\n        }\n\t    if (ui_opacity < 128){\n            return;\n\t\t}\n        const ANIMATION_DELAY = 500;\n        ui.forEach((ui_element, index) => {\n\t\t\tif (ui_element.contains(p.mouseX, p.mouseY)){\n\t\t\t\t// Navigate based on which UI element was clicked\n\t\t\t\tif (window.appRouter) {\n\t\t\t\t\tswitch(index) {\n\t\t\t\t\t\tcase 0: // First button - INTERACTIVE\n\t\t\t\t\t\t    setTimeout(() => {\n    \t\t\t\t\t\t\twindow.appRouter.navigate('/interactive');\n    \t\t\t\t\t\t}, ANIMATION_DELAY);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 1: // Second button - PHOTO\n\t\t\t\t\t\t\t// Add photo route when available\n\t\t\t\t\t\t\tconsole.log('Photo section coming soon!');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2: // Third button - ABOUT\n    \t\t\t\t\t\tsetTimeout(() => {\n    \t\t\t\t\t\t\twindow.appRouter.navigate('/about');\n    \t\t\t\t\t\t}, ANIMATION_DELAY);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n                return;\n\t\t\t}\n        });\n\t}\n\n\t// Enhanced windowResized function that automatically updates all UI elements\n\t// Maintains proportional positioning and sizing based on new canvas dimensions\n\t// Preserves animation states when not skipping animations\n\tp.windowResized = function windowResized() {\n        const s = getViewportSize();\n        p.resizeCanvas(s.width, s.height);\n        short = p.min(s.width, s.height);\n        mobile = widthCheck(p.width);\n\n        // Update font sizes based on new dimensions\n        font_sizes = getFontSizes(p.width, p.height);\n\n        // Update padding based on new width\n        let padding = [0.05, 0.15];\n        if (mobile){\n            padding = [0.025, 0.05];\n        }\n        // Clear and recreate UI elements with new proportional positions\n        // UI elements: corner box, arc, and triangle buttons at 25%, 50%, 75% width\n        ui.length = 0;\n        const s_font = Math.max(0.022*p.width, 32);\n        ui.push(new UICornerBoxButton(p, 0.25*p.width, 0.7*p.height, 0.26*short, 0.26*short, 0.01*p.width, 0.01*p.width, \"INTERACTIVE\\nMEDIA\", s_font));\n\t\tui.push(new UIArcButton(p, 0.5*p.width, 0.7*p.height, 0.3*short, 0.3*short, 0.01*p.width, 0.01*p.width, \"PHOTO\", s_font));\n\t\tui.push(new UITriangleButton(p, 0.75*p.width, 0.35*p.height, 0.2*short, 0.2*short, 0.01*p.width, 0.01*p.width, -0.5*p.PI, \"ABOUT\", s_font));\n\t\tui.push(new UIHexButton(p, 0.75*p.width, 0.7*p.height, 0.3*short, 0.3*short, 0.01*p.width, 0.01*p.width, \"COLLECT\", s_font));\n\n        // Apply quadratic curve layout to UI elements\n        layoutUI();\n\n\n        // Update intro text elements positions and sizes\n        if (skipAnimations) {\n            // Preserve final states when skipping animations\n            intro_texts.length = 0;\n            intro_texts.push(new TextWriter(p, padding[0] * p.width, padding[0] * p.width, 0.8*p.width, p.height / 2, \"BLAP64\", font_sizes.large));\n            intro_texts.push(new TextWriter(p, padding[1] * p.width, 0.18 * p.height, p.width / 2, p.height / 2, \"I play many roles:\", font_sizes.small));\n            intro_texts.push(new TextWriter(p, padding[1] * p.width, 0.22 * p.height, p.width, p.height / 2, \"CREATIVE TECHNOLOGIST\\nEDUCATOR\\nARTIST\\nand more...\", font_sizes.medium));\n        } else {\n            // Update positions but preserve current animation states and text content\n            intro_texts[0].p.x = padding[0] * p.width;\n            intro_texts[0].p.y = padding[0] * p.width;\n            intro_texts[0].s.x = 0.8*p.width;\n            intro_texts[0].s.y = p.height / 2;\n            intro_texts[0].size = font_sizes.large;\n\n            intro_texts[1].p.x = padding[1] * p.width;\n            intro_texts[1].p.y = 0.18 * p.height;\n            intro_texts[1].s.x = p.width / 2;\n            intro_texts[1].s.y = p.height / 2;\n            intro_texts[1].size = font_sizes.small;\n\n            intro_texts[2].p.x = padding[1] * p.width;\n            intro_texts[2].p.y = 0.22 * p.height;\n            intro_texts[2].s.x = p.width;\n            intro_texts[2].s.y = p.height / 2;\n            intro_texts[2].size = font_sizes.medium;\n        }\n     };\n\n\n\n    function setUIOpacity(v) {\n        ui_opacity = 255*v;\n    }\n\n    // Layout UI elements along a quadratic curve going up towards the right\n    function layoutUI() {\n        if (ui.length === 0) return;\n\n        if (mobile) {\n            // Mobile layout: arrange in 2x2 grid in lower third of screen\n            const gridCenterX = 0.5 * p.width;\n            const gridCenterY = 0.7 * p.height; // Lower third of screen\n            const gridSpacing = 0.45 * p.width; // Spacing between grid positions\n\n            // Grid positions: 2x2 layout\n            const gridPositions = [\n                { x: gridCenterX - gridSpacing/2, y: gridCenterY - gridSpacing/2 }, // Top-left\n                { x: gridCenterX + gridSpacing/2, y: gridCenterY - gridSpacing/2 }, // Top-right\n                { x: gridCenterX - gridSpacing/2, y: gridCenterY + gridSpacing/2 }, // Bottom-left\n                { x: gridCenterX + gridSpacing/2, y: gridCenterY + gridSpacing/2 }  // Bottom-right\n            ];\n\n            // Position UI elements in grid\n            for (let i = 0; i < ui.length; i++) {\n                const pos = gridPositions[i % gridPositions.length]; // Handle more than 4 elements\n\n                // Update UI element position\n                ui[i].p.x = pos.x;\n                ui[i].p.y = pos.y;\n\n                // Update corresponding TextWriter position\n                ui[i].textWriter.p.x = pos.x;\n                ui[i].textWriter.p.y = pos.y;\n            }\n        } else {\n            // Desktop layout: quadratic curve\n            // Define curve parameters - curve goes from bottom-left to top-right\n            const startX = 0.15 * p.width;  // Start X position (15% from left)\n            const startY = 0.75 * p.height; // Start Y position (75% from top, near bottom)\n            const endX = 0.85 * p.width;    // End X position (85% from left)\n            const endY = 0.2 * p.height;    // End Y position (20% from top, near top)\n\n            // Quadratic curve control point to create convex upward arc\n            const controlX = 0.6 * p.width;  // Control point X\n            const controlY = 0.65 * p.height; // Control point Y (creates convex curve)\n\n            // Calculate positions for each UI element along the curve\n            for (let i = 0; i < ui.length; i++) {\n                // Parameter t goes from 0 to 1 along the curve\n                const t = ui.length > 1 ? i / (ui.length - 1) : 0;\n\n                // Quadratic Bezier curve formula: P(t) = (1-t)²P₀ + 2(1-t)tP₁ + t²P₂\n                const oneMinusT = 1 - t;\n                const x = oneMinusT * oneMinusT * startX +\n                         2 * oneMinusT * t * controlX +\n                         t * t * endX;\n                const y = oneMinusT * oneMinusT * startY +\n                         2 * oneMinusT * t * controlY +\n                         t * t * endY;\n\n                // Update UI element position\n                ui[i].p.x = x;\n                ui[i].p.y = y;\n\n                // Update corresponding TextWriter position\n                ui[i].textWriter.p.x = x;\n                ui[i].textWriter.p.y = y;\n            }\n        }\n    }\n};\n\nexport const homeSketch = (node, options = {}) => {\n    return new p5((p) => sketch(p, options), node);\n};\n","import { getViewportSize } from \"../../utils\";\n\nexport const sketch = function (p) {\n    let fbo = undefined;\n    let short = 128;\n\n    p.setup = function setup() {\n        p.noCanvas();\n        p.pixelDensity(1);\n        const s = getViewportSize();\n        p.createCanvas(s.width, s.height, p.WEBGL);\n        // Options for creating our framebuffer, width and height relative to the size of our canvas determine the pixelation appearance\n        const options = {\n            width: 128,\n            height: 128,\n            textureFiltering: p.NEAREST, // Required to prevent interpolation (blurring) when we upscale the image. Gives the pixelated effect that we're going for\n        };\n        // Disable p5's smoothing\n        p.noSmooth();\n        p.ellipseMode(p.CENTER);\n        short = p.min(s.width, s.height);\n        // Make the framebuffer\n        fbo = p.createFramebuffer(options);\n        // p5 in instance mode doesn't seem to work well with elements in a shadow root and doesn't remove the \"p5_loading\" div by itself\n        let bg = document.getElementById(\"bg\");\n        let loading_div = bg.shadowRoot.getElementById(\"p5_loading\");\n        if (loading_div) loading_div.remove();\n    };\n\n    p.draw = function draw() {\n        p.clear();\n        fbo.begin(); // Begin drawing stuff in the framebuffer\n        p.noFill();\n        p.stroke(200, 20, 20);\n        p.strokeWeight(p.abs(p.sin(p.frameCount / 42)));\n        p.clear();\n        p.rotateX(p.frameCount / 50);\n        p.rotateY(p.frameCount / 200);\n        p.circle(0, 0, 64);\n        p.rotateY(p.PI / 2);\n        p.circle(0, 0, 64);\n        fbo.end(); // Finish drawing stuff in the framebuffer\n        // Render an image of the framebuffer, centering and stretching it to the size of the canvas\n        p.image(fbo, -short / 2, -short / 2, short, short);\n    };\n\n    p.windowResized = function windowResized() {\n        const s = getViewportSize();\n        p.resizeCanvas(s.width, s.height);\n        short = p.min(s.width, s.height);\n    };\n\n\n};\n\nexport const oopsSketch = (node) => {\n    return new p5(sketch, node);\n};\n","import { getViewportSize, UITriangleButton, easeInCubic, smoothFollow, updateCursor } from \"../../utils\";\n\nexport const sketch = function (p) {\n    let ui = [];\n    let short = 128;\n    let smoothX = 0;\n    let smoothY = 0;\n    let mobile = false;\n    let cx, cy, r;\n\n    p.setup = function setup() {\n        p.noCanvas();\n        p.pixelDensity(1);\n        const s = getViewportSize();\n        p.createCanvas(s.width, s.height);\n        short = p.min(s.width, s.height);\n        cx = 0.5 * p.width;\n        cy = 0.6 * p.height;\n        r = 0.2 * short;\n        layoutUI();\n        p.background(23);\n        p.textAlign(p.CENTER, p.CENTER);\n        p.strokeCap(p.PROJECT);\n        // p5 in instance mode doesn't seem to work well with elements in a shadow root and doesn't remove the \"p5_loading\" div by itself\n        let bg = document.getElementById(\"bg\");\n        let loading_div = bg.shadowRoot.getElementById(\"p5_loading\");\n        if (loading_div) loading_div.remove();\n    };\n\n    p.draw = function draw() {\n        p.background(23);\n        smoothX = smoothFollow(p.mouseX, smoothX, 0.003*p.deltaTime);\n\t\tsmoothY = smoothFollow(p.mouseY, smoothY, 0.003*p.deltaTime);\n        p.noFill();\n        p.stroke(230);\n        p.strokeWeight(1);\n        ui.forEach((ui_element) => {\n            const l = ui_element.dist(smoothX, smoothY);\n            ui_element.cs.x = easeInCubic(p.map(l, 0, 0.5*p.width, 1, 0));\n            ui_element.cs.y = easeInCubic(p.map(l, 0, 0.5*p.width, 1, 0));\n            //p.strokeWeight(1 + 0.015*short*easeInCubic(p.map(l, 0, 0.5*p.width, 1, 0, true)));\n            p.noFill();\n            if (ui_element.contains(p.mouseX, p.mouseY)){\n                p.stroke(230, 20, 20);\n            } else {\n                p.stroke(230);\n            }\n            ui_element.renderTriangle();\n\n            // Text rendering\n            p.noStroke();\n            let d = 0;\n            if (!mobile){\n                d = l; //ui_element.textWriter.dist(smoothX, smoothY);\n            }\n            p.textFont('BPdotsSquareVF', {\n                fontVariationSettings: `wght ${p.map(d/p.width, 1, 0, 100, 900, true)}`\n            });\n            if (ui_element.contains(p.mouseX, p.mouseY)){\n                p.fill(230, 20, 20);\n            } else {\n                p.fill(230);\n            }\n            ui_element.textWriter.renderSequentialRandom(p.map(d, 100, 0.5*p.width, 1, 0, true));\n        });\n        renderDecor();\n\n        // Update cursor based on hover state\n        updateCursor(p, p.mouseX, p.mouseY, ui);\n    };\n\n    p.windowResized = function windowResized() {\n        const s = getViewportSize();\n        p.resizeCanvas(s.width, s.height);\n        short = p.min(s.width, s.height);\n        cx = 0.5*p.width;\n        cy = 0.6 * p.height;\n        r = 0.2 * short;\n        layoutUI();\n    };\n\n    p.mousePressed = function(event){\n        if (event && event.button !== 0) {\n            return;\n        }\n        const ANIMATION_DELAY = 500;\n        ui.forEach((ui_element, index) => {\n\t\tif (ui_element.contains(p.mouseX, p.mouseY)){\n\t\t\t// Navigate based on which UI element was clicked\n\t\t\tif (window.appRouter) {\n\t\t\t\tswitch(index) {\n\t\t\t\t\tcase 0: // Projects and Installations\n\t\t\t\t\t    setTimeout(() => {\n \t\t\t\t\t\t\twindow.appRouter.navigate('/interactive/live');\n  \t\t\t\t\t\t}, ANIMATION_DELAY);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1: // Physical Artifacts\n\t\t\t\t\t\t// Add photo route when available\n\t\t\t\t\t\tconsole.log('PHYSICAL ARTIFACTS COMING SOON');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2: // Web art\n      \t\t\t\t\t\tsetTimeout(() => {\n     \t\t\t\t\t\t\twindow.appRouter.navigate('/about');\n      \t\t\t\t\t\t}, ANIMATION_DELAY);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n                return;\n\t\t}\n        });\n\t}\n\n    function layoutUI(){\n        ui.length = 0;\n        const s_font = Math.max(0.022*p.width, 32);\n        ui.push(new UITriangleButton(p, cx, cy - r, 0.1*short, 0.1*short, 0.01*p.width, 0.01*p.width, -0.5*p.PI, \"LIVE\\nEXPERIENCES\", s_font));\n        ui[0].setTextOffset(0, -0.9*r);\n        ui.push(new UITriangleButton(p, cx - r*p.cos(p.PI/6), cy + r*p.sin(p.PI/6), 0.1*short, 0.1*short, 0.01*p.width, 0.01*p.width, -0.5*p.PI, \"PHYSICAL\\nARTIFACTS\", s_font));\n        ui[1].setTextOffset(-0.95*r*p.cos(p.PI/6), 0.95*r*p.sin(p.PI/6));\n        ui.push(new UITriangleButton(p, cx + r*p.cos(p.PI/6), cy + r*p.sin(p.PI/6), 0.1*short, 0.1*short, 0.01*p.width, 0.01*p.width, -0.5*p.PI, \"WEB\\nEXPERIENCES\", s_font));\n        ui[2].setTextOffset(0.95*r*p.cos(p.PI/6), 0.95*r*p.sin(p.PI/6));\n    }\n\n    function renderDecor(){\n        const t = 0.0003 * p.millis();\n        p.noFill();\n        p.stroke(230);\n        p.strokeWeight(1);\n        let m = p.createVector(smoothX, smoothY);\n        let c = p.createVector(cx, cy);\n        let new_v = p5.Vector.sub(m, c);\n        const h = new_v.heading();\n        let new_cx = cx + 0.1 * p.min(new_v.mag(), 3*r) * p.cos(h);\n        let new_cy = cy + 0.1 * p.min(new_v.mag(), 3*r) * p.sin(h);\n        p.circle(new_cx, new_cy, 0.5 * r);\n        let a_mod = -h;\n        let a0 = a_mod + zcn(t);\n        let a1 = 2*p.PI / 3 + a_mod + zcn(t);\n        let a2 = 4 * p.PI / 3 + a_mod + zcn(t);\n        let c00 = radialToCartesian(0.2 * r, a0);\n        let c01 = radialToCartesian(0.3 * r, a0);\n        let c10 = radialToCartesian(0.2 * r, a1);\n        let c11 = radialToCartesian(0.3 * r, a1);\n        let c20 = radialToCartesian(0.2 * r, a2);\n        let c21 = radialToCartesian(0.3 * r, a2);\n        p.line(new_cx + c00.x, new_cy + c00.y, new_cx + c01.x, new_cy + c01.y);\n        p.line(new_cx + c10.x, new_cy + c10.y, new_cx + c11.x, new_cy + c11.y);\n        p.line(new_cx + c20.x, new_cy + c20.y, new_cx + c21.x, new_cy + c21.y);\n        a_mod = p.abs(a_mod);\n        for (let i = 0; i < 3; i++){\n            let ad = p.PI * zcn(0.1 * a_mod + 0.0003 * p.millis());\n            a0 = i * p.TWO_PI / 3 + 0.6 * p.PI / 6 + a_mod + ad;\n            a1 = i * p.TWO_PI / 3 + 1.4 * p.PI / 6 + a_mod + ad;\n            c00 = radialToCartesian(0.5*r, a0);\n            c01 = radialToCartesian(0.5*r, a1);\n            p.line(new_cx + c00.x, new_cy + c00.y, new_cx + c01.x, new_cy + c01.y);\n            let lm = (0.02 * a_mod/p.PI) + 0.02;\n            let rmi = (0.5 - lm) * r;\n            let rmo = (0.5 + lm) * r;\n            c00 = radialToCartesian(rmi, a0);\n            c01 = radialToCartesian(rmo, a0);\n            p.line(new_cx + c00.x, new_cy + c00.y, new_cx + c01.x, new_cy + c01.y);\n            c00 = radialToCartesian(rmi, a1);\n            c01 = radialToCartesian(rmo, a1);\n            p.line(new_cx + c00.x, new_cy + c00.y, new_cx + c01.x, new_cy + c01.y);\n        }\n\n    }\n\n    function radialToCartesian(r, a){\n        return { x: r * p.cos(a), y: -r * p.sin(a) };\n    }\n\n    function zcn(x=0, y=0, z=0){\n        return 2*(p.noise(x, y, z)-0.5);\n    }\n};\n\nexport const codeartSketch = (node) => {\n    return new p5(sketch, node);\n};\n","import { getViewportSize, UITriangleButton, UIPlanetButton, easeInCubic, smoothFollow, loadGoogleFontSet, widthCheck, updateCursor, getMediaPath, isVideoFile, calculateMediaDimensions, calculateCropDimensions } from \"../../utils\";\nimport { projects, findProjectBySlug, getProjectIndexBySlug } from \"./project-details\";\n\nexport const sketch = function (p, options = {}) {\n    let ui = [];\n    let short = 128;\n    let smoothX = 0;\n    let smoothY = 0;\n    let smoothV = p.createVector(smoothX, smoothY);\n    let mobile = false;\n    let cx, cy, r;\n    let planetButtons = [];\n    let star_colours = ['#faa000', '#0842f5', '#e61414'];\n    let activeInfoCard = null;\n    let infoCardAlpha = 0;\n    let infoCardAnimationStart = 0;\n    let infoCardAnimating = false;\n    let targetAlpha = 0;\n    let galleryScrollX = 0;\n    let targetGalleryScrollX = 0;\n    let galleryDragging = false;\n    let galleryDragStartX = 0;\n    let galleryStartScrollX = 0;\n    let loadedMedia = new Map();\n    let expandedMediaIndex = null;\n    let expandedMediaAlpha = 0;\n    let expandedMediaAnimating = false;\n    let expandedMediaAnimationStart = 0;\n    let targetExpandedAlpha = 0;\n    let nativeVideoElement = null;\n    let pendingProjectSlug = null;\n    let layoutInitialized = false;\n    let frameCount = 0;\n    let currentPath = null;\n    let isInternalNavigation = false;\n\n    let hashChangeHandler = null;\n    \n    // Add cleanup method to be called when sketch is destroyed\n    p.cleanupSketch = function() {\n        // Clean up native video element\n        if (nativeVideoElement) {\n            nativeVideoElement.remove();\n            nativeVideoElement = null;\n        }\n        \n        // Clean up any loaded video elements\n        loadedMedia.forEach((mediaData, path) => {\n            if (mediaData.type === 'video' && mediaData.element && mediaData.element.remove) {\n                mediaData.element.remove();\n            }\n        });\n        loadedMedia.clear();\n        \n        // Reset state\n        activeInfoCard = null;\n        expandedMediaIndex = null;\n        infoCardAlpha = 0;\n        expandedMediaAlpha = 0;\n        \n        // Re-enable browser swipe navigation\n        document.body.style.overscrollBehavior = '';\n        document.body.style.touchAction = '';\n        \n        // Remove hash change listener\n        if (hashChangeHandler) {\n            window.removeEventListener('hashchange', hashChangeHandler);\n            hashChangeHandler = null;\n        }\n        \n        // Don't clear session storage here - let setup function handle it for back navigation detection\n    };\n\n    // Helper functions for layout calculations\n    function getCardDimensions() {\n        const isMobile = widthCheck(p.width);\n        const cardSize = isMobile ?\n            p.min(p.width * 0.95, p.height * 0.9) :\n            p.min(p.width * 0.9, p.height * 0.85, 900);\n        const cardX = (p.width - cardSize) / 2;\n        const cardY = (p.height - cardSize) / 2;\n        return { size: cardSize, x: cardX, y: cardY, isMobile };\n    }\n\n    function getGalleryLayout(cardSize, cardX, cardY, isMobile) {\n        const baseTextScale = isMobile ? cardSize / 400 : cardSize / 600;\n        const padding = 25 * baseTextScale;\n        const lineHeight = 25 * baseTextScale;\n        const galleryY = cardY + padding + lineHeight * 5.3;\n        const galleryHeight = cardSize * 0.4;\n        return { galleryY, galleryHeight, baseTextScale, padding, lineHeight };\n    }\n\n    function getGalleryItemDimensions(galleryHeight, scale) {\n        const galleryPadding = 10 * scale;\n        const itemHeight = galleryHeight - (2 * galleryPadding);\n        const itemWidth = itemHeight * 1.5; // 3:2 aspect ratio\n        return { itemWidth, itemHeight, galleryPadding };\n    }\n\n    function renderCloseButton(x, y, size, alpha) {\n        const padding = size * 0.25;\n\n        // Close button background\n        p.fill(50, 50, 50, 200 * (alpha / 255));\n        p.stroke(200, alpha);\n        p.strokeWeight(1);\n        p.rect(x, y, size, size);\n\n        // X symbol\n        p.stroke(200, alpha);\n        p.strokeWeight(2);\n        p.line(x + padding, y + padding, x + size - padding, y + size - padding);\n        p.line(x + size - padding, y + padding, x + padding, y + size - padding);\n    }\n\n    function renderPlayIcon(x, y, size, alpha) {\n        // Semi-transparent play button background\n        p.fill(0, 0, 0, 120 * (alpha / 255));\n        p.noStroke();\n        p.circle(x + size/2, y + size/2, size);\n\n        // Play triangle\n        p.fill(255, 255, 255, 180 * (alpha / 255));\n        const triangleSize = size * 0.35;\n        const triangleCenterX = x + size/2 + triangleSize * 0.1;\n        const triangleCenterY = y + size/2;\n        p.triangle(\n            triangleCenterX - triangleSize/2, triangleCenterY - triangleSize/2,\n            triangleCenterX - triangleSize/2, triangleCenterY + triangleSize/2,\n            triangleCenterX + triangleSize/2, triangleCenterY\n        );\n    }\n\n    function initializeLayout() {\n        const s = getViewportSize();\n        short = p.min(s.width, s.height);\n        mobile = widthCheck(s.width);\n        cx = 0.5 * p.width;\n        cy = 0.5 * p.height;\n        r = 0.07 * short;\n        setupSolarSystem(r);\n        layoutUI();\n        layoutInitialized = true;\n    }\n\n    p.setup = async function setup() {\n        p.noCanvas();\n        p.pixelDensity(1);\n        const s = getViewportSize();\n        p.createCanvas(s.width, s.height);\n        initializeLayout();\n        p.background(23);\n        p.textAlign(p.CENTER, p.CENTER);\n        p.strokeCap(p.PROJECT);\n        await loadGoogleFontSet('../../assets/fonts/BPdotsSquareVF.ttf');\n        await loadGoogleFontSet('../../assets/fonts/ZxGamut.ttf');\n        p.textFont('BPdotsSquareVF', {\n            fontVariationSettings: `wght 900`\n        });\n        // p5 in instance mode doesn't seem to work well with elements in a shadow root and doesn't remove the \"p5_loading\" div by itself\n        let bg = document.getElementById(\"bg\");\n        let loading_div = bg.shadowRoot.getElementById(\"p5_loading\");\n        if (loading_div) loading_div.remove();\n        \n        // Handle direct project navigation via URL parameter\n        if (options && options.project) {\n            pendingProjectSlug = options.project;\n            currentPath = `/interactive/live/${options.project}`;\n            // Store that we have an active project\n            sessionStorage.setItem('installationsActiveProject', options.project);\n        } else {\n            currentPath = '/interactive/live';\n            // Check if we had an active project before and now we don't\n            const wasActiveProject = sessionStorage.getItem('installationsActiveProject');\n            if (wasActiveProject) {\n                // We navigated back from a project to main page - clear the storage\n                sessionStorage.removeItem('installationsActiveProject');\n                // Ensure no project opens automatically on back navigation\n                pendingProjectSlug = null;\n                \n                // Initialize with info card closed\n                activeInfoCard = null;\n                infoCardAlpha = 0;\n                targetAlpha = 0;\n                infoCardAnimating = false;\n            }\n        }\n        \n        // Add hash change listener to detect back navigation within the same route\n        hashChangeHandler = function(event) {\n            const newHash = window.location.hash.substr(1);\n            const cleanPath = newHash && newHash !== '' ? \n                (newHash.startsWith('/') ? newHash : '/' + newHash) : '/';\n            \n            // If we're on the installations page and URL changed to just /interactive/live\n            // and we have an active info card, close it\n            if (cleanPath === '/interactive/live' && activeInfoCard !== null) {\n                closeInfoCard();\n            }\n        };\n        \n        window.addEventListener('hashchange', hashChangeHandler);\n    };\n\n    p.draw = function draw() {\n        p.background(23);\n        frameCount++;\n        smoothX = smoothFollow(p.mouseX, smoothX, 0.003 * p.deltaTime);\n        smoothY = smoothFollow(p.mouseY, smoothY, 0.003 * p.deltaTime);\n        smoothV.x = smoothX;\n        smoothV.y = smoothY;\n        p.noFill();\n        p.stroke(230);\n        p.strokeWeight(1);\n        renderSolarSystem();\n        \n        // Handle pending project opening after layout is initialized and a few frames have passed\n        if (pendingProjectSlug && layoutInitialized && planetButtons && planetButtons.length > 0 && frameCount > 5) {\n            const projectIndex = getProjectIndexBySlug(pendingProjectSlug);\n            if (projectIndex !== -1 && projectIndex < planetButtons.length) {\n                openInfoCard(projectIndex);\n                pendingProjectSlug = null; // Clear the pending slug\n            } else {\n                // If project not found, clear the pending slug to avoid infinite attempts\n                pendingProjectSlug = null;\n            }\n        }\n        p.noFill();\n        p.stroke(230, 50);\n        const s = short * 0.03;\n        p.push();\n        p.translate(smoothX, smoothY);\n        p.rotate(p.TWO_PI * p.noise(smoothX / short, smoothY / short, 0.0001 * p.millis()));\n        p.circle(0, 0, 0.33 * s);\n        p.triangle(s, 0, s * p.cos(p.TWO_PI / 3), s * p.sin(p.TWO_PI / 3), s * p.cos(2 * p.TWO_PI / 3), s * p.sin(2 * p.TWO_PI / 3));\n        p.pop();\n        // Update info card animation\n        if (infoCardAnimating) {\n            const elapsed = p.millis() - infoCardAnimationStart;\n            const progress = p.constrain(elapsed / 250, 0, 1);\n            infoCardAlpha = p.lerp(infoCardAlpha, targetAlpha, progress);\n\n            if (progress >= 1) {\n                infoCardAnimating = false;\n                infoCardAlpha = targetAlpha;\n                if (targetAlpha === 0) {\n                    activeInfoCard = null;\n                }\n            }\n        }\n\n        // Update gallery scrolling\n        if (!galleryDragging) {\n            galleryScrollX = p.lerp(galleryScrollX, targetGalleryScrollX, 0.1);\n        }\n\n        // Update expanded media animation\n        if (expandedMediaAnimating) {\n            const elapsed = p.millis() - expandedMediaAnimationStart;\n            const progress = p.constrain(elapsed / 300, 0, 1);\n            expandedMediaAlpha = p.lerp(expandedMediaAlpha, targetExpandedAlpha, progress);\n\n            if (progress >= 1) {\n                expandedMediaAnimating = false;\n                expandedMediaAlpha = targetExpandedAlpha;\n                if (targetExpandedAlpha === 0) {\n                    expandedMediaIndex = null;\n                }\n            }\n        }\n\n        // Update cursor based on hover state\n        // Don't include planet buttons when info card is active\n        const hoverTargets = activeInfoCard !== null ?\n            [ui, getCloseButtonHoverCheck(), getNavigationButtonHoverCheck()] :\n            [ui, ...planetButtons, getCloseButtonHoverCheck()];\n        updateCursor(p, p.mouseX, p.mouseY, ...hoverTargets);\n\n        // Render active info card\n        if (activeInfoCard !== null || infoCardAlpha > 0) {\n            renderInfoCard(projects[activeInfoCard]);\n        }\n\n        // Render expanded media overlay\n        if (expandedMediaIndex !== null || expandedMediaAlpha > 0) {\n            renderExpandedMedia();\n        }\n    };\n\n    p.windowResized = function windowResized() {\n        const s = getViewportSize();\n        p.resizeCanvas(s.width, s.height);\n        initializeLayout();\n    };\n\n    p.mousePressed = function (event) {\n        if (event && event.button !== 0) {\n            return;\n        }\n        const ANIMATION_DELAY = 500;\n\n        // Check if clicking on expanded media overlay\n        if (expandedMediaIndex !== null) {\n            const project = projects[activeInfoCard];\n            const mediaItem = project.images[expandedMediaIndex];\n            let pathString;\n            if (typeof mediaItem === 'string') {\n                pathString = mediaItem;\n            } else if (mediaItem && typeof mediaItem === 'object') {\n                pathString = mediaItem.default || mediaItem.src || mediaItem.href || mediaItem.toString();\n            } else {\n                pathString = String(mediaItem);\n            }\n\n            const isVideo = pathString.toLowerCase().match(/\\.(mp4|mov|webm|avi)(\\?.*)?$/i);\n            const isMobile = widthCheck(p.width);\n            const maxWidth = isMobile ? p.width : p.width * 0.8;\n            const maxHeight = isMobile ? p.height * 0.8 : p.height * 0.8;\n            let mediaWidth, mediaHeight;\n\n            if (isVideo) {\n                // For native videos, use standard dimensions\n                const aspectRatio = nativeVideoElement && nativeVideoElement.videoWidth && nativeVideoElement.videoHeight ?\n                    nativeVideoElement.videoWidth / nativeVideoElement.videoHeight : 16 / 9;\n\n                if (aspectRatio > maxWidth / maxHeight) {\n                    mediaWidth = maxWidth;\n                    mediaHeight = maxWidth / aspectRatio;\n                } else {\n                    mediaHeight = maxHeight;\n                    mediaWidth = maxHeight * aspectRatio;\n                }\n            } else {\n                // For images, get from loaded media\n                const mediaData = loadedMedia.get(pathString);\n                if (mediaData && mediaData.loaded) {\n                    const img = mediaData.element;\n                    const aspectRatio = img.width / img.height;\n                    if (aspectRatio > maxWidth / maxHeight) {\n                        mediaWidth = maxWidth;\n                        mediaHeight = maxWidth / aspectRatio;\n                    } else {\n                        mediaHeight = maxHeight;\n                        mediaWidth = maxHeight * aspectRatio;\n                    }\n                } else {\n                    return; // Image not ready\n                }\n            }\n\n            const mediaX = (p.width - mediaWidth) / 2;\n            const mediaY = (p.height - mediaHeight) / 2;\n\n            // Check close button\n            const closeSize = 40;\n            const closeX = mediaX + mediaWidth - closeSize - 10;\n            const closeY = mediaY + 10;\n\n            if (p.mouseX >= closeX && p.mouseX <= closeX + closeSize &&\n                p.mouseY >= closeY && p.mouseY <= closeY + closeSize) {\n                closeExpandedMedia();\n                return;\n            }\n\n            // Native video players handle their own controls\n\n            // Click outside media closes it\n            if (p.mouseX < mediaX || p.mouseX > mediaX + mediaWidth ||\n                p.mouseY < mediaY || p.mouseY > mediaY + mediaHeight) {\n                closeExpandedMedia();\n                return;\n            }\n            return;\n        }\n\n        // Check UI elements\n        ui.forEach((ui_element, index) => {\n            if (ui_element.contains(p.mouseX, p.mouseY)) {\n                // Navigate based on which UI element was clicked\n                if (window.appRouter) {\n                    switch (index) {\n                        case 0: // Projects and Installations\n                            setTimeout(() => {\n                                window.appRouter.navigate('/codeart');\n                            }, ANIMATION_DELAY);\n                            break;\n                        case 1: // Web Art\n                            // Add photo route when available\n                            console.log('Photo section coming soon!');\n                            break;\n                        case 2: // Physical Artifacts\n                            setTimeout(() => {\n                                window.appRouter.navigate('/about');\n                            }, ANIMATION_DELAY);\n                            break;\n                    }\n                }\n                return;\n            }\n        });\n\n        // Check if clicking on info card or close button\n        if (activeInfoCard !== null) {\n            const { size: cardSize, x: cardX, y: cardY, isMobile } = getCardDimensions();\n            const closeButtonSize = isMobile ? 44 : 30;\n            const closeButtonX = cardX + cardSize - closeButtonSize - 10;\n            const closeButtonY = cardY + 10;\n\n            // Check if clicking close button\n            if (p.mouseX >= closeButtonX && p.mouseX <= closeButtonX + closeButtonSize &&\n                p.mouseY >= closeButtonY && p.mouseY <= closeButtonY + closeButtonSize) {\n                closeInfoCard();\n                return;\n            }\n\n            // Check if clicking navigation arrows\n            if (projects.length > 1) {\n                const arrowSize = isMobile ? 50 : 40;\n                const arrowPadding = isMobile ? 20 : 15;\n                const arrowY = cardY + cardSize + arrowPadding;\n                \n                const totalArrowWidth = arrowSize * 2 + arrowPadding * 3;\n                const arrowStartX = cardX + (cardSize - totalArrowWidth) / 2;\n                \n                const leftArrowX = arrowStartX + arrowPadding;\n                const rightArrowX = arrowStartX + arrowPadding * 2 + arrowSize;\n                \n                // Check left arrow (previous with wraparound)\n                if (p.mouseX >= leftArrowX && p.mouseX <= leftArrowX + arrowSize &&\n                    p.mouseY >= arrowY && p.mouseY <= arrowY + arrowSize) {\n                    const prevIndex = activeInfoCard === 0 ? projects.length - 1 : activeInfoCard - 1;\n                    navigateToProject(prevIndex);\n                    return;\n                }\n                \n                // Check right arrow (next with wraparound)\n                if (p.mouseX >= rightArrowX && p.mouseX <= rightArrowX + arrowSize &&\n                    p.mouseY >= arrowY && p.mouseY <= arrowY + arrowSize) {\n                    const nextIndex = activeInfoCard === projects.length - 1 ? 0 : activeInfoCard + 1;\n                    navigateToProject(nextIndex);\n                    return;\n                }\n            }\n\n            // Check if clicking in gallery area\n            const project = projects[activeInfoCard];\n            if (project.images && project.images.length > 0) {\n                const baseTextScale = isMobile ? cardSize / 400 : cardSize / 600;\n                const padding = 25 * baseTextScale;\n                const lineHeight = 25 * baseTextScale;\n                const galleryY = cardY + padding + lineHeight * 5.3; // Approximate gallery Y position\n                const galleryHeight = cardSize * 0.4;\n\n                if (p.mouseX >= cardX + padding && p.mouseX <= cardX + cardSize - padding &&\n                    p.mouseY >= galleryY && p.mouseY <= galleryY + galleryHeight) {\n                    // Start gallery dragging\n                    galleryDragging = true;\n                    galleryDragStartX = p.mouseX;\n                    galleryStartScrollX = galleryScrollX;\n                    return;\n                }\n            }\n\n            // Check if clicking outside the card\n            if (p.mouseX < cardX || p.mouseX > cardX + cardSize ||\n                p.mouseY < cardY || p.mouseY > cardY + cardSize) {\n                closeInfoCard();\n                return;\n            }\n\n            // If clicking inside the card (but not close button), do nothing\n            return;\n        }\n\n        // Check planet buttons\n        planetButtons.forEach((planetButton, index) => {\n            if (planetButton.contains(p.mouseX, p.mouseY)) {\n                openInfoCard(index);\n                // Update URL to include project slug\n                const project = projects[index];\n                if (project && project.slug && window.appRouter) {\n                    const newPath = `/interactive/live/${project.slug}`;\n                    // Only update if the current path is different\n                    if (window.location.hash !== `#${newPath}`) {\n                        window.history.pushState(null, '', `#${newPath}`);\n                        currentPath = newPath;\n                    }\n                }\n                return;\n            }\n        });\n    }\n\n    p.mouseDragged = function () {\n        if (galleryDragging && activeInfoCard !== null) {\n            const dragDistance = p.mouseX - galleryDragStartX;\n            galleryScrollX = galleryStartScrollX + dragDistance;\n            targetGalleryScrollX = galleryScrollX;\n        }\n    }\n\n    p.mouseReleased = function () {\n        if (galleryDragging) {\n            const dragDistance = Math.abs(p.mouseX - galleryDragStartX);\n            galleryDragging = false;\n\n            // If minimal drag (< 5 pixels), treat as a click for media expansion\n            if (dragDistance < 5 && activeInfoCard !== null) {\n                const project = projects[activeInfoCard];\n                if (project && project.images && project.images.length > 0) {\n                    const { size: cardSize, x: cardX, y: cardY, isMobile } = getCardDimensions();\n                    const { galleryY, galleryHeight, baseTextScale, padding } = getGalleryLayout(cardSize, cardX, cardY, isMobile);\n                    const { itemWidth, itemHeight, galleryPadding } = getGalleryItemDimensions(galleryHeight, baseTextScale);\n                    const startX = cardX + padding + galleryPadding; // Left padding\n                    const startY = galleryY + galleryPadding; // Top padding\n\n                    // Check if clicking on a specific media item\n                    for (let i = 0; i < project.images.length; i++) {\n                        const itemX = startX + i * (itemWidth + galleryPadding) + galleryScrollX;\n                        if (p.mouseX >= itemX && p.mouseX <= itemX + itemWidth &&\n                            p.mouseY >= startY && p.mouseY <= startY + itemHeight) {\n                            openExpandedMedia(i);\n                            return;\n                        }\n                    }\n                }\n            }\n\n            // Apply momentum/easing to final scroll position\n            const project = projects[activeInfoCard];\n            if (project && project.images && project.images.length > 0) {\n                const cardSize = widthCheck(p.width) ?\n                    p.min(p.width * 0.95, p.height * 0.9) :\n                    p.min(p.width * 0.9, p.height * 0.85, 900);\n                const isMobile = widthCheck(p.width);\n                const baseTextScale = isMobile ? cardSize / 400 : cardSize / 600;\n                const padding = 25 * baseTextScale;\n                const galleryWidth = cardSize - 2 * padding;\n                const galleryHeight = cardSize * 0.4;\n                const itemHeight = galleryHeight * 0.9;\n                const itemWidth = itemHeight * 1.5; // 3:2 aspect ratio\n                const itemSpacing = 20 * baseTextScale;\n                const totalWidth = project.images.length * (itemWidth + itemSpacing) - itemSpacing;\n                const maxScroll = p.max(0, totalWidth - galleryWidth + 20 * baseTextScale);\n                targetGalleryScrollX = p.constrain(targetGalleryScrollX, -maxScroll, 0);\n            }\n        }\n    }\n\n    p.mouseWheel = function (event) {\n        if (activeInfoCard !== null) {\n            const project = projects[activeInfoCard];\n            if (project && project.images && project.images.length > 0) {\n                // Check if mouse is over gallery area\n                const { size: cardSize, x: cardX, y: cardY, isMobile } = getCardDimensions();\n                const { galleryY, galleryHeight, baseTextScale, padding } = getGalleryLayout(cardSize, cardX, cardY, isMobile);\n\n                if (p.mouseX >= cardX + padding && p.mouseX <= cardX + cardSize - padding &&\n                    p.mouseY >= galleryY && p.mouseY <= galleryY + galleryHeight) {\n\n                    const scrollAmount = event.delta * 2;\n                    targetGalleryScrollX -= scrollAmount;\n\n                    // Constrain scroll bounds using correct 3:2 aspect ratio\n                    const galleryWidth = cardSize - 2 * padding;\n                    const itemHeight = galleryHeight * 0.9;\n                    const itemWidth = itemHeight * 1.5; // 3:2 aspect ratio\n                    const itemSpacing = 20 * baseTextScale;\n                    const totalWidth = project.images.length * (itemWidth + itemSpacing) - itemSpacing;\n                    const maxScroll = p.max(0, totalWidth - galleryWidth + 20 * baseTextScale);\n                    targetGalleryScrollX = p.constrain(targetGalleryScrollX, -maxScroll, 0);\n\n                    return false; // Prevent page scroll\n                }\n            }\n        }\n    }\n\n    function layoutUI() {\n        ui.length = 0;\n        const s_font = Math.max(0.022 * p.width, 32);\n    }\n\n    function openInfoCard(index) {\n        activeInfoCard = index;\n        targetAlpha = 255;\n        infoCardAnimationStart = p.millis();\n        infoCardAnimating = true;\n        galleryScrollX = 0;\n        targetGalleryScrollX = 0;\n        galleryDragging = false;\n        loadMediaForProject(projects[index]);\n        \n        // Disable browser swipe navigation while info card is open\n        document.body.style.overscrollBehavior = 'none';\n        document.body.style.touchAction = 'none';\n        \n        // Update breadcrumb to show current project\n        const project = projects[index];\n        if (project && project.slug) {\n            import(\"../elements/breadcrumb-nav.js\").then(({ updateBreadcrumb }) => {\n                updateBreadcrumb(`/interactive/live/${project.slug}`);\n            });\n        }\n    }\n\n    function closeInfoCard() {\n        targetAlpha = 0;\n        infoCardAnimationStart = p.millis();\n        infoCardAnimating = true;\n        galleryScrollX = 0;\n        targetGalleryScrollX = 0;\n        galleryDragging = false;\n\n        // Clean up any expanded media\n        if (expandedMediaIndex !== null) {\n            closeExpandedMedia();\n        }\n        \n        // Re-enable browser swipe navigation when info card is closed\n        document.body.style.overscrollBehavior = '';\n        document.body.style.touchAction = '';\n        \n        // Update URL back to main installations page\n        if (window.location.hash.includes('/interactive/live/') && window.location.hash !== '#/interactive/live') {\n            window.history.pushState(null, '', '#/interactive/live');\n            currentPath = '/interactive/live';\n        }\n        \n        // Update breadcrumb back to installations page\n        import(\"../elements/breadcrumb-nav.js\").then(({ updateBreadcrumb }) => {\n            updateBreadcrumb('/interactive/live');\n        });\n        \n        // Clear session storage\n        sessionStorage.removeItem('installationsActiveProject');\n    }\n\n    function getCloseButtonHoverCheck() {\n        return (mouseX, mouseY) => {\n            if (activeInfoCard !== null) {\n                const { size: cardSize, x: cardX, y: cardY, isMobile } = getCardDimensions();\n                const closeButtonSize = isMobile ? 44 : 30;\n                const closeButtonX = cardX + cardSize - closeButtonSize - 10;\n                const closeButtonY = cardY + 10;\n\n                return mouseX >= closeButtonX && mouseX <= closeButtonX + closeButtonSize &&\n                    mouseY >= closeButtonY && mouseY <= closeButtonY + closeButtonSize;\n            }\n            return false;\n        };\n    }\n\n    function setupSolarSystem(starRadius) {\n        planetButtons = [];\n        /*\n        If this gets too busy, we could consider having a \"system\" for each year that can be selected from a side/bottom menu?\n        OR we make a larger virtual canvas and \"pan\" around to visit other systems? >:^)\n        */\n        const planetCount = projects.length;\n\n        for (let i = 0; i < planetCount; i++) {\n            const orbitRadius = starRadius * (1.8 + i * 0.8);\n            const angle = p.random(p.TWO_PI);\n            const speed = 0.00005 / (1 + i * 0.3);\n            const size = starRadius * (0.3 + p.random(0.2));\n            const color = p.map(i, 0, planetCount, 230, 120);\n            const textSize = mobile ? Math.max(16, size * 0.8) : Math.max(14, size * 0.7);\n            const textOffsetY = size * 1.2; // Position text below planet\n\n            planetButtons.push(new UIPlanetButton(p, 0, 0, size, orbitRadius, angle, speed, color, projects[i].name, textSize, 0, textOffsetY));\n        }\n    }\n\n    function renderSolarSystem() {\n        // Draw the central star\n        renderStar(cx, cy, r);\n\n        // Draw planets\n        p.noFill();\n        p.strokeWeight(1);\n\n        planetButtons.forEach((planetButton, idx) => {\n            // Update planet position\n            planetButton.updatePosition(cx, cy, p.deltaTime);\n\n            // Draw orbital path (faint)\n            p.noFill();\n            p.stroke(80, 80, 80, 100);\n            p.strokeWeight(1);\n            p.circle(cx, cy, planetButton.orbitRadius * 2);\n\n            // Render planet\n            planetButton.render(smoothV, short);\n        });\n    }\n\n    function renderStar(x, y, radius) {\n        // Draw the central star body\n        p.fill(star_colours[0]);\n        p.noStroke();\n        p.circle(x, y, radius * 0.8);\n\n        // Draw rotating triangle ring\n        const triangleCount = 3;\n        const ringRadius = radius * (0.69 + 0.03 * p.sin(0.001 * p.millis()));\n        const triangleSize = radius * 0.15;\n        const rotationSpeed = 0.00005;\n        const currentTime = p.millis();\n        const rotationAngle = currentTime * rotationSpeed;\n        for (let i = 0; i < triangleCount; i++) {\n            const angle = (p.TWO_PI / triangleCount) * i + rotationAngle;\n            const trianglePos = radialToCartesian(ringRadius, angle);\n            const triangleX = x + trianglePos.x;\n            const triangleY = y + trianglePos.y;\n\n            p.push();\n            p.translate(triangleX, triangleY);\n            p.rotate(-angle + p.HALF_PI); // Point triangles outward\n            p.triangle(0, -triangleSize * 0.6, -triangleSize * 0.5, triangleSize * 0.5, triangleSize * 0.5, triangleSize * 0.5);\n            p.pop();\n        }\n    }\n\n    function renderInfoCard(project) {\n        // Calculate card size based on screen size\n        const { size: cardSize, x: cardX, y: cardY, isMobile } = getCardDimensions();\n\n        // Card background with semi-transparent overlay\n        p.fill(0, 0, 0, 120 * (infoCardAlpha / 255));\n        p.noStroke();\n        p.rect(0, 0, p.width, p.height);\n\n        // Main card background\n        p.fill(23, 23, 23, 240 * (infoCardAlpha / 255));\n        p.stroke(230, infoCardAlpha);\n        p.strokeWeight(2);\n        p.rect(cardX, cardY, cardSize, cardSize);\n\n        // Close button\n        const closeButtonSize = isMobile ? 44 : 30;\n        const closeButtonX = cardX + cardSize - closeButtonSize - 10;\n        const closeButtonY = cardY + 10;\n        renderCloseButton(closeButtonX, closeButtonY, closeButtonSize, infoCardAlpha);\n\n        // Text styling\n        p.fill(230, infoCardAlpha);\n        p.noStroke();\n        p.textAlign(p.LEFT, p.TOP);\n\n        // Scale text sizes based on card size - smaller fonts for desktop\n        const baseTextScale = isMobile ? cardSize / 400 : cardSize / 600;\n        const padding = 25 * baseTextScale;\n        const lineHeight = 25 * baseTextScale;\n        let textY = cardY + padding;\n\n        // Project Name (larger)\n        p.textFont('BPdotsSquareVF', {\n            fontVariationSettings: `wght 900`\n        });\n        p.textSize(24 * baseTextScale);\n        p.text(project.name, cardX + padding, textY, cardSize - 2 * padding - closeButtonSize);\n        textY += lineHeight * 1.8;\n\n        // Type\n        p.textSize(16 * baseTextScale);\n        p.text(project.type, cardX + padding, textY, cardSize - 2 * padding);\n        textY += lineHeight;\n\n        // Location\n        p.text(project.location, cardX + padding, textY, cardSize - 2 * padding);\n        textY += lineHeight;\n\n        // Year\n        p.text(project.year, cardX + padding, textY, cardSize - 2 * padding);\n        textY += lineHeight * 1.5;\n\n        // Gallery section (if images exist)\n        if (project.images && project.images.length > 0) {\n            const galleryHeight = cardSize * 0.4;\n            const galleryY = textY;\n            renderGallery(project.images, cardX + padding, galleryY, cardSize - 2 * padding, galleryHeight, baseTextScale);\n            textY += galleryHeight + lineHeight;\n        }\n\n        // Description (if available)\n        if (project.description && project.description.length > 0) {\n            p.textFont('ZxGamut', { fontVariationSettings: `wght 400` });\n            p.textSize(14 * baseTextScale);\n            p.fill(230, infoCardAlpha);\n            p.noStroke();\n            const descriptionHeight = cardSize - (textY - cardY) - padding;\n            p.text(project.description, cardX + padding, textY, cardSize - 2 * padding, descriptionHeight);\n            // Reset font back to default\n            p.textFont('BPdotsSquareVF', {\n                fontVariationSettings: `wght 900`\n            });\n        }\n        \n        // Navigation arrows (only show if there are multiple projects)\n        if (projects.length > 1) {\n            renderNavigationArrows(cardX, cardY, cardSize, isMobile, baseTextScale);\n        }\n    }\n\n    function renderNavigationArrows(cardX, cardY, cardSize, isMobile, baseTextScale) {\n        // Arrow button dimensions - responsive to screen size\n        const arrowSize = isMobile ? 50 : 40;\n        const arrowPadding = isMobile ? 20 : 15;\n        const arrowY = cardY + cardSize + arrowPadding;\n        \n        // Position arrows centered below the card\n        const totalArrowWidth = arrowSize * 2 + arrowPadding * 3; // 2 arrows + spacing\n        const arrowStartX = cardX + (cardSize - totalArrowWidth) / 2;\n        \n        const leftArrowX = arrowStartX + arrowPadding;\n        const rightArrowX = arrowStartX + arrowPadding * 2 + arrowSize;\n        \n        // Arrows are always active with wraparound navigation\n        const arrowAlpha = infoCardAlpha;\n        \n        // Left arrow (previous with wraparound)\n        renderArrowButton(leftArrowX, arrowY, arrowSize, 'left', arrowAlpha, isMobile);\n        \n        // Right arrow (next with wraparound)  \n        renderArrowButton(rightArrowX, arrowY, arrowSize, 'right', arrowAlpha, isMobile);\n        \n        // Project counter text (e.g., \"2 / 7\")\n        const counterY = arrowY + arrowSize + (isMobile ? 25 : 20);\n        p.fill(230, infoCardAlpha);\n        p.noStroke();\n        p.textAlign(p.CENTER, p.CENTER);\n        p.textFont('BPdotsSquareVF', { fontVariationSettings: `wght 600` });\n        p.textSize((isMobile ? 16 : 14) * baseTextScale);\n        p.text(`${activeInfoCard + 1} / ${projects.length}`, cardX + cardSize/2, counterY);\n    }\n    \n    function renderArrowButton(x, y, size, direction, alpha, isMobile) {\n        // Button background\n        p.fill(40, 40, 40, alpha);\n        p.stroke(100, alpha);\n        p.strokeWeight(isMobile ? 2 : 1);\n        p.rect(x, y, size, size);\n        \n        // Arrow symbol\n        p.fill(230, alpha);\n        p.noStroke();\n        \n        const arrowPadding = size * 0.25;\n        const arrowCenterX = x + size/2;\n        const arrowCenterY = y + size/2;\n        const arrowWidth = size * 0.3;\n        const arrowHeight = size * 0.4;\n        \n        if (direction === 'left') {\n            // Left-pointing triangle\n            p.triangle(\n                arrowCenterX - arrowWidth/2, arrowCenterY,\n                arrowCenterX + arrowWidth/2, arrowCenterY - arrowHeight/2,\n                arrowCenterX + arrowWidth/2, arrowCenterY + arrowHeight/2\n            );\n        } else {\n            // Right-pointing triangle  \n            p.triangle(\n                arrowCenterX + arrowWidth/2, arrowCenterY,\n                arrowCenterX - arrowWidth/2, arrowCenterY - arrowHeight/2,\n                arrowCenterX - arrowWidth/2, arrowCenterY + arrowHeight/2\n            );\n        }\n    }\n    \n    function navigateToProject(newIndex, fromHashChange = false) {\n        if (newIndex >= 0 && newIndex < projects.length && newIndex !== activeInfoCard) {\n            // Update active info card\n            activeInfoCard = newIndex;\n            \n            // Reset gallery scroll\n            galleryScrollX = 0;\n            targetGalleryScrollX = 0;\n            \n            // Close any expanded media\n            if (expandedMediaIndex !== null) {\n                closeExpandedMedia();\n            }\n            \n            // Load media for new project\n            loadMediaForProject(projects[newIndex]);\n            \n            // Update URL and breadcrumb\n            const newProject = projects[newIndex];\n            if (newProject && newProject.slug) {\n                const newPath = `/interactive/live/${newProject.slug}`;\n                \n                // Only update URL if this wasn't triggered by a hash change\n                if (!fromHashChange) {\n                    isInternalNavigation = true;\n                    window.history.replaceState(null, '', `#${newPath}`);\n                }\n                currentPath = newPath;\n                \n                // Update breadcrumb\n                import(\"../elements/breadcrumb-nav.js\").then(({ updateBreadcrumb }) => {\n                    updateBreadcrumb(newPath);\n                });\n                \n                // Update session storage\n                sessionStorage.setItem('installationsActiveProject', newProject.slug);\n            }\n        }\n    }\n    \n    function getNavigationButtonHoverCheck() {\n        return (mouseX, mouseY) => {\n            if (activeInfoCard !== null && projects.length > 1) {\n                const { size: cardSize, x: cardX, y: cardY, isMobile } = getCardDimensions();\n                const arrowSize = isMobile ? 50 : 40;\n                const arrowPadding = isMobile ? 20 : 15;\n                const arrowY = cardY + cardSize + arrowPadding;\n                \n                const totalArrowWidth = arrowSize * 2 + arrowPadding * 3;\n                const arrowStartX = cardX + (cardSize - totalArrowWidth) / 2;\n                \n                const leftArrowX = arrowStartX + arrowPadding;\n                const rightArrowX = arrowStartX + arrowPadding * 2 + arrowSize;\n                \n                // Check left arrow (always active with wraparound)\n                if (mouseX >= leftArrowX && mouseX <= leftArrowX + arrowSize &&\n                    mouseY >= arrowY && mouseY <= arrowY + arrowSize) {\n                    return true;\n                }\n                \n                // Check right arrow (always active with wraparound)\n                if (mouseX >= rightArrowX && mouseX <= rightArrowX + arrowSize &&\n                    mouseY >= arrowY && mouseY <= arrowY + arrowSize) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    function loadMediaForProject(project) {\n        if (!project.images || project.images.length === 0) return;\n\n        project.images.forEach((mediaItem, index) => {\n            const pathString = getMediaPath(mediaItem);\n\n            if (!loadedMedia.has(pathString)) {\n                const isVideo = isVideoFile(pathString);\n\n                // On mobile, check if we have a thumbnail for this video\n                if (mobile && isVideo) {\n                    if (project.thumbnails && project.thumbnails[mediaItem]) {\n                        // Load thumbnail image instead of video for mobile\n                        const thumbnailPath = project.thumbnails[mediaItem];\n                        p.loadImage(thumbnailPath, (img) => {\n                            loadedMedia.set(pathString, { element: img, type: 'video-thumbnail', videoSrc: pathString, loaded: true });\n                        }, (err) => {\n                            console.error('Failed to load video thumbnail:', thumbnailPath, err);\n                            // Fallback to black placeholder if thumbnail fails\n                            loadedMedia.set(pathString, { element: null, type: 'video-placeholder', videoSrc: pathString, loaded: true });\n                        });\n                    } else {\n                        // No thumbnail available - use black placeholder\n                        loadedMedia.set(pathString, { element: null, type: 'video-placeholder', videoSrc: pathString, loaded: true });\n                    }\n                    return;\n                }\n                if (isVideo) {\n                    loadVideoElement(pathString);\n                } else {\n                    p.loadImage(pathString, (img) => {\n                        loadedMedia.set(pathString, { element: img, type: 'image', loaded: true });\n                    }, (err) => {\n                        console.error('Failed to load image:', pathString, err);\n                    });\n                }\n            }\n        });\n    }\n\n    function loadVideoElement(pathString) {\n        const video = p.createVideo(pathString, () => {\n            loadedMedia.set(pathString, { element: video, type: 'video', loaded: true });\n        });\n        video.hide();\n        video.volume(0);\n\n        // Set attributes for iOS compatibility first\n        video.elt.setAttribute('playsinline', true);\n        video.elt.setAttribute('muted', true);\n        video.elt.setAttribute('preload', 'metadata');\n\n        // Different behavior for mobile vs desktop\n        if (!mobile) {\n            // Desktop: autoplay looping for moving preview\n            video.loop();\n        } else {\n            // Mobile: load first frame only (fallback when no thumbnail available)\n            video.noLoop();\n            video.pause();\n\n            video.elt.addEventListener('loadedmetadata', () => {\n                video.elt.currentTime = 0.1;\n            });\n\n            video.elt.addEventListener('seeked', () => {\n                video.pause();\n            });\n        }\n\n        video.elt.addEventListener('loadeddata', () => {\n            loadedMedia.set(pathString, { element: video, type: 'video', loaded: true });\n        });\n\n        video.elt.addEventListener('canplay', () => {\n            loadedMedia.set(pathString, { element: video, type: 'video', loaded: true });\n        });\n\n        loadedMedia.set(pathString, { element: video, type: 'video', loaded: false });\n\n        setTimeout(() => {\n            const currentData = loadedMedia.get(pathString);\n            if (currentData && !currentData.loaded) {\n                loadedMedia.set(pathString, { element: video, type: 'video', loaded: true });\n            }\n        }, 3000);\n    }\n\n    function renderGallery(images, x, y, width, height, scale) {\n        if (!images || images.length === 0) return;\n\n        // Gallery container background\n        p.fill(0, 0, 0, 100 * (infoCardAlpha / 255));\n        p.stroke(230, infoCardAlpha * 0.3);\n        p.strokeWeight(1);\n        p.rect(x, y, width, height);\n\n        // Set up clipping mask for gallery\n        p.push();\n\n        // Create clipping rectangle\n        p.drawingContext.save();\n        p.drawingContext.beginPath();\n        p.drawingContext.rect(x, y, width, height);\n        p.drawingContext.clip();\n\n        // Use 3:2 aspect ratio for gallery items with equal padding\n        const padding = 10 * scale; // Equal padding for all sides and between items\n        const itemHeight = height - (2 * padding); // Account for top and bottom padding\n        const itemWidth = itemHeight * 1.5; // 3:2 aspect ratio\n        const totalWidth = images.length * (itemWidth + padding) - padding; // Last item doesn't need trailing padding\n        const startX = x + padding; // Left padding\n        const startY = y + padding; // Top padding\n\n        // Constrain scroll bounds\n        const maxScroll = p.max(0, totalWidth - width + (2 * padding));\n        targetGalleryScrollX = p.constrain(targetGalleryScrollX, -maxScroll, 0);\n\n        // Render media items\n        images.forEach((mediaItem, index) => {\n            const pathString = getMediaPath(mediaItem);\n            const itemX = startX + index * (itemWidth + padding) + galleryScrollX;\n\n            // Only render if visible\n            if (itemX + itemWidth >= x && itemX <= x + width) {\n                const mediaData = loadedMedia.get(pathString);\n\n                if (mediaData && mediaData.loaded) {\n                    p.push();\n                    p.tint(255, infoCardAlpha);\n\n                    try {\n                        if (mediaData.type === 'image') {\n                            // Fill the entire box, cropping as needed\n                            const img = mediaData.element;\n                            const { sourceX, sourceY, sourceWidth, sourceHeight } = calculateCropDimensions(img.width, img.height, itemWidth, itemHeight);\n\n                            p.image(img, itemX, startY, itemWidth, itemHeight, sourceX, sourceY, sourceWidth, sourceHeight);\n                        } else if (mediaData.type === 'video-thumbnail') {\n                            // Mobile: Show thumbnail image with play icon\n                            const img = mediaData.element;\n                            const { sourceX, sourceY, sourceWidth, sourceHeight } = calculateCropDimensions(img.width, img.height, itemWidth, itemHeight);\n\n                            p.image(img, itemX, startY, itemWidth, itemHeight, sourceX, sourceY, sourceWidth, sourceHeight);\n\n                            // Small play icon overlay\n                            const playSize = itemWidth * 0.15;\n                            const playX = itemX + (itemWidth - playSize) / 2;\n                            const playY = startY + (itemHeight - playSize) / 2;\n                            renderPlayIcon(playX, playY, playSize, infoCardAlpha);\n                        } else if (mediaData.type === 'video') {\n                            // Show first frame of video as preview\n                            const video = mediaData.element;\n                            if (video.elt && (video.elt.readyState >= 1 || video.elt.videoWidth > 0)) {\n                                const videoWidth = video.elt.videoWidth || video.width || 1920;\n                                const videoHeight = video.elt.videoHeight || video.height || 1080;\n                                const { sourceX, sourceY, sourceWidth, sourceHeight } = calculateCropDimensions(videoWidth, videoHeight, itemWidth, itemHeight);\n\n                                p.image(video, itemX, startY, itemWidth, itemHeight, sourceX, sourceY, sourceWidth, sourceHeight);\n                            } else {\n                                // Fallback to dark background if video not ready\n                                p.fill(40, 40, 40, 200 * (infoCardAlpha / 255));\n                                p.noStroke();\n                                p.rect(itemX, startY, itemWidth, itemHeight);\n                            }\n\n                            // Smaller, more subtle play icon overlay\n                            const playSize = itemWidth * 0.15; // Reduced from 0.3 to 0.15\n                            const playX = itemX + (itemWidth - playSize) / 2;\n                            const playY = startY + (itemHeight - playSize) / 2;\n\n                            // Semi-transparent play button background\n                            p.fill(0, 0, 0, 120 * (infoCardAlpha / 255)); // Darker, more subtle\n                            p.noStroke();\n                            p.circle(playX + playSize/2, playY + playSize/2, playSize);\n\n                            // Play triangle - smaller and more subtle\n                            p.fill(255, 255, 255, 180 * (infoCardAlpha / 255));\n                            const triangleSize = playSize * 0.35;\n                            const triangleCenterX = playX + playSize/2 + triangleSize * 0.1;\n                            const triangleCenterY = playY + playSize/2;\n                            p.triangle(\n                                triangleCenterX - triangleSize/2, triangleCenterY - triangleSize/2,\n                                triangleCenterX - triangleSize/2, triangleCenterY + triangleSize/2,\n                                triangleCenterX + triangleSize/2, triangleCenterY\n                            );\n                        } else if (mediaData.type === 'video-placeholder') {\n                            // Mobile: Show black placeholder with play icon\n                            p.fill(23, 23, 23, 240 * (infoCardAlpha / 255));\n                            p.noStroke();\n                            p.rect(itemX, startY, itemWidth, itemHeight);\n\n                            // Small play icon overlay\n                            const playSize = itemWidth * 0.15;\n                            const playX = itemX + (itemWidth - playSize) / 2;\n                            const playY = startY + (itemHeight - playSize) / 2;\n                            renderPlayIcon(playX, playY, playSize, infoCardAlpha);\n                        }\n                    }\n                    catch (error) {\n                        console.warn('Error rendering media:', error);\n                        // Fall back to placeholder\n                        p.fill(80, 80, 80, 150 * (infoCardAlpha / 255));\n                        p.stroke(120, infoCardAlpha * 0.5);\n                        p.strokeWeight(1);\n                        p.rect(itemX, startY, itemWidth, itemHeight);\n\n                        // Show error text\n                        p.fill(200, infoCardAlpha * 0.7);\n                        p.noStroke();\n                        p.textAlign(p.CENTER, p.CENTER);\n                        p.textSize(10 * scale);\n                        p.text(mediaData.type === 'video' ? 'Video Error' : 'Image Error', itemX + itemWidth / 2, startY + itemHeight / 2);\n                    }\n\n                    p.pop();\n                } else {\n                    // Placeholder for loading media\n                    p.fill(50, 50, 50, 150 * (infoCardAlpha / 255));\n                    p.stroke(100, infoCardAlpha * 0.5);\n                    p.strokeWeight(1);\n                    p.rect(itemX, startY, itemWidth, itemHeight);\n\n                    // Loading text\n                    p.fill(150, infoCardAlpha * 0.7);\n                    p.noStroke();\n                    p.textAlign(p.CENTER, p.CENTER);\n                    p.textSize(12 * scale);\n                    p.text('Loading...', itemX + itemWidth / 2, startY + itemHeight / 2);\n                }\n\n                // Media border\n                p.noFill();\n                p.stroke(230, infoCardAlpha * 0.6);\n                p.strokeWeight(1);\n                p.rect(itemX, startY, itemWidth, itemHeight);\n            }\n        });\n\n        // Scroll indicators (if needed)\n        if (totalWidth > width) {\n            const indicatorAlpha = infoCardAlpha * 0.8;\n\n            // Left scroll indicator\n            if (galleryScrollX < 0) {\n                p.fill(230, indicatorAlpha);\n                p.noStroke();\n                p.triangle(x + 5, y + height / 2, x + 15, y + height / 2 - 5, x + 15, y + height / 2 + 5);\n            }\n\n            // Right scroll indicator\n            if (galleryScrollX > -maxScroll) {\n                p.fill(230, indicatorAlpha);\n                p.noStroke();\n                p.triangle(x + width - 5, y + height / 2, x + width - 15, y + height / 2 - 5, x + width - 15, y + height / 2 + 5);\n            }\n        }\n\n        // Restore clipping context\n        p.drawingContext.restore();\n\n        p.pop();\n    }\n\n    function radialToCartesian(r, a) {\n        return { x: r * p.cos(a), y: -r * p.sin(a) };\n    }\n\n    function openExpandedMedia(index) {\n        expandedMediaIndex = index;\n        targetExpandedAlpha = 255;\n        expandedMediaAnimationStart = p.millis();\n        expandedMediaAnimating = true;\n    }\n\n    function closeExpandedMedia() {\n        targetExpandedAlpha = 0;\n        expandedMediaAnimationStart = p.millis();\n        expandedMediaAnimating = true;\n\n        // Clean up native video element\n        if (nativeVideoElement) {\n            nativeVideoElement.remove();\n            nativeVideoElement = null;\n        }\n    }\n\n    function renderExpandedNativeVideo(videoPath) {\n        // Dark overlay\n        p.fill(0, 0, 0, 200 * (expandedMediaAlpha / 255));\n        p.noStroke();\n        p.rect(0, 0, p.width, p.height);\n\n        // Create or update native video element\n        if (!nativeVideoElement) {\n            nativeVideoElement = document.createElement('video');\n            nativeVideoElement.src = videoPath;\n            nativeVideoElement.controls = true;\n            nativeVideoElement.preload = 'metadata';\n            nativeVideoElement.setAttribute('playsinline', true);\n            nativeVideoElement.muted = true;\n\n            // Style the video element\n            nativeVideoElement.style.position = 'fixed';\n            nativeVideoElement.style.zIndex = '1000';\n            nativeVideoElement.style.backgroundColor = '#000';\n            nativeVideoElement.style.borderRadius = '8px';\n\n            // Add to DOM\n            document.body.appendChild(nativeVideoElement);\n        }\n\n        // Calculate video size and position (full width on mobile, 80% on desktop)\n        const isMobile = widthCheck(p.width);\n        const maxWidth = isMobile ? p.width : p.width * 0.8;\n        const maxHeight = isMobile ? p.height * 0.8 : p.height * 0.8;\n\n        // Use 16:9 aspect ratio as default, or actual video ratio if available\n        let aspectRatio = 16 / 9;\n        if (nativeVideoElement.videoWidth && nativeVideoElement.videoHeight) {\n            aspectRatio = nativeVideoElement.videoWidth / nativeVideoElement.videoHeight;\n        }\n\n        let videoWidth, videoHeight;\n        if (aspectRatio > maxWidth / maxHeight) {\n            videoWidth = maxWidth;\n            videoHeight = maxWidth / aspectRatio;\n        } else {\n            videoHeight = maxHeight;\n            videoWidth = maxHeight * aspectRatio;\n        }\n\n        // Position the video element\n        const videoX = (p.width - videoWidth) / 2;\n        const videoY = (p.height - videoHeight) / 2;\n\n        // Apply positioning and sizing\n        nativeVideoElement.style.left = videoX + 'px';\n        nativeVideoElement.style.top = videoY + 'px';\n        nativeVideoElement.style.width = videoWidth + 'px';\n        nativeVideoElement.style.height = videoHeight + 'px';\n        nativeVideoElement.style.opacity = expandedMediaAlpha / 255;\n\n        // Close button (drawn over the video)\n        const closeSize = 40;\n        const closeX = videoX + videoWidth - closeSize - 10;\n        const closeY = videoY + 10;\n\n        p.fill(0, 0, 0, 150 * (expandedMediaAlpha / 255));\n        p.stroke(255, expandedMediaAlpha);\n        p.strokeWeight(2);\n        p.rect(closeX, closeY, closeSize, closeSize);\n\n        // X symbol\n        p.stroke(255, expandedMediaAlpha);\n        p.strokeWeight(3);\n        const padding = 12;\n        p.line(closeX + padding, closeY + padding,\n            closeX + closeSize - padding, closeY + closeSize - padding);\n        p.line(closeX + closeSize - padding, closeY + padding,\n            closeX + padding, closeY + closeSize - padding);\n    }\n\n    function renderExpandedMedia() {\n        if (activeInfoCard === null || expandedMediaIndex === null) return;\n\n        const project = projects[activeInfoCard];\n        if (!project.images || expandedMediaIndex >= project.images.length) return;\n\n        const mediaItem = project.images[expandedMediaIndex];\n        let pathString;\n        if (typeof mediaItem === 'string') {\n            pathString = mediaItem;\n        } else if (mediaItem && typeof mediaItem === 'object') {\n            pathString = mediaItem.default || mediaItem.src || mediaItem.href || mediaItem.toString();\n        } else {\n            pathString = String(mediaItem);\n        }\n\n        const mediaData = loadedMedia.get(pathString);\n        const isVideo = pathString.toLowerCase().match(/\\.(mp4|mov|webm|avi)(\\?.*)?$/i);\n\n        // For videos or video placeholders, use native video player\n        if (isVideo || (mediaData && (mediaData.type === 'video-placeholder' || mediaData.type === 'video-thumbnail'))) {\n            // Use the original video source for native player\n            const videoSrc = mediaData && mediaData.videoSrc ? mediaData.videoSrc : pathString;\n            renderExpandedNativeVideo(videoSrc);\n            return;\n        }\n\n        // For images, continue with p5.js rendering\n        if (!mediaData || !mediaData.loaded) return;\n\n        // Dark overlay\n        p.fill(0, 0, 0, 200 * (expandedMediaAlpha / 255));\n        p.noStroke();\n        p.rect(0, 0, p.width, p.height);\n\n        // Calculate media size (full width on mobile, 80% on desktop)\n        const isMobile = widthCheck(p.width);\n        const maxWidth = isMobile ? p.width : p.width * 0.8;\n        const maxHeight = isMobile ? p.height * 0.8 : p.height * 0.8;\n        let mediaWidth, mediaHeight;\n\n        if (mediaData.type === 'image') {\n            const img = mediaData.element;\n            const aspectRatio = img.width / img.height;\n            if (aspectRatio > maxWidth / maxHeight) {\n                mediaWidth = maxWidth;\n                mediaHeight = maxWidth / aspectRatio;\n            } else {\n                mediaHeight = maxHeight;\n                mediaWidth = maxHeight * aspectRatio;\n            }\n        } else if (mediaData.type === 'video') {\n            const video = mediaData.element;\n            // Get video dimensions with fallbacks\n            let videoWidth = video.elt.videoWidth || video.width || 1920;\n            let videoHeight = video.elt.videoHeight || video.height || 1080;\n\n            // Ensure we have valid dimensions\n            if (videoWidth <= 0 || videoHeight <= 0) {\n                videoWidth = 1920;\n                videoHeight = 1080;\n            }\n\n            const aspectRatio = videoWidth / videoHeight;\n            if (aspectRatio > maxWidth / maxHeight) {\n                mediaWidth = maxWidth;\n                mediaHeight = maxWidth / aspectRatio;\n            } else {\n                mediaHeight = maxHeight;\n                mediaWidth = maxHeight * aspectRatio;\n            }\n        }\n\n        const mediaX = (p.width - mediaWidth) / 2;\n        const mediaY = (p.height - mediaHeight) / 2;\n\n        // Render expanded media\n        p.push();\n        p.tint(255, expandedMediaAlpha);\n        p.image(mediaData.element, mediaX, mediaY, mediaWidth, mediaHeight);\n        p.pop();\n\n        // Close button\n        const closeSize = 40;\n        const closeX = mediaX + mediaWidth - closeSize - 10;\n        const closeY = mediaY + 10;\n\n        p.fill(0, 0, 0, 150 * (expandedMediaAlpha / 255));\n        p.stroke(255, expandedMediaAlpha);\n        p.strokeWeight(2);\n        p.rect(closeX, closeY, closeSize, closeSize);\n\n        // X symbol\n        p.stroke(255, expandedMediaAlpha);\n        p.strokeWeight(3);\n        const padding = 12;\n        p.line(closeX + padding, closeY + padding,\n            closeX + closeSize - padding, closeY + closeSize - padding);\n        p.line(closeX + closeSize - padding, closeY + padding,\n            closeX + padding, closeY + closeSize - padding);\n\n        // No custom controls needed - native video handles everything\n\n        function zcn(x = 0, y = 0, z = 0) {\n            return 2 * (p.noise(x, y, z) - 0.5);\n        }\n    };\n}\n\nexport const installationsSketch = (node, options = {}) => {\n    return new p5((p) => sketch(p, options), node);\n};\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$800sp","$baa6D","$7c52c1757ddfa23f$export$d038dabfbf61338f","p","options","smoothX","smoothY","short","animation_manager","font_sizes","ui","ui_opacity","intro_texts","animation_states","mobile","skipAnimations","setUIOpacity","v","layoutUI","length","gridCenterX","width","gridCenterY","height","gridSpacing","gridPositions","x","y","i","pos","textWriter","startX","startY","endX","endY","controlX","controlY","t","oneMinusT","setup","noCanvas","s","getViewportSize","createCanvas","widthCheck","background","noFill","stroke","strokeWeight","strokeCap","PROJECT","loadGoogleFontSet","textAlign","CENTER","min","s_font","Math","max","push","UICornerBoxButton","UIArcButton","UITriangleButton","PI","UIHexButton","textFont","fontVariationSettings","getFontSizes","padding","TextWriter","large","small","medium","renderSequentialRandom","bind","renderTransition","AnimationManager","window","addEventListener","event","millis","draw","smoothFollow","mouseX","deltaTime","mouseY","clear","forEach","ui_element","l","dist","cs","easeInCubic","map","contains","render","noStroke","d","fill","LEFT","TOP","execute","updateCursor","mousePressed","button","index","appRouter","setTimeout","navigate","console","log","windowResized","resizeCanvas","size","$82b1d05426f642e7$export$d038dabfbf61338f","fbo","pixelDensity","WEBGL","textureFiltering","NEAREST","noSmooth","ellipseMode","createFramebuffer","loading_div","bg","document","getElementById","shadowRoot","remove","begin","abs","sin","frameCount","rotateX","rotateY","circle","end","image","$a850a1f0a1459307$export$d038dabfbf61338f","cx","cy","r","setTextOffset","cos","radialToCartesian","a","zcn","z","noise","renderTriangle","renderDecor","m","createVector","c","new_v","p5","Vector","sub","h","heading","new_cx","mag","new_cy","a_mod","a0","a1","a2","c00","c01","c10","c11","c20","c21","line","ad","TWO_PI","lm","rmi","rmo","$JTwtx","$10c5b62b251f1acf$export$d038dabfbf61338f","smoothV","planetButtons","activeInfoCard","infoCardAlpha","infoCardAnimationStart","infoCardAnimating","targetAlpha","galleryScrollX","targetGalleryScrollX","galleryDragging","galleryDragStartX","galleryStartScrollX","loadedMedia","Map","expandedMediaIndex","expandedMediaAlpha","expandedMediaAnimating","expandedMediaAnimationStart","targetExpandedAlpha","nativeVideoElement","pendingProjectSlug","layoutInitialized","hashChangeHandler","getCardDimensions","isMobile","cardSize","cardX","cardY","getGalleryLayout","baseTextScale","lineHeight","galleryY","galleryHeight","renderPlayIcon","alpha","triangleSize","triangleCenterX","triangleCenterY","triangle","initializeLayout","setupSolarSystem","starRadius","planetCount","projects","orbitRadius","angle","random","speed","color","textSize","textOffsetY","UIPlanetButton","name","openInfoCard","loadMediaForProject","body","style","overscrollBehavior","touchAction","project","slug","Promise","resolve","then","updateBreadcrumb","closeInfoCard","closeExpandedMedia","location","hash","includes","history","pushState","sessionStorage","removeItem","getCloseButtonHoverCheck","closeButtonSize","closeButtonX","closeButtonY","renderArrowButton","direction","rect","arrowCenterX","arrowCenterY","arrowWidth","arrowHeight","navigateToProject","newIndex","fromHashChange","newProject","newPath","replaceState","setItem","images","mediaItem","pathString","getMediaPath","has","isVideo","isVideoFile","thumbnails","thumbnailPath","loadImage","img","set","element","type","videoSrc","loaded","error","loadVideoElement","video","createVideo","hide","volume","elt","setAttribute","noLoop","pause","currentTime","loop","currentData","get","cleanupSketch","mediaData","path","removeEventListener","getItem","newHash","substr","cleanPath","startsWith","renderStar","radius","ringRadius","rotationAngle","trianglePos","triangleX","triangleY","translate","rotate","HALF_PI","pop","planetButton","idx","updatePosition","projectIndex","getProjectIndexBySlug","elapsed","progress","constrain","lerp","hoverTargets","arrowSize","arrowPadding","arrowY","arrowStartX","leftArrowX","rightArrowX","renderInfoCard","textY","text","year","renderGallery","scale","drawingContext","save","beginPath","clip","itemHeight","itemWidth","totalWidth","maxScroll","itemX","tint","sourceX","sourceY","sourceWidth","sourceHeight","calculateCropDimensions","playSize","playX","playY","readyState","videoWidth","videoHeight","warn","indicatorAlpha","restore","description","descriptionHeight","renderNavigationArrows","arrowAlpha","counterY","renderExpandedMedia","mediaWidth","mediaHeight","default","src","href","toString","String","toLowerCase","match","renderExpandedNativeVideo","videoPath","createElement","controls","preload","muted","position","zIndex","backgroundColor","borderRadius","appendChild","maxWidth","maxHeight","aspectRatio","videoX","videoY","left","top","opacity","closeX","closeY","mediaX","mediaY","mouseDragged","dragDistance","mouseReleased","galleryPadding","getGalleryItemDimensions","itemSpacing","mouseWheel","scrollAmount","delta","galleryWidth","$1e164a6ac005f7d0$export$b95f0ca738335a5f","LitElement","styles","css","properties","sketch","Boolean","Object","p5Instance","containerDiv","isInitialized","connectedCallback","updateComplete","initializeSketch","disconnectedCallback","updated","changedProperties","innerHTML","querySelector","node","html","customElements","define"],"version":3,"file":"blap64.20e196ea.js.map"}