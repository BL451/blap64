{"mappings":"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","sources":["<anon>","src/views/elements/p5-element.js","src/views/Home/sketch.js","src/views/Oops/sketch.js","src/views/CodeArt/sketch.js","src/views/Installations/sketch.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire905d\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire905d\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $800sp = parcelRequire(\"800sp\");\n\nvar $baa6D = parcelRequire(\"baa6D\");\nconst $7c52c1757ddfa23f$export$d038dabfbf61338f = function(p, options = {}) {\n    let ui = [];\n    let ui_opacity = 0;\n    let smoothX, smoothY;\n    let short;\n    let intro_texts = [];\n    let animation_states = [];\n    let animation_manager;\n    let font_sizes;\n    let mobile = false;\n    let skipAnimations = options.skipAnimations || false;\n    p.setup = async function() {\n        p.noCanvas();\n        const s = (0, $baa6D.getViewportSize)();\n        p.createCanvas(s.width, s.height);\n        mobile = (0, $baa6D.widthCheck)(p.width);\n        p.background(23);\n        p.noFill();\n        p.stroke(230);\n        p.strokeWeight(4);\n        p.strokeCap(p.PROJECT);\n        await (0, $baa6D.loadGoogleFontSet)('../../assets/fonts/BPdotsSquareVF.ttf');\n        p.textAlign(p.CENTER, p.CENTER);\n        short = p.min(p.width, p.height);\n        const s_font = mobile ? 14 : Math.max(0.022 * p.width, 32);\n        ui.push(new (0, $baa6D.UICornerBoxButton)(p, 0.25 * p.width, 0.7 * p.height, 0.26 * short, 0.26 * short, 0.01 * p.width, 0.01 * p.width, \"INTERACTIVE\\nMEDIA\", s_font));\n        ui.push(new (0, $baa6D.UIArcButton)(p, 0.5 * p.width, 0.7 * p.height, 0.3 * short, 0.3 * short, 0.01 * p.width, 0.01 * p.width, \"PHOTO\", s_font));\n        ui.push(new (0, $baa6D.UITriangleButton)(p, 0.75 * p.width, 0.35 * p.height, 0.2 * short, 0.2 * short, 0.01 * p.width, 0.01 * p.width, -0.5 * p.PI, \"ABOUT\", s_font));\n        ui.push(new (0, $baa6D.UIHexButton)(p, 0.75 * p.width, 0.7 * p.height, 0.3 * short, 0.3 * short, 0.01 * p.width, 0.01 * p.width, \"COLLECT\", s_font));\n        // Apply quadratic curve layout to UI elements\n        layoutUI();\n        smoothX = p.width / 2;\n        smoothY = p.height / 2;\n        p.textFont('BPdotsSquareVF', {\n            fontVariationSettings: `wght 900`\n        });\n        font_sizes = (0, $baa6D.getFontSizes)(p.width, p.height);\n        let padding = [\n            0.04,\n            0.15\n        ];\n        if (mobile) padding = [\n            0.025,\n            0.05\n        ];\n        intro_texts.push(new (0, $baa6D.TextWriter)(p, padding[0] * p.width, padding[0] * p.width, p.width, p.height / 2, \"HELLO, FRIEND.\", font_sizes.large));\n        intro_texts.push(new (0, $baa6D.TextWriter)(p, padding[1] * p.width, 0.18 * p.height, p.width / 2, p.height / 2, \"I play many roles:\", font_sizes.small));\n        intro_texts.push(new (0, $baa6D.TextWriter)(p, padding[1] * p.width, 0.22 * p.height, p.width, p.height / 2, \"CREATIVE TECHNOLOGIST\\nEDUCATOR\\nARTIST\", font_sizes.medium));\n        animation_states = [\n            {\n                \"start_time\": 500,\n                \"duration\": 1000,\n                \"idx\": 0,\n                \"fn\": intro_texts[0].renderSequentialRandom.bind(intro_texts[0]),\n                \"args\": [],\n                \"persist\": true\n            },\n            {\n                \"start_time\": 3000,\n                \"duration\": 1000,\n                \"idx\": 0,\n                \"fn\": intro_texts[0].renderTransition.bind(intro_texts[0]),\n                \"args\": [\n                    \"HELLO, FRIEND.\",\n                    \"My name is Benjamin Lappalainen\"\n                ],\n                \"persist\": true\n            },\n            {\n                \"start_time\": 4000,\n                \"duration\": 500,\n                \"idx\": 1,\n                \"fn\": intro_texts[1].renderSequentialRandom.bind(intro_texts[1]),\n                \"args\": [],\n                \"persist\": true\n            },\n            {\n                \"start_time\": 4750,\n                \"duration\": 2000,\n                \"idx\": 2,\n                \"fn\": intro_texts[2].renderSequentialRandom.bind(intro_texts[2]),\n                \"args\": [],\n                \"persist\": true\n            },\n            {\n                \"start_time\": 7250,\n                \"duration\": 1000,\n                \"idx\": 2,\n                \"fn\": intro_texts[2].renderTransition.bind(intro_texts[2]),\n                \"args\": [\n                    \"CREATIVE TECHNOLOGIST\\nEDUCATOR\\nARTIST\",\n                    \"CREATIVE TECHNOLOGIST\\nEDUCATOR\\nARTIST\\nand more...\"\n                ],\n                \"persist\": true\n            },\n            {\n                \"start_time\": 5000,\n                \"duration\": 1000,\n                \"idx\": 0,\n                \"fn\": intro_texts[0].renderTransition.bind(intro_texts[0]),\n                \"args\": [\n                    \"My name is Benjamin Lappalainen\",\n                    \"Benjamin Lappalainen\"\n                ],\n                \"persist\": true\n            },\n            {\n                \"start_time\": 7000,\n                \"duration\": 250,\n                \"idx\": 0,\n                \"fn\": intro_texts[0].renderTransition.bind(intro_texts[0]),\n                \"args\": [\n                    \"Benjamin Lappalainen\",\n                    \"BLAP\"\n                ],\n                \"persist\": true\n            },\n            {\n                \"start_time\": 7500,\n                \"duration\": 250,\n                \"idx\": 0,\n                \"fn\": intro_texts[0].renderTransition.bind(intro_texts[0]),\n                \"args\": [\n                    \"BLAP\",\n                    \"BLAP64\"\n                ],\n                \"persist\": true\n            },\n            {\n                \"start_time\": 4000,\n                \"duration\": 1000,\n                \"idx\": 3,\n                \"fn\": setUIOpacity,\n                \"args\": [],\n                \"persist\": false\n            }\n        ];\n        animation_manager = new (0, $baa6D.AnimationManager)(animation_states);\n        // Skip animations if requested\n        if (skipAnimations) {\n            // Set final states immediately\n            intro_texts[0].t = \"BLAP64\";\n            intro_texts[1].t = \"I play many roles:\";\n            intro_texts[2].t = \"CREATIVE TECHNOLOGIST\\nEDUCATOR\\nARTIST\\nand more...\";\n            ui_opacity = 255;\n            animation_manager.t = 999999;\n        }\n        window.addEventListener(\"focus\", (event)=>{\n            if (p.millis() > 5000) setUIOpacity(1);\n        });\n    };\n    p.draw = function() {\n        // deltaTime allows us to be framerate agnostic for animation speed\n        if (!mobile) {\n            smoothX = (0, $baa6D.smoothFollow)(p.mouseX, smoothX, 0.003 * p.deltaTime);\n            smoothY = (0, $baa6D.smoothFollow)(p.mouseY, smoothY, 0.003 * p.deltaTime);\n        } else {\n            smoothX = p.width * (0.5 + 0.2 * p.cos(0.0007 * p.millis()));\n            smoothY = p.height * (0.75 + 0.2 * p.sin(0.0007 * p.millis()));\n        }\n        p.clear();\n        p.background(23);\n        p.textAlign(p.CENTER, p.CENTER);\n        ui.forEach((ui_element)=>{\n            const d = ui_element.dist(smoothX, smoothY);\n            ui_element.cs.x = (0, $baa6D.easeInCubic)(p.map(d, 0, 0.5 * p.width, 1, 0));\n            ui_element.cs.y = (0, $baa6D.easeInCubic)(p.map(d, 0, 0.5 * p.width, 1, 0));\n            p.strokeWeight(1 + 0.015 * short * (0, $baa6D.easeInCubic)(p.map(d, 0, 0.5 * p.width, 1, 0, true)));\n            p.noFill();\n            if (ui_element.contains(p.mouseX, p.mouseY)) p.stroke(230, 20, 20, ui_opacity);\n            else p.stroke(230, ui_opacity);\n            ui_element.render();\n            // Text rendering\n            p.noStroke();\n            p.textFont('BPdotsSquareVF', {\n                fontVariationSettings: `wght ${p.map(d / p.width, 1, 0, 100, 900, true)}`\n            });\n            if (ui_element.contains(p.mouseX, p.mouseY)) p.fill(230, 20, 20, ui_opacity);\n            else p.fill(230, ui_opacity);\n            ui_element.textWriter.renderSequentialRandom(p.map(d, 100, 0.5 * p.width, 1, 0, true));\n        });\n        p.noFill();\n        p.stroke(230);\n        p.strokeWeight(2);\n        p.noStroke();\n        p.fill(230);\n        p.textAlign(p.LEFT, p.TOP);\n        p.textFont('BPdotsSquareVF', {\n            fontVariationSettings: `wght 900`\n        });\n        animation_manager.execute(p);\n        // Update cursor based on hover state\n        (0, $baa6D.updateCursor)(p, p.mouseX, p.mouseY, ui);\n    };\n    p.mousePressed = function(event) {\n        if (event && event.button !== 0) return;\n        if (ui_opacity < 128) return;\n        const ANIMATION_DELAY = 500;\n        ui.forEach((ui_element, index)=>{\n            if (ui_element.contains(p.mouseX, p.mouseY)) {\n                // Navigate based on which UI element was clicked\n                if (window.appRouter) switch(index){\n                    case 0:\n                        setTimeout(()=>{\n                            window.appRouter.navigate('/interactive');\n                        }, ANIMATION_DELAY);\n                        break;\n                    case 1:\n                        // Add photo route when available\n                        console.log('Photo section coming soon!');\n                        break;\n                    case 2:\n                        setTimeout(()=>{\n                            window.appRouter.navigate('/about');\n                        }, ANIMATION_DELAY);\n                        break;\n                }\n                return;\n            }\n        });\n    };\n    // Enhanced windowResized function that automatically updates all UI elements\n    // Maintains proportional positioning and sizing based on new canvas dimensions\n    // Preserves animation states when not skipping animations\n    p.windowResized = function windowResized() {\n        const s = (0, $baa6D.getViewportSize)();\n        p.resizeCanvas(s.width, s.height);\n        short = p.min(s.width, s.height);\n        mobile = (0, $baa6D.widthCheck)(p.width);\n        // Update font sizes based on new dimensions\n        font_sizes = (0, $baa6D.getFontSizes)(p.width, p.height);\n        // Update padding based on new width\n        let padding = [\n            0.05,\n            0.15\n        ];\n        if (mobile) padding = [\n            0.025,\n            0.05\n        ];\n        // Clear and recreate UI elements with new proportional positions\n        // UI elements: corner box, arc, and triangle buttons at 25%, 50%, 75% width\n        ui.length = 0;\n        const s_font = Math.max(0.022 * p.width, 32);\n        ui.push(new (0, $baa6D.UICornerBoxButton)(p, 0.25 * p.width, 0.7 * p.height, 0.26 * short, 0.26 * short, 0.01 * p.width, 0.01 * p.width, \"INTERACTIVE\\nMEDIA\", s_font));\n        ui.push(new (0, $baa6D.UIArcButton)(p, 0.5 * p.width, 0.7 * p.height, 0.3 * short, 0.3 * short, 0.01 * p.width, 0.01 * p.width, \"PHOTO\", s_font));\n        ui.push(new (0, $baa6D.UITriangleButton)(p, 0.75 * p.width, 0.35 * p.height, 0.2 * short, 0.2 * short, 0.01 * p.width, 0.01 * p.width, -0.5 * p.PI, \"ABOUT\", s_font));\n        ui.push(new (0, $baa6D.UIHexButton)(p, 0.75 * p.width, 0.7 * p.height, 0.3 * short, 0.3 * short, 0.01 * p.width, 0.01 * p.width, \"COLLECT\", s_font));\n        // Apply quadratic curve layout to UI elements\n        layoutUI();\n        // Update intro text elements positions and sizes\n        if (skipAnimations) {\n            // Preserve final states when skipping animations\n            intro_texts.length = 0;\n            intro_texts.push(new (0, $baa6D.TextWriter)(p, padding[0] * p.width, padding[0] * p.width, 0.8 * p.width, p.height / 2, \"BLAP64\", font_sizes.large));\n            intro_texts.push(new (0, $baa6D.TextWriter)(p, padding[1] * p.width, 0.18 * p.height, p.width / 2, p.height / 2, \"I play many roles:\", font_sizes.small));\n            intro_texts.push(new (0, $baa6D.TextWriter)(p, padding[1] * p.width, 0.22 * p.height, p.width, p.height / 2, \"CREATIVE TECHNOLOGIST\\nEDUCATOR\\nARTIST\\nand more...\", font_sizes.medium));\n        } else {\n            // Update positions but preserve current animation states and text content\n            intro_texts[0].p.x = padding[0] * p.width;\n            intro_texts[0].p.y = padding[0] * p.width;\n            intro_texts[0].s.x = 0.8 * p.width;\n            intro_texts[0].s.y = p.height / 2;\n            intro_texts[0].size = font_sizes.large;\n            intro_texts[1].p.x = padding[1] * p.width;\n            intro_texts[1].p.y = 0.18 * p.height;\n            intro_texts[1].s.x = p.width / 2;\n            intro_texts[1].s.y = p.height / 2;\n            intro_texts[1].size = font_sizes.small;\n            intro_texts[2].p.x = padding[1] * p.width;\n            intro_texts[2].p.y = 0.22 * p.height;\n            intro_texts[2].s.x = p.width;\n            intro_texts[2].s.y = p.height / 2;\n            intro_texts[2].size = font_sizes.medium;\n        }\n    };\n    function setUIOpacity(v) {\n        ui_opacity = 255 * v;\n    }\n    // Layout UI elements along a quadratic curve going up towards the right\n    function layoutUI() {\n        if (ui.length === 0) return;\n        if (mobile) {\n            // Mobile layout: arrange in 2x2 grid in lower third of screen\n            const gridCenterX = 0.5 * p.width;\n            const gridCenterY = 0.7 * p.height; // Lower third of screen\n            const gridSpacing = 0.45 * p.width; // Spacing between grid positions\n            // Grid positions: 2x2 layout\n            const gridPositions = [\n                {\n                    x: gridCenterX - gridSpacing / 2,\n                    y: gridCenterY - gridSpacing / 2\n                },\n                {\n                    x: gridCenterX + gridSpacing / 2,\n                    y: gridCenterY - gridSpacing / 2\n                },\n                {\n                    x: gridCenterX - gridSpacing / 2,\n                    y: gridCenterY + gridSpacing / 2\n                },\n                {\n                    x: gridCenterX + gridSpacing / 2,\n                    y: gridCenterY + gridSpacing / 2\n                } // Bottom-right\n            ];\n            // Position UI elements in grid\n            for(let i = 0; i < ui.length; i++){\n                const pos = gridPositions[i % gridPositions.length]; // Handle more than 4 elements\n                // Update UI element position\n                ui[i].p.x = pos.x;\n                ui[i].p.y = pos.y;\n                // Update corresponding TextWriter position\n                ui[i].textWriter.p.x = pos.x;\n                ui[i].textWriter.p.y = pos.y;\n            }\n        } else {\n            // Desktop layout: quadratic curve\n            // Define curve parameters - curve goes from bottom-left to top-right\n            const startX = 0.15 * p.width; // Start X position (15% from left)\n            const startY = 0.75 * p.height; // Start Y position (75% from top, near bottom)\n            const endX = 0.85 * p.width; // End X position (85% from left)\n            const endY = 0.2 * p.height; // End Y position (20% from top, near top)\n            // Quadratic curve control point to create convex upward arc\n            const controlX = 0.6 * p.width; // Control point X\n            const controlY = 0.65 * p.height; // Control point Y (creates convex curve)\n            // Calculate positions for each UI element along the curve\n            for(let i = 0; i < ui.length; i++){\n                // Parameter t goes from 0 to 1 along the curve\n                const t = ui.length > 1 ? i / (ui.length - 1) : 0;\n                // Quadratic Bezier curve formula: P(t) = (1-t)²P₀ + 2(1-t)tP₁ + t²P₂\n                const oneMinusT = 1 - t;\n                const x = oneMinusT * oneMinusT * startX + 2 * oneMinusT * t * controlX + t * t * endX;\n                const y = oneMinusT * oneMinusT * startY + 2 * oneMinusT * t * controlY + t * t * endY;\n                // Update UI element position\n                ui[i].p.x = x;\n                ui[i].p.y = y;\n                // Update corresponding TextWriter position\n                ui[i].textWriter.p.x = x;\n                ui[i].textWriter.p.y = y;\n            }\n        }\n    }\n};\nconst $7c52c1757ddfa23f$export$6704eadea0be434f = (node, options = {})=>{\n    return new p5((p)=>$7c52c1757ddfa23f$export$d038dabfbf61338f(p, options), node);\n};\n\n\n\nvar $baa6D = parcelRequire(\"baa6D\");\nconst $82b1d05426f642e7$export$d038dabfbf61338f = function(p) {\n    let fbo = undefined;\n    let short = 128;\n    p.setup = function setup() {\n        p.noCanvas();\n        p.pixelDensity(1);\n        const s = (0, $baa6D.getViewportSize)();\n        p.createCanvas(s.width, s.height, p.WEBGL);\n        // Options for creating our framebuffer, width and height relative to the size of our canvas determine the pixelation appearance\n        const options = {\n            width: 128,\n            height: 128,\n            textureFiltering: p.NEAREST\n        };\n        // Disable p5's smoothing\n        p.noSmooth();\n        p.ellipseMode(p.CENTER);\n        short = p.min(s.width, s.height);\n        // Make the framebuffer\n        fbo = p.createFramebuffer(options);\n        // p5 in instance mode doesn't seem to work well with elements in a shadow root and doesn't remove the \"p5_loading\" div by itself\n        let bg = document.getElementById(\"bg\");\n        let loading_div = bg.shadowRoot.getElementById(\"p5_loading\");\n        if (loading_div) loading_div.remove();\n    };\n    p.draw = function draw() {\n        p.clear();\n        fbo.begin(); // Begin drawing stuff in the framebuffer\n        p.noFill();\n        p.stroke(200, 20, 20);\n        p.strokeWeight(p.abs(p.sin(p.frameCount / 42)));\n        p.clear();\n        p.rotateX(p.frameCount / 50);\n        p.rotateY(p.frameCount / 200);\n        p.circle(0, 0, 64);\n        p.rotateY(p.PI / 2);\n        p.circle(0, 0, 64);\n        fbo.end(); // Finish drawing stuff in the framebuffer\n        // Render an image of the framebuffer, centering and stretching it to the size of the canvas\n        p.image(fbo, -short / 2, -short / 2, short, short);\n    };\n    p.windowResized = function windowResized() {\n        const s = (0, $baa6D.getViewportSize)();\n        p.resizeCanvas(s.width, s.height);\n        short = p.min(s.width, s.height);\n    };\n};\nconst $82b1d05426f642e7$export$121e7a268b92cc36 = (node)=>{\n    return new p5($82b1d05426f642e7$export$d038dabfbf61338f, node);\n};\n\n\n\nvar $baa6D = parcelRequire(\"baa6D\");\nconst $a850a1f0a1459307$export$d038dabfbf61338f = function(p) {\n    let ui = [];\n    let short = 128;\n    let smoothX = 0;\n    let smoothY = 0;\n    let mobile = false;\n    let cx, cy, r;\n    p.setup = function setup() {\n        p.noCanvas();\n        p.pixelDensity(1);\n        const s = (0, $baa6D.getViewportSize)();\n        mobile = (0, $baa6D.widthCheck)(s.width);\n        p.createCanvas(s.width, s.height);\n        short = p.min(s.width, s.height);\n        cx = 0.5 * p.width;\n        cy = mobile ? 0.5 * p.height : 0.6 * p.height;\n        r = 0.2 * short;\n        layoutUI();\n        p.background(23);\n        p.textAlign(p.CENTER, p.CENTER);\n        p.strokeCap(p.PROJECT);\n        // p5 in instance mode doesn't seem to work well with elements in a shadow root and doesn't remove the \"p5_loading\" div by itself\n        let bg = document.getElementById(\"bg\");\n        let loading_div = bg.shadowRoot.getElementById(\"p5_loading\");\n        if (loading_div) loading_div.remove();\n    };\n    p.draw = function draw() {\n        p.background(23);\n        if (!mobile) {\n            smoothX = (0, $baa6D.smoothFollow)(p.mouseX, smoothX, 0.003 * p.deltaTime);\n            smoothY = (0, $baa6D.smoothFollow)(p.mouseY, smoothY, 0.003 * p.deltaTime);\n        } else {\n            smoothX = p.width * (0.5 + 0.2 * p.cos(-p.PI / 2 + 0.001 * p.millis()));\n            smoothY = p.height * (0.5 + 0.2 * p.sin(-p.PI / 2 + 0.001 * p.millis()));\n        }\n        p.noFill();\n        p.stroke(230);\n        p.strokeWeight(1);\n        ui.forEach((ui_element)=>{\n            const d = ui_element.dist(smoothX, smoothY);\n            ui_element.cs.x = (0, $baa6D.easeInCubic)(p.map(d, 0, 0.5 * p.width, 1, 0));\n            ui_element.cs.y = (0, $baa6D.easeInCubic)(p.map(d, 0, 0.5 * p.width, 1, 0));\n            //p.strokeWeight(1 + 0.015*short*easeInCubic(p.map(l, 0, 0.5*p.width, 1, 0, true)));\n            p.noFill();\n            if (ui_element.contains(p.mouseX, p.mouseY)) p.stroke(230, 20, 20);\n            else p.stroke(230);\n            ui_element.renderTriangle();\n            // Text rendering\n            p.noStroke();\n            p.textFont('BPdotsSquareVF', {\n                fontVariationSettings: `wght ${p.map(d / p.width, 1, 0, 100, 900, true)}`\n            });\n            if (ui_element.contains(p.mouseX, p.mouseY)) p.fill(230, 20, 20);\n            else p.fill(230);\n            ui_element.textWriter.renderSequentialRandom(p.map(d, 100, 0.5 * p.width, 1, 0, true));\n        });\n        renderDecor();\n        // Update cursor based on hover state\n        (0, $baa6D.updateCursor)(p, p.mouseX, p.mouseY, ui);\n    };\n    p.windowResized = function windowResized() {\n        const s = (0, $baa6D.getViewportSize)();\n        mobile = (0, $baa6D.widthCheck)(s.width);\n        p.resizeCanvas(s.width, s.height);\n        short = p.min(s.width, s.height);\n        cx = 0.5 * p.width;\n        cy = 0.6 * p.height;\n        r = 0.2 * short;\n        layoutUI();\n    };\n    p.mousePressed = function(event) {\n        if (event && event.button !== 0) return;\n        const ANIMATION_DELAY = 500;\n        ui.forEach((ui_element, index)=>{\n            if (ui_element.contains(p.mouseX, p.mouseY)) {\n                // Navigate based on which UI element was clicked\n                if (window.appRouter) switch(index){\n                    case 0:\n                        setTimeout(()=>{\n                            window.appRouter.navigate('/interactive/live');\n                        }, ANIMATION_DELAY);\n                        break;\n                    case 1:\n                        // Add photo route when available\n                        console.log('PHYSICAL ARTIFACTS COMING SOON');\n                        break;\n                    case 2:\n                        setTimeout(()=>{\n                            window.appRouter.navigate('/about');\n                        }, ANIMATION_DELAY);\n                        break;\n                }\n                return;\n            }\n        });\n    };\n    function layoutUI() {\n        ui.length = 0;\n        const s_font = mobile ? 18 : Math.max(0.022 * p.width, 32);\n        ui.push(new (0, $baa6D.UITriangleButton)(p, cx, cy - r, 0.1 * short, 0.1 * short, 0.01 * p.width, 0.01 * p.width, -0.5 * p.PI, \"LIVE\\nEXPERIENCES\", s_font));\n        ui[0].setTextOffset(0, -0.9 * r);\n        ui.push(new (0, $baa6D.UITriangleButton)(p, cx - r * p.cos(p.PI / 6), cy + r * p.sin(p.PI / 6), 0.1 * short, 0.1 * short, 0.01 * p.width, 0.01 * p.width, -0.5 * p.PI, \"PHYSICAL\\nARTIFACTS\", s_font));\n        ui[1].setTextOffset(-0.95 * r * p.cos(p.PI / 6), 1.15 * r * p.sin(p.PI / 6));\n        ui.push(new (0, $baa6D.UITriangleButton)(p, cx + r * p.cos(p.PI / 6), cy + r * p.sin(p.PI / 6), 0.1 * short, 0.1 * short, 0.01 * p.width, 0.01 * p.width, -0.5 * p.PI, \"WEB\\nEXPERIENCES\", s_font));\n        ui[2].setTextOffset(0.95 * r * p.cos(p.PI / 6), 1.15 * r * p.sin(p.PI / 6));\n    }\n    function renderDecor() {\n        const t = 0.0003 * p.millis();\n        p.noFill();\n        p.stroke(230);\n        p.strokeWeight(1);\n        let m = p.createVector(smoothX, smoothY);\n        let c = p.createVector(cx, cy);\n        let new_v = p5.Vector.sub(m, c);\n        const h = new_v.heading();\n        let new_cx = cx + 0.1 * p.min(new_v.mag(), 3 * r) * p.cos(h);\n        let new_cy = cy + 0.1 * p.min(new_v.mag(), 3 * r) * p.sin(h);\n        p.circle(new_cx, new_cy, 0.5 * r);\n        let a_mod = -h;\n        let a0 = a_mod + zcn(t);\n        let a1 = 2 * p.PI / 3 + a_mod + zcn(t);\n        let a2 = 4 * p.PI / 3 + a_mod + zcn(t);\n        let c00 = radialToCartesian(0.2 * r, a0);\n        let c01 = radialToCartesian(0.3 * r, a0);\n        let c10 = radialToCartesian(0.2 * r, a1);\n        let c11 = radialToCartesian(0.3 * r, a1);\n        let c20 = radialToCartesian(0.2 * r, a2);\n        let c21 = radialToCartesian(0.3 * r, a2);\n        p.line(new_cx + c00.x, new_cy + c00.y, new_cx + c01.x, new_cy + c01.y);\n        p.line(new_cx + c10.x, new_cy + c10.y, new_cx + c11.x, new_cy + c11.y);\n        p.line(new_cx + c20.x, new_cy + c20.y, new_cx + c21.x, new_cy + c21.y);\n        a_mod = p.abs(a_mod);\n        for(let i = 0; i < 3; i++){\n            let ad = p.PI * zcn(0.1 * a_mod + 0.0003 * p.millis());\n            a0 = i * p.TWO_PI / 3 + 0.6 * p.PI / 6 + a_mod + ad;\n            a1 = i * p.TWO_PI / 3 + 1.4 * p.PI / 6 + a_mod + ad;\n            c00 = radialToCartesian(0.5 * r, a0);\n            c01 = radialToCartesian(0.5 * r, a1);\n            p.line(new_cx + c00.x, new_cy + c00.y, new_cx + c01.x, new_cy + c01.y);\n            let lm = 0.02 * a_mod / p.PI + 0.02;\n            let rmi = (0.5 - lm) * r;\n            let rmo = (0.5 + lm) * r;\n            c00 = radialToCartesian(rmi, a0);\n            c01 = radialToCartesian(rmo, a0);\n            p.line(new_cx + c00.x, new_cy + c00.y, new_cx + c01.x, new_cy + c01.y);\n            c00 = radialToCartesian(rmi, a1);\n            c01 = radialToCartesian(rmo, a1);\n            p.line(new_cx + c00.x, new_cy + c00.y, new_cx + c01.x, new_cy + c01.y);\n        }\n    }\n    function radialToCartesian(r, a) {\n        return {\n            x: r * p.cos(a),\n            y: -r * p.sin(a)\n        };\n    }\n    function zcn(x = 0, y = 0, z = 0) {\n        return 2 * (p.noise(x, y, z) - 0.5);\n    }\n};\nconst $a850a1f0a1459307$export$6d40932eaa280b79 = (node)=>{\n    return new p5($a850a1f0a1459307$export$d038dabfbf61338f, node);\n};\n\n\n\nvar $baa6D = parcelRequire(\"baa6D\");\n\nvar $JTwtx = parcelRequire(\"JTwtx\");\n\n\n\n\nconst $10c5b62b251f1acf$export$d038dabfbf61338f = function(p, options = {}) {\n    let short = 128;\n    let smoothX = 0;\n    let smoothY = 0;\n    let smoothV = p.createVector(smoothX, smoothY);\n    let mobile = false;\n    let planetButtons = [];\n    let activeInfoCard = null;\n    let infoCardAlpha = 0;\n    let infoCardAnimationStart = 0;\n    let infoCardAnimating = false;\n    let targetAlpha = 0;\n    let galleryScrollX = 0;\n    let targetGalleryScrollX = 0;\n    let galleryDragging = false;\n    let galleryDragStartX = 0;\n    let galleryStartScrollX = 0;\n    let loadedMedia = new Map();\n    let expandedMediaIndex = null;\n    let expandedMediaAlpha = 0;\n    let expandedMediaAnimating = false;\n    let expandedMediaAnimationStart = 0;\n    let targetExpandedAlpha = 0;\n    let nativeVideoElement = null;\n    let pendingProjectSlug = null;\n    let layoutInitialized = false;\n    let frameCount = 0;\n    let currentPath = null;\n    // Interface data\n    let sols = 0;\n    // Mobile sequential preview variables\n    let currentPreviewIndex = 0;\n    let previewStartTime = 0;\n    let previewDuration = 2000; // 2 seconds per preview\n    // Text calculation cache for performance\n    let textCache = new Map();\n    // Media loading tracking to prevent duplicates\n    let mediaBeingLoaded = new Set();\n    // Resize throttling\n    let resizeTimeout = null;\n    let hashChangeHandler = null;\n    // Add cleanup method to be called when sketch is destroyed\n    p.cleanupSketch = function() {\n        // Clean up native video element\n        if (nativeVideoElement) {\n            nativeVideoElement.remove();\n            nativeVideoElement = null;\n        }\n        // Clean up any loaded video elements\n        loadedMedia.forEach((mediaData, path)=>{\n            if (mediaData.type === 'video' && mediaData.element && mediaData.element.remove) mediaData.element.remove();\n        });\n        loadedMedia.clear();\n        // Reset state\n        activeInfoCard = null;\n        expandedMediaIndex = null;\n        infoCardAlpha = 0;\n        expandedMediaAlpha = 0;\n        // Re-enable browser swipe navigation\n        document.body.style.overscrollBehavior = '';\n        document.body.style.touchAction = '';\n        // Remove hash change listener\n        if (hashChangeHandler) {\n            window.removeEventListener('hashchange', hashChangeHandler);\n            hashChangeHandler = null;\n        }\n    // Don't clear session storage here - let setup function handle it for back navigation detection\n    };\n    // Helper functions for layout calculations\n    function getCardDimensions() {\n        const isMobile = (0, $baa6D.widthCheck)(p.width);\n        const cardWidth = isMobile ? p.width * 0.95 : p.width * 0.82;\n        const cardHeight = isMobile ? p.height * 0.88 : p.height * 0.82; // Increased mobile height to 0.88 (was 0.75)\n        const cardX = (p.width - cardWidth) / 2;\n        // Move mobile card much higher up since breadcrumb is now hidden, keep desktop unchanged\n        const cardY = isMobile ? (p.height - cardHeight) / 2 - 40 : (p.height - cardHeight) / 2 - 20;\n        return {\n            width: cardWidth,\n            height: cardHeight,\n            x: cardX,\n            y: cardY,\n            isMobile: isMobile\n        };\n    }\n    function getGalleryLayout(cardWidth, cardHeight, cardX, cardY, isMobile) {\n        const padding = isMobile ? 20 : 24;\n        const lineHeight = isMobile ? 28 : 32;\n        const galleryY = cardY + padding + lineHeight * 5.3;\n        const galleryHeight = cardHeight * 0.35; // Slightly smaller to leave more room for text\n        return {\n            galleryY: galleryY,\n            galleryHeight: galleryHeight,\n            padding: padding,\n            lineHeight: lineHeight\n        };\n    }\n    function getGalleryItemDimensions(galleryHeight, isMobile) {\n        const galleryPadding = isMobile ? 8 : 10;\n        const itemHeight = galleryHeight - 2 * galleryPadding;\n        const itemWidth = itemHeight * 1.5; // 3:2 aspect ratio\n        return {\n            itemWidth: itemWidth,\n            itemHeight: itemHeight,\n            galleryPadding: galleryPadding\n        };\n    }\n    function renderCloseButton(x, y, size, alpha) {\n        const padding = size * 0.25;\n        // Close button background\n        p.fill(50, 50, 50, 200 * (alpha / 255));\n        p.stroke(200, alpha);\n        p.strokeWeight(1);\n        p.rect(x, y, size, size);\n        // X symbol\n        p.stroke(200, alpha);\n        p.strokeWeight(2);\n        p.line(x + padding, y + padding, x + size - padding, y + size - padding);\n        p.line(x + size - padding, y + padding, x + padding, y + size - padding);\n    }\n    function renderPlayIcon(x, y, size, alpha) {\n        // Semi-transparent play button background\n        p.fill(0, 0, 0, 120 * (alpha / 255));\n        p.noStroke();\n        p.circle(x + size / 2, y + size / 2, size);\n        // Play triangle\n        p.fill(255, 255, 255, 180 * (alpha / 255));\n        const triangleSize = size * 0.35;\n        const triangleCenterX = x + size / 2 + triangleSize * 0.1;\n        const triangleCenterY = y + size / 2;\n        p.triangle(triangleCenterX - triangleSize / 2, triangleCenterY - triangleSize / 2, triangleCenterX - triangleSize / 2, triangleCenterY + triangleSize / 2, triangleCenterX + triangleSize / 2, triangleCenterY);\n    }\n    function initializeLayout() {\n        const s = (0, $baa6D.getViewportSize)();\n        short = p.min(s.width, s.height);\n        mobile = (0, $baa6D.widthCheck)(s.width);\n        setupRadialLayout();\n        layoutInitialized = true;\n        // Reset mobile preview timing when layout changes\n        if (mobile) {\n            previewStartTime = 0;\n            currentPreviewIndex = 0;\n        }\n    }\n    p.setup = async function setup() {\n        p.noCanvas();\n        p.pixelDensity(1);\n        const s = (0, $baa6D.getViewportSize)();\n        p.createCanvas(s.width, s.height);\n        initializeLayout();\n        p.background(23);\n        p.textAlign(p.CENTER, p.CENTER);\n        p.strokeCap(p.PROJECT);\n        await (0, $baa6D.loadGoogleFontSet)('../../assets/fonts/BPdotsSquareVF.ttf');\n        await (0, $baa6D.loadGoogleFontSet)('../../assets/fonts/ZxGamut.ttf');\n        p.textFont('BPdotsSquareVF', {\n            fontVariationSettings: `wght 900`\n        });\n        // p5 in instance mode doesn't seem to work well with elements in a shadow root and doesn't remove the \"p5_loading\" div by itself\n        let bg = document.getElementById(\"bg\");\n        let loading_div = bg.shadowRoot.getElementById(\"p5_loading\");\n        if (loading_div) loading_div.remove();\n        // Handle direct project navigation via URL parameter\n        if (options && options.project) {\n            pendingProjectSlug = options.project;\n            currentPath = `/interactive/live/${options.project}`;\n            // Store that we have an active project\n            sessionStorage.setItem('installationsActiveProject', options.project);\n        } else {\n            currentPath = '/interactive/live';\n            // Check if we had an active project before and now we don't\n            const wasActiveProject = sessionStorage.getItem('installationsActiveProject');\n            if (wasActiveProject) {\n                // We navigated back from a project to main page - clear the storage\n                sessionStorage.removeItem('installationsActiveProject');\n                // Ensure no project opens automatically on back navigation\n                pendingProjectSlug = null;\n                // Initialize with info card closed\n                activeInfoCard = null;\n                infoCardAlpha = 0;\n                targetAlpha = 0;\n                infoCardAnimating = false;\n            }\n        }\n        // Add hash change listener to detect back navigation within the same route\n        hashChangeHandler = function(event) {\n            const newHash = window.location.hash.substr(1);\n            const cleanPath = newHash && newHash !== '' ? newHash.startsWith('/') ? newHash : '/' + newHash : '/';\n            // If we're on the installations page and URL changed to just /interactive/live\n            // and we have an active info card, close it\n            if (cleanPath === '/interactive/live' && activeInfoCard !== null) closeInfoCard();\n        };\n        // Calculate days since project start\n        sols = (0, $baa6D.daysSince)('2024-08-14');\n        window.addEventListener('hashchange', hashChangeHandler);\n    };\n    p.draw = function draw() {\n        p.background(23);\n        frameCount++;\n        // Handle smooth cursor movement - mobile vs desktop\n        if (mobile && planetButtons && planetButtons.length > 0) {\n            // Mobile: Sequential preview of each planet button\n            // Initialize preview start time on first frame\n            if (previewStartTime === 0) previewStartTime = p.millis();\n            // Calculate which planet should be previewed based on elapsed time\n            const elapsedTime = p.millis() - previewStartTime;\n            const cyclePosition = elapsedTime / previewDuration % planetButtons.length;\n            const targetIndex = Math.floor(cyclePosition);\n            if (targetIndex !== currentPreviewIndex && targetIndex < planetButtons.length) currentPreviewIndex = targetIndex;\n            // Smoothly move to the current preview planet position\n            const targetPlanet = planetButtons[currentPreviewIndex];\n            if (targetPlanet) {\n                smoothX = p.constrain((0, $baa6D.smoothFollow)(targetPlanet.p.x, smoothX, 0.005 * p.deltaTime), 0, p.width);\n                smoothY = p.constrain((0, $baa6D.smoothFollow)(targetPlanet.p.y, smoothY, 0.005 * p.deltaTime), 0, p.height);\n            }\n        } else {\n            // Desktop: Follow mouse cursor\n            smoothX = (0, $baa6D.smoothFollow)(p.mouseX, smoothX, 0.003 * p.deltaTime);\n            smoothY = (0, $baa6D.smoothFollow)(p.mouseY, smoothY, 0.003 * p.deltaTime);\n        }\n        smoothV.x = smoothX;\n        smoothV.y = smoothY;\n        p.noFill();\n        p.stroke(230);\n        p.strokeWeight(1);\n        renderRadialLayout();\n        renderHUDDecorations();\n        // Handle pending project opening after layout is initialized and a few frames have passed\n        if (pendingProjectSlug && layoutInitialized && planetButtons && planetButtons.length > 0 && frameCount > 5) {\n            const projectIndex = (0, $JTwtx.getProjectIndexBySlug)(pendingProjectSlug);\n            if (projectIndex !== -1 && projectIndex < planetButtons.length) {\n                openInfoCard(projectIndex);\n                pendingProjectSlug = null; // Clear the pending slug\n            } else // If project not found, clear the pending slug to avoid infinite attempts\n            pendingProjectSlug = null;\n        }\n        p.noFill();\n        p.stroke(230, 50);\n        const s = short * 0.03;\n        p.push();\n        p.translate(smoothX, smoothY);\n        p.rotate(p.TWO_PI * p.noise(smoothX / short, smoothY / short, 0.0001 * p.millis()));\n        p.circle(0, 0, 0.33 * s);\n        p.triangle(s, 0, s * p.cos(p.TWO_PI / 3), s * p.sin(p.TWO_PI / 3), s * p.cos(2 * p.TWO_PI / 3), s * p.sin(2 * p.TWO_PI / 3));\n        p.pop();\n        // Update info card animation\n        if (infoCardAnimating) {\n            const elapsed = p.millis() - infoCardAnimationStart;\n            const progress = p.constrain(elapsed / 250, 0, 1);\n            infoCardAlpha = p.lerp(infoCardAlpha, targetAlpha, progress);\n            if (progress >= 1) {\n                infoCardAnimating = false;\n                infoCardAlpha = targetAlpha;\n                if (targetAlpha === 0) activeInfoCard = null;\n            }\n        }\n        // Update gallery scrolling\n        if (!galleryDragging) galleryScrollX = p.lerp(galleryScrollX, targetGalleryScrollX, 0.1);\n        // Update expanded media animation\n        if (expandedMediaAnimating) {\n            const elapsed = p.millis() - expandedMediaAnimationStart;\n            const progress = p.constrain(elapsed / 300, 0, 1);\n            expandedMediaAlpha = p.lerp(expandedMediaAlpha, targetExpandedAlpha, progress);\n            if (progress >= 1) {\n                expandedMediaAnimating = false;\n                expandedMediaAlpha = targetExpandedAlpha;\n                if (targetExpandedAlpha === 0) expandedMediaIndex = null;\n            }\n        }\n        // Update cursor based on hover state\n        // Don't include planet buttons when info card is active\n        const hoverTargets = activeInfoCard !== null ? [\n            getCloseButtonHoverCheck(),\n            getNavigationButtonHoverCheck()\n        ] : [\n            ...planetButtons,\n            getTextAreasHoverCheck(),\n            getCloseButtonHoverCheck()\n        ];\n        (0, $baa6D.updateCursor)(p, p.mouseX, p.mouseY, ...hoverTargets);\n        // Render active info card\n        if (activeInfoCard !== null || infoCardAlpha > 0) renderInfoCard((0, $JTwtx.projects)[activeInfoCard]);\n        // Render expanded media overlay\n        if (expandedMediaIndex !== null || expandedMediaAlpha > 0) renderExpandedMedia();\n    };\n    p.windowResized = function windowResized() {\n        // Throttle resize events to prevent performance issues during orientation changes\n        if (resizeTimeout) clearTimeout(resizeTimeout);\n        resizeTimeout = setTimeout(()=>{\n            const s = (0, $baa6D.getViewportSize)();\n            p.resizeCanvas(s.width, s.height);\n            initializeLayout();\n            resizeTimeout = null;\n        }, 150); // Wait 150ms after resize stops\n    };\n    p.mousePressed = function(event) {\n        if (event && event.button !== 0) return;\n        const ANIMATION_DELAY = 500;\n        // Check if clicking on expanded media overlay\n        if (expandedMediaIndex !== null) {\n            const project = (0, $JTwtx.projects)[activeInfoCard];\n            const mediaItem = project.images[expandedMediaIndex];\n            let pathString;\n            if (typeof mediaItem === 'string') pathString = mediaItem;\n            else if (mediaItem && typeof mediaItem === 'object') pathString = mediaItem.default || mediaItem.src || mediaItem.href || mediaItem.toString();\n            else pathString = String(mediaItem);\n            const isVideo = pathString.toLowerCase().match(/\\.(mp4|mov|webm|avi)(\\?.*)?$/i);\n            const isMobile = (0, $baa6D.widthCheck)(p.width);\n            const maxWidth = isMobile ? p.width : p.width * 0.8;\n            const maxHeight = isMobile ? p.height * 0.8 : p.height * 0.8;\n            let mediaWidth, mediaHeight;\n            if (isVideo) {\n                // For native videos, use standard dimensions\n                const aspectRatio = nativeVideoElement && nativeVideoElement.videoWidth && nativeVideoElement.videoHeight ? nativeVideoElement.videoWidth / nativeVideoElement.videoHeight : 16 / 9;\n                if (aspectRatio > maxWidth / maxHeight) {\n                    mediaWidth = maxWidth;\n                    mediaHeight = maxWidth / aspectRatio;\n                } else {\n                    mediaHeight = maxHeight;\n                    mediaWidth = maxHeight * aspectRatio;\n                }\n            } else {\n                // For images, get from loaded media\n                const mediaData = loadedMedia.get(pathString);\n                if (mediaData && mediaData.loaded) {\n                    const img = mediaData.element;\n                    const aspectRatio = img.width / img.height;\n                    if (aspectRatio > maxWidth / maxHeight) {\n                        mediaWidth = maxWidth;\n                        mediaHeight = maxWidth / aspectRatio;\n                    } else {\n                        mediaHeight = maxHeight;\n                        mediaWidth = maxHeight * aspectRatio;\n                    }\n                } else return; // Image not ready\n            }\n            const mediaX = (p.width - mediaWidth) / 2;\n            const mediaY = (p.height - mediaHeight) / 2;\n            // Check close button (now centered below media)\n            const closeSize = isMobile ? 50 : 40;\n            const closePadding = isMobile ? 20 : 15;\n            const closeX = (p.width - closeSize) / 2; // Center horizontally\n            const closeY = mediaY + mediaHeight + closePadding;\n            if (p.mouseX >= closeX && p.mouseX <= closeX + closeSize && p.mouseY >= closeY && p.mouseY <= closeY + closeSize) {\n                closeExpandedMedia();\n                return;\n            }\n            // Native video players handle their own controls\n            // Click outside media and close button area closes it\n            const totalHeight = mediaHeight + closePadding + closeSize;\n            if (p.mouseX < mediaX || p.mouseX > mediaX + mediaWidth || p.mouseY < mediaY || p.mouseY > mediaY + totalHeight) {\n                closeExpandedMedia();\n                return;\n            }\n            return;\n        }\n        // Check if clicking on info card or close button\n        if (activeInfoCard !== null) {\n            const { width: cardWidth, height: cardHeight, x: cardX, y: cardY, isMobile: isMobile } = getCardDimensions();\n            const closeButtonSize = isMobile ? 44 : 30;\n            const closeButtonX = cardX + cardWidth - closeButtonSize - 10;\n            const closeButtonY = cardY + 10;\n            // Check if clicking close button\n            if (p.mouseX >= closeButtonX && p.mouseX <= closeButtonX + closeButtonSize && p.mouseY >= closeButtonY && p.mouseY <= closeButtonY + closeButtonSize) {\n                closeInfoCard();\n                return;\n            }\n            // Check if clicking navigation arrows\n            if ((0, $JTwtx.projects).length > 1) {\n                const arrowSize = isMobile ? 50 : 40;\n                const arrowPadding = isMobile ? 20 : 15;\n                const arrowY = cardY + cardHeight + arrowPadding;\n                // Use new arrow positioning logic (same as in renderNavigationArrows)\n                const counterWidth = 80;\n                const totalWidth = arrowSize * 2 + counterWidth + arrowPadding * 2;\n                const startX = cardX + (cardWidth - totalWidth) / 2;\n                const leftArrowX = startX;\n                const rightArrowX = startX + arrowSize + counterWidth + arrowPadding * 2;\n                // Check left arrow (previous with wraparound)\n                if (p.mouseX >= leftArrowX && p.mouseX <= leftArrowX + arrowSize && p.mouseY >= arrowY && p.mouseY <= arrowY + arrowSize) {\n                    const prevIndex = activeInfoCard === 0 ? (0, $JTwtx.projects).length - 1 : activeInfoCard - 1;\n                    navigateToProject(prevIndex);\n                    return;\n                }\n                // Check right arrow (next with wraparound)\n                if (p.mouseX >= rightArrowX && p.mouseX <= rightArrowX + arrowSize && p.mouseY >= arrowY && p.mouseY <= arrowY + arrowSize) {\n                    const nextIndex = activeInfoCard === (0, $JTwtx.projects).length - 1 ? 0 : activeInfoCard + 1;\n                    navigateToProject(nextIndex);\n                    return;\n                }\n            }\n            // Check if clicking in gallery area\n            const project = (0, $JTwtx.projects)[activeInfoCard];\n            if (project.images && project.images.length > 0) {\n                const padding = isMobile ? 20 : 24;\n                const lineHeight = isMobile ? 28 : 32;\n                const galleryY = cardY + padding + lineHeight * 5.3; // Approximate gallery Y position\n                const galleryHeight = cardHeight * 0.35;\n                if (p.mouseX >= cardX + padding && p.mouseX <= cardX + cardWidth - padding && p.mouseY >= galleryY && p.mouseY <= galleryY + galleryHeight) {\n                    // Start gallery dragging\n                    galleryDragging = true;\n                    galleryDragStartX = p.mouseX;\n                    galleryStartScrollX = galleryScrollX;\n                    return;\n                }\n            }\n            // Check if clicking outside the card\n            if (p.mouseX < cardX || p.mouseX > cardX + cardWidth || p.mouseY < cardY || p.mouseY > cardY + cardHeight) {\n                closeInfoCard();\n                return;\n            }\n            // If clicking inside the card (but not close button), do nothing\n            return;\n        }\n        // Check planet buttons and their text areas\n        planetButtons.forEach((planetButton, index)=>{\n            const project = (0, $JTwtx.projects)[index];\n            const planetClicked = planetButton.contains(p.mouseX, p.mouseY);\n            const textClicked = isHoveringText(planetButton, p.mouseX, p.mouseY, project.name);\n            if (planetClicked || textClicked) {\n                openInfoCard(index);\n                // Update URL to include project slug\n                if (project && project.slug && window.appRouter) {\n                    const newPath = `/interactive/live/${project.slug}`;\n                    // Only update if the current path is different\n                    if (window.location.hash !== `#${newPath}`) {\n                        window.history.pushState(null, '', `#${newPath}`);\n                        currentPath = newPath;\n                    }\n                }\n                return;\n            }\n        });\n    };\n    p.mouseDragged = function() {\n        if (galleryDragging && activeInfoCard !== null) {\n            const dragDistance = p.mouseX - galleryDragStartX;\n            galleryScrollX = galleryStartScrollX + dragDistance;\n            targetGalleryScrollX = galleryScrollX;\n        }\n    };\n    p.mouseReleased = function() {\n        if (galleryDragging) {\n            const dragDistance = Math.abs(p.mouseX - galleryDragStartX);\n            galleryDragging = false;\n            // If minimal drag (< 5 pixels), treat as a click for media expansion\n            if (dragDistance < 5 && activeInfoCard !== null) {\n                const project = (0, $JTwtx.projects)[activeInfoCard];\n                if (project && project.images && project.images.length > 0) {\n                    const { width: cardWidth, height: cardHeight, x: cardX, y: cardY, isMobile: isMobile } = getCardDimensions();\n                    const { galleryY: galleryY, padding: padding, lineHeight: lineHeight } = getGalleryLayout(cardWidth, cardHeight, cardX, cardY, isMobile);\n                    // Use EXACT same galleryHeight calculation as main rendering\n                    const galleryHeight = isMobile ? cardHeight * 0.3 : cardHeight * 0.4;\n                    // Use EXACT same calculations as renderGallery for consistent click detection\n                    const galleryAreaPadding = isMobile ? 8 : 10; // This is the 'padding' variable in rendering\n                    const itemHeight = galleryHeight - 2 * galleryAreaPadding;\n                    const itemWidth = itemHeight * 1.5; // 3:2 aspect ratio\n                    // Gallery area coordinates (same as rendering: x=cardX+padding, y=galleryY)\n                    const galleryX = cardX + padding; // Card padding\n                    const galleryY_coords = galleryY;\n                    // Start coordinates within gallery area (same as rendering: startX = x + padding)\n                    const startX = galleryX + galleryAreaPadding; // Gallery area left padding\n                    const startY = galleryY_coords + galleryAreaPadding; // Gallery area top padding\n                    // Check if clicking on a specific media item\n                    for(let i = 0; i < project.images.length; i++){\n                        const itemX = startX + i * (itemWidth + galleryAreaPadding) + galleryScrollX;\n                        if (p.mouseX >= itemX && p.mouseX <= itemX + itemWidth && p.mouseY >= startY && p.mouseY <= startY + itemHeight) {\n                            openExpandedMedia(i);\n                            return;\n                        }\n                    }\n                }\n            }\n            // Apply momentum/easing to final scroll position\n            const project = (0, $JTwtx.projects)[activeInfoCard];\n            if (project && project.images && project.images.length > 0) {\n                const { width: cardWidth, height: cardHeight } = getCardDimensions();\n                const isMobile = (0, $baa6D.widthCheck)(p.width);\n                const padding = isMobile ? 20 : 24;\n                const galleryWidth = cardWidth - 2 * padding;\n                // Use EXACT same galleryHeight as main rendering\n                const galleryHeight = isMobile ? cardHeight * 0.3 : cardHeight * 0.4;\n                // Use same calculations as rendering and click detection\n                const galleryAreaPadding = isMobile ? 8 : 10;\n                const itemHeight = galleryHeight - 2 * galleryAreaPadding;\n                const itemWidth = itemHeight * 1.5; // 3:2 aspect ratio\n                const totalWidth = project.images.length * (itemWidth + galleryAreaPadding) - galleryAreaPadding;\n                const maxScroll = p.max(0, totalWidth);\n                targetGalleryScrollX = p.constrain(targetGalleryScrollX, -maxScroll, 0);\n            }\n        }\n    };\n    p.mouseWheel = function(event) {\n        if (activeInfoCard !== null) {\n            const project = (0, $JTwtx.projects)[activeInfoCard];\n            if (project && project.images && project.images.length > 0) {\n                // Check if mouse is over gallery area\n                const { width: cardWidth, height: cardHeight, x: cardX, y: cardY, isMobile: isMobile } = getCardDimensions();\n                const { galleryY: galleryY, padding: padding, lineHeight: lineHeight } = getGalleryLayout(cardWidth, cardHeight, cardX, cardY, isMobile);\n                // Use EXACT same galleryHeight as main rendering\n                const galleryHeight = isMobile ? cardHeight * 0.3 : cardHeight * 0.4;\n                if (p.mouseX >= cardX + padding && p.mouseX <= cardX + cardWidth - padding && p.mouseY >= galleryY && p.mouseY <= galleryY + galleryHeight) {\n                    const scrollAmount = event.delta * 2;\n                    targetGalleryScrollX -= scrollAmount;\n                    // Constrain scroll bounds using same calculations as rendering\n                    const galleryAreaPadding = isMobile ? 8 : 10;\n                    const itemHeight = galleryHeight - 2 * galleryAreaPadding;\n                    const itemWidth = itemHeight * 1.5; // 3:2 aspect ratio\n                    const totalWidth = project.images.length * (itemWidth + galleryAreaPadding) - galleryAreaPadding;\n                    const maxScroll = p.max(0, totalWidth);\n                    targetGalleryScrollX = p.constrain(targetGalleryScrollX, -maxScroll, 0);\n                    return false; // Prevent page scroll\n                }\n            }\n        }\n    };\n    function openInfoCard(index) {\n        activeInfoCard = index;\n        targetAlpha = 255;\n        infoCardAnimationStart = p.millis();\n        infoCardAnimating = true;\n        galleryScrollX = 0;\n        targetGalleryScrollX = 0;\n        galleryDragging = false;\n        loadMediaForProject((0, $JTwtx.projects)[index]);\n        // Disable browser swipe navigation while info card is open\n        document.body.style.overscrollBehavior = 'none';\n        document.body.style.touchAction = 'none';\n        // Lock orientation on mobile to prevent performance issues\n        if (screen.orientation && screen.orientation.lock) try {\n            screen.orientation.lock('portrait-primary').catch(()=>{\n            // Silently fail if orientation lock isn't supported\n            });\n        } catch (e) {\n        // Silently fail if orientation lock isn't supported\n        }\n        // Hide breadcrumb navigation on mobile when infoCard opens\n        if ((0, $baa6D.widthCheck)(p.width)) {\n            const breadcrumbContainer = document.getElementById(\"breadcrumb-container\");\n            if (breadcrumbContainer) breadcrumbContainer.style.display = 'none';\n        }\n        // Update breadcrumb to show current project\n        const project = (0, $JTwtx.projects)[index];\n        if (project && project.slug) Promise.resolve((parcelRequire(\"drhU0\"))).then(({ updateBreadcrumb: updateBreadcrumb })=>{\n            updateBreadcrumb(`/interactive/live/${project.slug}`);\n        });\n    }\n    function navigateToProject(newIndex) {\n        activeInfoCard = newIndex;\n        galleryScrollX = 0;\n        targetGalleryScrollX = 0;\n        galleryDragging = false;\n        loadMediaForProject((0, $JTwtx.projects)[newIndex]);\n        // Update URL and breadcrumb\n        const project = (0, $JTwtx.projects)[newIndex];\n        if (project && project.slug) {\n            const newPath = `/interactive/live/${project.slug}`;\n            if (window.location.hash !== `#${newPath}`) {\n                window.history.pushState(null, '', `#${newPath}`);\n                currentPath = newPath;\n                // Update breadcrumb\n                Promise.resolve((parcelRequire(\"drhU0\"))).then(({ updateBreadcrumb: updateBreadcrumb })=>{\n                    updateBreadcrumb(newPath);\n                });\n            }\n        }\n    }\n    function closeInfoCard() {\n        targetAlpha = 0;\n        infoCardAnimationStart = p.millis();\n        infoCardAnimating = true;\n        galleryScrollX = 0;\n        targetGalleryScrollX = 0;\n        galleryDragging = false;\n        // Clean up any expanded media\n        if (expandedMediaIndex !== null) closeExpandedMedia();\n        // Re-enable browser swipe navigation when info card is closed\n        document.body.style.overscrollBehavior = '';\n        document.body.style.touchAction = '';\n        // Unlock orientation when closing info card\n        if (screen.orientation && screen.orientation.unlock) try {\n            screen.orientation.unlock();\n        } catch (e) {\n        // Silently fail if orientation unlock isn't supported\n        }\n        // Show breadcrumb navigation on mobile when infoCard closes\n        if ((0, $baa6D.widthCheck)(p.width)) {\n            const breadcrumbContainer = document.getElementById(\"breadcrumb-container\");\n            if (breadcrumbContainer) breadcrumbContainer.style.display = 'block';\n        }\n        // Update URL back to main installations page\n        if (window.location.hash.includes('/interactive/live/') && window.location.hash !== '#/interactive/live') {\n            window.history.pushState(null, '', '#/interactive/live');\n            currentPath = '/interactive/live';\n        }\n        // Update breadcrumb back to installations page\n        Promise.resolve((parcelRequire(\"drhU0\"))).then(({ updateBreadcrumb: updateBreadcrumb })=>{\n            updateBreadcrumb('/interactive/live');\n        });\n        // Clear session storage\n        sessionStorage.removeItem('installationsActiveProject');\n    }\n    function getCloseButtonHoverCheck() {\n        return (mouseX, mouseY)=>{\n            // Check expanded media close button first (higher priority)\n            if (expandedMediaIndex !== null) {\n                const isMobileCheck = (0, $baa6D.widthCheck)(p.width);\n                const closeSize = isMobileCheck ? 50 : 40;\n                const closePadding = isMobileCheck ? 20 : 15;\n                const closeX = (p.width - closeSize) / 2;\n                // Calculate media position to get close button Y position\n                const project = (0, $JTwtx.projects)[activeInfoCard];\n                if (project && project.images && expandedMediaIndex < project.images.length) {\n                    const mediaItem = project.images[expandedMediaIndex];\n                    let pathString = typeof mediaItem === 'string' ? mediaItem : mediaItem && typeof mediaItem === 'object' ? mediaItem.default || mediaItem.src || mediaItem.href || mediaItem.toString() : String(mediaItem);\n                    const isVideo = pathString.toLowerCase().match(/\\.(mp4|mov|webm|avi)(\\?.*)?$/i);\n                    const maxWidth = isMobileCheck ? p.width : p.width * 0.8;\n                    const maxHeight = isMobileCheck ? p.height * 0.8 : p.height * 0.8;\n                    let mediaHeight;\n                    if (isVideo) {\n                        const aspectRatio = nativeVideoElement && nativeVideoElement.videoWidth && nativeVideoElement.videoHeight ? nativeVideoElement.videoWidth / nativeVideoElement.videoHeight : 16 / 9;\n                        if (aspectRatio > maxWidth / maxHeight) mediaHeight = maxWidth / aspectRatio;\n                        else mediaHeight = maxHeight;\n                    } else {\n                        const mediaData = loadedMedia.get(pathString);\n                        if (mediaData && mediaData.loaded && mediaData.element) {\n                            const aspectRatio = mediaData.element.width / mediaData.element.height;\n                            if (aspectRatio > maxWidth / maxHeight) mediaHeight = maxWidth / aspectRatio;\n                            else mediaHeight = maxHeight;\n                        } else mediaHeight = maxHeight; // fallback\n                    }\n                    const mediaY = (p.height - mediaHeight) / 2;\n                    const closeY = mediaY + mediaHeight + closePadding;\n                    return mouseX >= closeX && mouseX <= closeX + closeSize && mouseY >= closeY && mouseY <= closeY + closeSize;\n                }\n            }\n            // Check info card close button\n            if (activeInfoCard !== null) {\n                const { width: cardWidth, height: cardHeight, x: cardX, y: cardY, isMobile: isMobile } = getCardDimensions();\n                const closeButtonSize = isMobile ? 44 : 30;\n                const closeButtonX = cardX + cardWidth - closeButtonSize - 10;\n                const closeButtonY = cardY + 10;\n                return mouseX >= closeButtonX && mouseX <= closeButtonX + closeButtonSize && mouseY >= closeButtonY && mouseY <= closeButtonY + closeButtonSize;\n            }\n            return false;\n        };\n    }\n    function preCalculateTextData() {\n        textCache.clear();\n        const textOffsetX = mobile ? 25 : 40;\n        const textSize = mobile ? 14 : 18;\n        // Set text size for accurate width calculations\n        p.textSize(textSize);\n        (0, $JTwtx.projects).forEach((project, index)=>{\n            // Calculate text wrapping\n            const maxChars = 16;\n            const words = project.name.split(' ');\n            let lines = [];\n            let currentLine = '';\n            for (const word of words)if ((currentLine + word).length > maxChars && currentLine.length > 0) {\n                lines.push(currentLine.trim());\n                currentLine = word + ' ';\n            } else currentLine += word + ' ';\n            if (currentLine.length > 0) lines.push(currentLine.trim());\n            // Calculate dimensions\n            const lineHeight = textSize * 1.2;\n            const totalHeight = lines.length * lineHeight;\n            // Get maximum line width\n            let maxWidth = 0;\n            lines.forEach((line)=>{\n                const lineWidth = p.textWidth(line);\n                if (lineWidth > maxWidth) maxWidth = lineWidth;\n            });\n            // Store in cache\n            textCache.set(project.name, {\n                lines: lines,\n                totalHeight: totalHeight,\n                maxWidth: maxWidth,\n                textOffsetX: textOffsetX,\n                textSize: textSize,\n                lineHeight: lineHeight\n            });\n        });\n        // Expose cache globally for UIPlanetButton access\n        window.textCache = textCache;\n    }\n    function isHoveringText(planetButton, mouseX, mouseY, projectName) {\n        // Get cached text data\n        const cached = textCache.get(projectName);\n        if (!cached) // Fallback - should not happen if cache is properly initialized\n        return false;\n        const textX = planetButton.p.x + cached.textOffsetX;\n        const textY = planetButton.p.y;\n        // Define text bounding rectangle using cached values\n        const textBounds = {\n            x: textX,\n            y: textY - cached.totalHeight / 2,\n            width: cached.maxWidth,\n            height: cached.totalHeight\n        };\n        // Check if mouse is within text bounds\n        return mouseX >= textBounds.x && mouseX <= textBounds.x + textBounds.width && mouseY >= textBounds.y && mouseY <= textBounds.y + textBounds.height;\n    }\n    function setupRadialLayout() {\n        planetButtons = [];\n        // Pre-calculate all text data for performance\n        preCalculateTextData();\n        const nodeCount = (0, $JTwtx.projects).length;\n        const baseRadius = mobile ? 20 : 25;\n        const textSize = mobile ? 14 : 18;\n        // Based on proto.js design - create concentric circles with radial positioning\n        const step = p.height / 5;\n        const centerX = p.width / 2;\n        for(let i = 0; i < nodeCount; i++){\n            // Calculate position based on proto.js pattern\n            const y = p.height - 0.25 * (i + 1) * step - 0.05 * step;\n            const r = 0.25 * (i + 1) * step;\n            // Calculate radial position\n            const angle = -0.75 * p.PI + i * 0.09;\n            const radialPos = (0, $baa6D.radialToCartesian)(r, angle, p);\n            const pos = p.createVector(radialPos.x + centerX, -radialPos.y + y);\n            // Position node along the radial line (upward from center)\n            const nodeX = pos.x; //centerX;\n            const nodeY = pos.y; //y - r; // Position at the top of the circle\n            // Position text to the right of the node with offset\n            const textOffsetX = mobile ? 25 : 40;\n            const textOffsetY = 0;\n            const planetButton = new (0, $baa6D.UIPlanetButton)(p, nodeX, nodeY, baseRadius, 0, p.random(p.TWO_PI), 0, [\n                222,\n                200\n            ], (0, $JTwtx.projects)[i].name, textSize, textOffsetX, textOffsetY);\n            // Add hover state tracking\n            planetButton.hoverAlpha = 0;\n            planetButton.targetHoverAlpha = 0;\n            planetButtons.push(planetButton);\n        }\n    }\n    function renderRadialLayout() {\n        // Based on proto.js - render concentric circles first\n        const step = p.height / 5;\n        const centerX = p.width / 2;\n        p.push();\n        p.stroke(222, 64);\n        p.strokeWeight(1);\n        p.noFill();\n        // Draw concentric circles (background)\n        for(let i = 1; i <= planetButtons.length; i++){\n            const y = p.height - 0.25 * i * step - 0.05 * step;\n            const r = 0.25 * i * step;\n            p.circle(centerX, y, 2 * r);\n        }\n        p.pop();\n        // Render planet buttons with integrated text rendering\n        planetButtons.forEach((planetButton, index)=>{\n            const project = (0, $JTwtx.projects)[index];\n            if (!project) return;\n            planetButton.angle -= 0.01 * p.noise(index);\n            // Handle media preview on hover (to the left of the node)\n            // On mobile, use virtual cursor position; on desktop, use actual mouse\n            const hoverX = mobile ? smoothX : p.mouseX;\n            const hoverY = mobile ? smoothY : p.mouseY;\n            // Check if hovering over planet button OR text area\n            const planetHovered = planetButton.contains(hoverX, hoverY);\n            const textHovered = isHoveringText(planetButton, hoverX, hoverY, project.name);\n            const isHovered = planetHovered || textHovered;\n            // Update hover state smoothly\n            planetButton.targetHoverAlpha = isHovered ? 1 : 0;\n            planetButton.hoverAlpha = p.lerp(planetButton.hoverAlpha, planetButton.targetHoverAlpha, isHovered ? 0.1 : 0.01);\n            // Create a virtual smooth vector that reflects the hover state\n            // This gives consistent distance-based effects regardless of actual cursor position\n            const hoverDistance = p.lerp(200, 0, planetButton.hoverAlpha); // 200 = far (no effect), 20 = close (full effect)\n            const virtualSmoothV = p.createVector(planetButton.p.x + hoverDistance, planetButton.p.y);\n            // Render planet button with hover state-based feedback\n            planetButton.render(virtualSmoothV, short);\n            if (isHovered && project.images && project.images.length > 0) {\n                // Load preview media if not already loaded\n                if (!planetButton.previewMedia) loadPreviewMedia(planetButton, project);\n                // Render media preview to the left of the node\n                if (planetButton.previewMedia && planetButton.previewAlpha > 0.01) {\n                    const previewSize = mobile ? 70 : 160;\n                    const previewX = planetButton.p.x - previewSize - 30; // Position to the left\n                    const previewY = planetButton.p.y - previewSize / 2;\n                    p.push();\n                    // Render media image with tint\n                    p.tint(255, planetButton.previewAlpha * 178.5); // Low opacity as requested\n                    // Crop from center of media to fit square\n                    const mediaWidth = planetButton.previewMedia.width;\n                    const mediaHeight = planetButton.previewMedia.height;\n                    const cropSize = Math.min(mediaWidth, mediaHeight);\n                    const cropX = (mediaWidth - cropSize) / 2;\n                    const cropY = (mediaHeight - cropSize) / 2;\n                    p.image(planetButton.previewMedia, previewX, previewY, previewSize, previewSize, cropX, cropY, cropSize, cropSize);\n                    // Remove tint for corner brackets\n                    p.noTint();\n                    // Render HUD-style corner brackets\n                    const cornerSize = mobile ? 8 : 12;\n                    const alpha = planetButton.previewAlpha * 150; // Match preview opacity\n                    p.stroke(255, alpha);\n                    p.strokeWeight(1);\n                    p.noFill();\n                    // Corner brackets (like targeting system)\n                    const corners = [\n                        [\n                            previewX,\n                            previewY\n                        ],\n                        [\n                            previewX + previewSize,\n                            previewY\n                        ],\n                        [\n                            previewX + previewSize,\n                            previewY + previewSize\n                        ],\n                        [\n                            previewX,\n                            previewY + previewSize\n                        ] // bottom-left\n                    ];\n                    corners.forEach(([x, y], index)=>{\n                        const xDir = index === 0 || index === 3 ? 1 : -1;\n                        const yDir = index === 0 || index === 1 ? 1 : -1;\n                        // Horizontal line\n                        p.line(x, y, x + xDir * cornerSize, y);\n                        // Vertical line\n                        p.line(x, y, x, y + yDir * cornerSize);\n                    });\n                    p.pop();\n                }\n            }\n            // Update preview alpha\n            if (isHovered) planetButton.previewAlpha = p.lerp(planetButton.previewAlpha || 0, 1, 0.1);\n            else planetButton.previewAlpha = p.lerp(planetButton.previewAlpha || 0, 0, 0.15);\n        });\n    }\n    function renderHUDDecorations() {\n        p.push();\n        // Title\n        renderTitle();\n        // Perimeter decorations\n        renderPerimeterHUD();\n        p.pop();\n    }\n    function renderTitle() {\n        const titleY = mobile ? 5 : 20;\n        const titleSize = mobile ? 18 : 28;\n        p.fill(255, 200);\n        p.noStroke();\n        p.textAlign(p.CENTER, p.TOP);\n        p.textFont('BPdotsSquareVF', {\n            fontVariationSettings: `wght 900`\n        });\n        p.textSize(titleSize);\n        p.text(\"LIVE EXPERIENCES\", p.width / 2, titleY);\n        // Underline decoration\n        const textWidth = p.textWidth(\"LIVE EXPERIENCES\");\n        p.stroke(255, 120);\n        p.strokeWeight(1);\n        p.line(p.width / 2 - textWidth / 2 - 20, titleY + titleSize + 8, p.width / 2 + textWidth / 2 + 20, titleY + titleSize + 8);\n    }\n    function renderPerimeterHUD() {\n        const margin = mobile ? 10 : 40;\n        const cornerSize = mobile ? 20 : 30;\n        const alpha = 100;\n        p.stroke(255, alpha);\n        p.strokeWeight(1);\n        p.strokeCap(p.SQUARE);\n        p.noFill();\n        // Corner brackets (like targeting system)\n        const corners = [\n            [\n                margin,\n                margin\n            ],\n            [\n                p.width - margin,\n                margin\n            ],\n            [\n                p.width - margin,\n                p.height - margin\n            ],\n            [\n                margin,\n                p.height - margin\n            ] // bottom-left\n        ];\n        corners.forEach(([x, y], index)=>{\n            const xDir = index === 0 || index === 3 ? 1 : -1;\n            const yDir = index === 0 || index === 1 ? 1 : -1;\n            // Horizontal line\n            p.line(x, y, x + xDir * cornerSize, y);\n            // Vertical line\n            p.line(x, y, x, y + yDir * cornerSize);\n        });\n        // Side markers (like coordinate system)\n        const markerCount = mobile ? 3 : 5;\n        const markerSize = 6;\n        // Top and bottom markers\n        for(let i = 1; i < markerCount; i++){\n            const x = p.lerp(margin + cornerSize, p.width - margin - cornerSize, i / markerCount);\n            // Top markers\n            p.line(x, margin, x, margin + markerSize);\n            // Bottom markers\n            p.line(x, p.height - margin, x, p.height - margin - markerSize);\n        }\n        // Left and right markers\n        for(let i = 1; i < markerCount; i++){\n            const y = p.lerp(margin + cornerSize, p.height - margin - cornerSize, i / markerCount);\n            // Left markers\n            p.line(margin, y, margin + markerSize, y);\n            // Right markers\n            p.line(p.width - margin, y, p.width - margin - markerSize, y);\n        }\n        // Status indicators in corners\n        p.fill(255, alpha * 0.6);\n        p.noStroke();\n        p.textAlign(p.LEFT, p.TOP);\n        p.textSize(mobile ? 8 : 11);\n        const step = mobile ? 10 : 13;\n        // System status text\n        p.text(\"SYS: CAUTION\", margin + 0.5 * cornerSize, margin + 1 * step);\n        p.text(\"SOL: \" + sols.toString(), margin + 0.5 * cornerSize, margin + 2 * step);\n        p.text(\"SIG: -27dBm\", margin + 0.5 * cornerSize, margin + 3 * step);\n        p.text(\"RCS: ON\", margin + 0.5 * cornerSize, margin + 4 * step);\n    /*\n        p.textAlign(p.RIGHT, p.TOP);\n        p.text(\"SOL:\" + sols.toString(), p.width - margin - cornerSize, margin + 5);\n        p.textAlign(p.LEFT, p.BOTTOM);\n        p.text(\"SIG:-32dBm\", margin + cornerSize, p.height - margin - 5);\n        p.textAlign(p.RIGHT, p.BOTTOM);\n        p.text(\"BATT:64%\", p.width - margin - cornerSize, p.height - margin - 5);\n        */ }\n    function loadPreviewMedia(planetButton, project) {\n        if (project && project.images && project.images.length > 0) {\n            const firstMedia = project.images[0];\n            const pathString = (0, $baa6D.getMediaPath)(firstMedia);\n            const isVideo = (0, $baa6D.isVideoFile)(pathString);\n            if (isVideo) // For videos, try to load thumbnail first, fall back to placeholder\n            {\n                if (project.thumbnails && project.thumbnails[firstMedia]) p.loadImage(project.thumbnails[firstMedia], (img)=>{\n                    planetButton.previewMedia = img;\n                }, (err)=>{\n                    console.warn('Failed to load thumbnail for preview:', err);\n                });\n            } else // For images, load directly\n            p.loadImage(pathString, (img)=>{\n                planetButton.previewMedia = img;\n            }, (err)=>{\n                console.warn('Failed to load image for preview:', err);\n            });\n        }\n    }\n    function renderInfoCard(project) {\n        // Calculate card size based on screen size\n        const { width: cardWidth, height: cardHeight, x: cardX, y: cardY, isMobile: isMobile } = getCardDimensions();\n        // Card background with semi-transparent overlay\n        p.fill(0, 0, 0, 120 * (infoCardAlpha / 255));\n        p.noStroke();\n        p.rect(0, 0, p.width, p.height);\n        // Main card background\n        p.fill(23, 23, 23, 240 * (infoCardAlpha / 255));\n        p.stroke(230, infoCardAlpha);\n        p.strokeWeight(2);\n        p.rect(cardX, cardY, cardWidth, cardHeight);\n        // Close button\n        const closeButtonSize = isMobile ? 44 : 30;\n        const closeButtonX = cardX + cardWidth - closeButtonSize - 10;\n        const closeButtonY = cardY + 10;\n        renderCloseButton(closeButtonX, closeButtonY, closeButtonSize, infoCardAlpha);\n        // Text styling\n        p.fill(230, infoCardAlpha);\n        p.noStroke();\n        p.textAlign(p.LEFT, p.TOP);\n        // Fixed text sizes for desktop and mobile with tighter mobile spacing\n        const padding = isMobile ? 20 : 24;\n        const baseLineHeight = isMobile ? 20 : 32; // Much tighter line height for mobile\n        let textY = cardY + padding;\n        // Project Name (larger) - with multiline support\n        p.textFont('BPdotsSquareVF', {\n            fontVariationSettings: `wght 900`\n        });\n        const nameSize = isMobile ? 22 : 32;\n        p.textSize(nameSize);\n        // Calculate approximate number of lines for project name\n        const nameWidth = cardWidth - 2 * padding - closeButtonSize;\n        const nameTextWidth = p.textWidth(project.name);\n        const estimatedLines = Math.ceil(nameTextWidth / nameWidth);\n        p.text(project.name, cardX + padding, textY, nameWidth);\n        textY += estimatedLines * nameSize * 1.2 + (isMobile ? 8 : 16); // Use actual text size for height\n        // Type, then Year - Location on same line\n        p.textSize(isMobile ? 12 : 18);\n        // Type\n        p.text(project.type, cardX + padding, textY, cardWidth - 2 * padding);\n        textY += isMobile ? 14 : baseLineHeight; // Reduced spacing on mobile\n        // Year - Location (combined on one line)\n        const yearLocationText = `${project.year} - ${project.location}`;\n        p.text(yearLocationText, cardX + padding, textY, cardWidth - 2 * padding);\n        textY += isMobile ? 18 : baseLineHeight * 1.5; // Slightly more space before gallery\n        // Gallery section (if images exist)\n        if (project.images && project.images.length > 0) {\n            const galleryHeight = isMobile ? cardHeight * 0.3 : cardHeight * 0.4;\n            const galleryY = textY;\n            renderGallery(project.images, cardX + padding, galleryY, cardWidth - 2 * padding, galleryHeight, isMobile);\n            textY += galleryHeight + (isMobile ? 12 : baseLineHeight); // Much tighter spacing on mobile\n        }\n        // Description (if available)\n        if (project.description && project.description.length > 0) {\n            p.textFont('ZxGamut', {\n                fontVariationSettings: `wght 400`\n            });\n            p.textSize(isMobile ? 10 : 16);\n            p.fill(230, infoCardAlpha);\n            p.noStroke();\n            const descriptionHeight = cardHeight - (textY - cardY) - (isMobile ? 10 : padding);\n            p.text(project.description, cardX + padding, textY, cardWidth - 2 * padding, descriptionHeight);\n            // Reset font back to default\n            p.textFont('BPdotsSquareVF', {\n                fontVariationSettings: `wght 900`\n            });\n        }\n        // Navigation arrows (only show if there are multiple projects)\n        if ((0, $JTwtx.projects).length > 1) renderNavigationArrows(cardX, cardY, cardWidth, cardHeight, isMobile);\n    }\n    function renderNavigationArrows(cardX, cardY, cardWidth, cardHeight, isMobile) {\n        // Arrow button dimensions - responsive to screen size\n        const arrowSize = isMobile ? 50 : 40;\n        const arrowPadding = isMobile ? 20 : 15;\n        const arrowY = cardY + cardHeight + arrowPadding;\n        // Position arrows with counter centered between them\n        const counterWidth = 80; // Estimate width needed for counter text\n        const totalWidth = arrowSize * 2 + counterWidth + arrowPadding * 2; // 2 arrows + counter + spacing\n        const startX = cardX + (cardWidth - totalWidth) / 2;\n        const leftArrowX = startX;\n        const rightArrowX = startX + arrowSize + counterWidth + arrowPadding * 2;\n        const counterX = startX + arrowSize + arrowPadding;\n        // Arrows are always active with wraparound navigation\n        const arrowAlpha = infoCardAlpha;\n        // Left arrow (previous with wraparound)\n        renderArrowButton(leftArrowX, arrowY, arrowSize, 'left', arrowAlpha, isMobile);\n        // Right arrow (next with wraparound)\n        renderArrowButton(rightArrowX, arrowY, arrowSize, 'right', arrowAlpha, isMobile);\n        // Project counter text centered between arrows\n        p.fill(230, infoCardAlpha);\n        p.noStroke();\n        p.textAlign(p.CENTER, p.CENTER);\n        p.textFont('BPdotsSquareVF', {\n            fontVariationSettings: `wght 600`\n        });\n        p.textSize(isMobile ? 12 : 18);\n        p.text(`${activeInfoCard + 1} / ${(0, $JTwtx.projects).length}`, counterX + counterWidth / 2, arrowY + arrowSize / 2);\n    }\n    function renderArrowButton(x, y, size, direction, alpha, isMobile) {\n        // Button background\n        p.fill(40, 40, 40, alpha);\n        p.stroke(100, alpha);\n        p.strokeWeight(isMobile ? 2 : 1);\n        p.rect(x, y, size, size);\n        // Arrow symbol\n        p.fill(230, alpha);\n        p.noStroke();\n        const arrowPadding = size * 0.25;\n        const arrowCenterX = x + size / 2;\n        const arrowCenterY = y + size / 2;\n        const arrowWidth = size * 0.3;\n        const arrowHeight = size * 0.4;\n        if (direction === 'left') // Left-pointing triangle\n        p.triangle(arrowCenterX - arrowWidth / 2, arrowCenterY, arrowCenterX + arrowWidth / 2, arrowCenterY - arrowHeight / 2, arrowCenterX + arrowWidth / 2, arrowCenterY + arrowHeight / 2);\n        else // Right-pointing triangle\n        p.triangle(arrowCenterX + arrowWidth / 2, arrowCenterY, arrowCenterX - arrowWidth / 2, arrowCenterY - arrowHeight / 2, arrowCenterX - arrowWidth / 2, arrowCenterY + arrowHeight / 2);\n    }\n    function navigateToProject(newIndex, fromHashChange = false) {\n        if (newIndex >= 0 && newIndex < (0, $JTwtx.projects).length && newIndex !== activeInfoCard) {\n            // Update active info card\n            activeInfoCard = newIndex;\n            // Reset gallery scroll\n            galleryScrollX = 0;\n            targetGalleryScrollX = 0;\n            // Close any expanded media\n            if (expandedMediaIndex !== null) closeExpandedMedia();\n            // Load media for new project\n            loadMediaForProject((0, $JTwtx.projects)[newIndex]);\n            // Update URL and breadcrumb\n            const newProject = (0, $JTwtx.projects)[newIndex];\n            if (newProject && newProject.slug) {\n                const newPath = `/interactive/live/${newProject.slug}`;\n                // Only update URL if this wasn't triggered by a hash change\n                if (!fromHashChange) window.history.replaceState(null, '', `#${newPath}`);\n                currentPath = newPath;\n                // Update breadcrumb\n                Promise.resolve((parcelRequire(\"drhU0\"))).then(({ updateBreadcrumb: updateBreadcrumb })=>{\n                    updateBreadcrumb(newPath);\n                });\n                // Update session storage\n                sessionStorage.setItem('installationsActiveProject', newProject.slug);\n            }\n        }\n    }\n    function getNavigationButtonHoverCheck() {\n        return (mouseX, mouseY)=>{\n            if (activeInfoCard !== null && (0, $JTwtx.projects).length > 1) {\n                const { width: cardWidth, height: cardHeight, x: cardX, y: cardY, isMobile: isMobile } = getCardDimensions();\n                const arrowSize = isMobile ? 50 : 40;\n                const arrowPadding = isMobile ? 20 : 15;\n                const arrowY = cardY + cardHeight + arrowPadding;\n                // Use new arrow positioning logic (same as in renderNavigationArrows)\n                const counterWidth = 80;\n                const totalWidth = arrowSize * 2 + counterWidth + arrowPadding * 2;\n                const startX = cardX + (cardWidth - totalWidth) / 2;\n                const leftArrowX = startX;\n                const rightArrowX = startX + arrowSize + counterWidth + arrowPadding * 2;\n                // Check left arrow (always active with wraparound)\n                if (mouseX >= leftArrowX && mouseX <= leftArrowX + arrowSize && mouseY >= arrowY && mouseY <= arrowY + arrowSize) return true;\n                // Check right arrow (always active with wraparound)\n                if (mouseX >= rightArrowX && mouseX <= rightArrowX + arrowSize && mouseY >= arrowY && mouseY <= arrowY + arrowSize) return true;\n            }\n            return false;\n        };\n    }\n    function getTextAreasHoverCheck() {\n        return (mouseX, mouseY)=>{\n            // Check if hovering over any text area\n            for(let i = 0; i < planetButtons.length; i++){\n                const planetButton = planetButtons[i];\n                const project = (0, $JTwtx.projects)[i];\n                if (project && isHoveringText(planetButton, mouseX, mouseY, project.name)) return true;\n            }\n            return false;\n        };\n    }\n    // Track loaded media for cleanup\n    const loadedMediaForProject = new Map();\n    function loadMediaForProject(project) {\n        if (!project.images || project.images.length === 0) return;\n        // Clean up previous project media first\n        cleanupUnusedMedia(project);\n        project.images.forEach((mediaItem, index)=>{\n            const pathString = (0, $baa6D.getMediaPath)(mediaItem);\n            if (!loadedMedia.has(pathString)) {\n                const isVideo = (0, $baa6D.isVideoFile)(pathString);\n                // Strict mobile handling - NEVER load video elements on mobile\n                const isMobileCheck = (0, $baa6D.widthCheck)(p.width);\n                if (isMobileCheck && isVideo) {\n                    if (project.thumbnails && project.thumbnails[mediaItem]) // Lazy load thumbnail only when needed\n                    loadedMedia.set(pathString, {\n                        element: null,\n                        type: 'video-thumbnail-lazy',\n                        videoSrc: pathString,\n                        thumbnailPath: project.thumbnails[mediaItem],\n                        loaded: false\n                    });\n                    else // No thumbnail available - use black placeholder\n                    loadedMedia.set(pathString, {\n                        element: null,\n                        type: 'video-placeholder',\n                        videoSrc: pathString,\n                        loaded: true\n                    });\n                    return;\n                }\n                // Desktop video loading\n                if (isVideo) loadVideoElement(pathString);\n                else // Lazy load images as well\n                loadedMedia.set(pathString, {\n                    element: null,\n                    type: 'image-lazy',\n                    imagePath: pathString,\n                    loaded: false\n                });\n            }\n            // Track media for this project\n            if (!loadedMediaForProject.has(project.slug)) loadedMediaForProject.set(project.slug, new Set());\n            loadedMediaForProject.get(project.slug).add(pathString);\n        });\n    }\n    function loadVideoElement(pathString) {\n        // Only create video elements on desktop\n        const isMobileCheck = (0, $baa6D.widthCheck)(p.width);\n        if (isMobileCheck) {\n            console.warn('Attempted to load video on mobile - this should not happen');\n            return;\n        }\n        // Check if video is already loaded or being loaded\n        if (loadedMedia.has(pathString) || mediaBeingLoaded.has(pathString)) return;\n        // Mark as being loaded and set initial unloaded state\n        mediaBeingLoaded.add(pathString);\n        loadedMedia.set(pathString, {\n            element: null,\n            type: 'video',\n            loaded: false\n        });\n        const video = p.createVideo(pathString, ()=>{\n            // Only set loaded once when video is ready\n            const currentData = loadedMedia.get(pathString);\n            if (currentData && !currentData.loaded) {\n                loadedMedia.set(pathString, {\n                    element: video,\n                    type: 'video',\n                    loaded: true\n                });\n                mediaBeingLoaded.delete(pathString);\n            }\n        });\n        video.hide();\n        video.volume(0);\n        // Set attributes for iOS compatibility\n        video.elt.setAttribute('playsinline', true);\n        video.elt.setAttribute('muted', true);\n        video.elt.setAttribute('preload', 'metadata');\n        // Desktop: autoplay looping for moving preview\n        video.loop();\n        // Single consolidated event listener to avoid multiple updates\n        video.elt.addEventListener('canplay', ()=>{\n            const currentData = loadedMedia.get(pathString);\n            if (currentData && !currentData.loaded) {\n                loadedMedia.set(pathString, {\n                    element: video,\n                    type: 'video',\n                    loaded: true\n                });\n                mediaBeingLoaded.delete(pathString);\n            }\n        });\n        // Fallback timeout in case events don't fire\n        setTimeout(()=>{\n            const currentData = loadedMedia.get(pathString);\n            if (currentData && !currentData.loaded) {\n                loadedMedia.set(pathString, {\n                    element: video,\n                    type: 'video',\n                    loaded: true\n                });\n                mediaBeingLoaded.delete(pathString);\n            }\n        }, 3000);\n    }\n    function cleanupUnusedMedia(currentProject) {\n        // Clean up media from other projects to free memory\n        loadedMediaForProject.forEach((mediaSet, projectSlug)=>{\n            if (projectSlug !== currentProject.slug) {\n                mediaSet.forEach((pathString)=>{\n                    const mediaData = loadedMedia.get(pathString);\n                    if (mediaData && mediaData.element) // Remove video elements from DOM\n                    {\n                        if (mediaData.type === 'video' && mediaData.element.elt) mediaData.element.remove();\n                    }\n                    loadedMedia.delete(pathString);\n                });\n                loadedMediaForProject.delete(projectSlug);\n            }\n        });\n    }\n    function lazyLoadMedia(pathString) {\n        const mediaData = loadedMedia.get(pathString);\n        if (!mediaData || mediaData.loaded || mediaBeingLoaded.has(pathString)) return;\n        // Mark as being loaded to prevent duplicates\n        mediaBeingLoaded.add(pathString);\n        if (mediaData.type === 'video-thumbnail-lazy') // Load thumbnail image\n        p.loadImage(mediaData.thumbnailPath, (img)=>{\n            loadedMedia.set(pathString, {\n                element: img,\n                type: 'video-thumbnail',\n                videoSrc: pathString,\n                loaded: true\n            });\n            mediaBeingLoaded.delete(pathString);\n        }, (err)=>{\n            console.error('Failed to load video thumbnail:', mediaData.thumbnailPath, err);\n            loadedMedia.set(pathString, {\n                element: null,\n                type: 'video-placeholder',\n                videoSrc: pathString,\n                loaded: true\n            });\n            mediaBeingLoaded.delete(pathString);\n        });\n        else if (mediaData.type === 'image-lazy') // Load image\n        p.loadImage(mediaData.imagePath, (img)=>{\n            loadedMedia.set(pathString, {\n                element: img,\n                type: 'image',\n                loaded: true\n            });\n            mediaBeingLoaded.delete(pathString);\n        }, (err)=>{\n            console.error('Failed to load image:', mediaData.imagePath, err);\n            mediaBeingLoaded.delete(pathString);\n        });\n    }\n    function renderGallery(images, x, y, width, height, isMobile) {\n        if (!images || images.length === 0) return;\n        // Gallery container background\n        p.fill(0, 0, 0, 100 * (infoCardAlpha / 255));\n        p.stroke(230, infoCardAlpha * 0.3);\n        p.strokeWeight(1);\n        p.rect(x, y, width, height);\n        // Set up clipping mask for gallery\n        p.push();\n        // Create clipping rectangle\n        p.drawingContext.save();\n        p.drawingContext.beginPath();\n        p.drawingContext.rect(x, y, width, height);\n        p.drawingContext.clip();\n        // Use 3:2 aspect ratio for gallery items with equal padding\n        const padding = isMobile ? 8 : 10; // Equal padding for all sides and between items\n        const itemHeight = height - 2 * padding; // Account for top and bottom padding\n        const itemWidth = itemHeight * 1.5; // 3:2 aspect ratio\n        const totalWidth = images.length * (itemWidth + padding) - padding; // Last item doesn't need trailing padding\n        const startX = x + padding; // Left padding\n        const startY = y + padding; // Top padding\n        // Constrain scroll bounds\n        const maxScroll = p.max(0, totalWidth - width + 2 * padding);\n        targetGalleryScrollX = p.constrain(targetGalleryScrollX, -maxScroll, 0);\n        // Render media items\n        images.forEach((mediaItem, index)=>{\n            const pathString = (0, $baa6D.getMediaPath)(mediaItem);\n            const itemX = startX + index * (itemWidth + padding) + galleryScrollX;\n            // Only render if visible\n            if (itemX + itemWidth >= x && itemX <= x + width) {\n                const mediaData = loadedMedia.get(pathString);\n                // Lazy load media when it becomes visible\n                if (mediaData && !mediaData.loaded) lazyLoadMedia(pathString);\n                if (mediaData && mediaData.loaded) {\n                    p.push();\n                    p.tint(255, infoCardAlpha);\n                    try {\n                        if (mediaData.type === 'image') {\n                            // Fill the entire box, cropping as needed\n                            const img = mediaData.element;\n                            const { sourceX: sourceX, sourceY: sourceY, sourceWidth: sourceWidth, sourceHeight: sourceHeight } = (0, $baa6D.calculateCropDimensions)(img.width, img.height, itemWidth, itemHeight);\n                            p.image(img, itemX, startY, itemWidth, itemHeight, sourceX, sourceY, sourceWidth, sourceHeight);\n                        } else if (mediaData.type === 'video-thumbnail') {\n                            // Mobile: Show thumbnail image (no play icon to avoid blocking taps)\n                            const img = mediaData.element;\n                            const { sourceX: sourceX, sourceY: sourceY, sourceWidth: sourceWidth, sourceHeight: sourceHeight } = (0, $baa6D.calculateCropDimensions)(img.width, img.height, itemWidth, itemHeight);\n                            p.image(img, itemX, startY, itemWidth, itemHeight, sourceX, sourceY, sourceWidth, sourceHeight);\n                        } else if (mediaData.type === 'video') {\n                            // Show first frame of video as preview (no play icon)\n                            const video = mediaData.element;\n                            if (video.elt && (video.elt.readyState >= 1 || video.elt.videoWidth > 0)) {\n                                const videoWidth = video.elt.videoWidth || video.width || 1920;\n                                const videoHeight = video.elt.videoHeight || video.height || 1080;\n                                const { sourceX: sourceX, sourceY: sourceY, sourceWidth: sourceWidth, sourceHeight: sourceHeight } = (0, $baa6D.calculateCropDimensions)(videoWidth, videoHeight, itemWidth, itemHeight);\n                                p.image(video, itemX, startY, itemWidth, itemHeight, sourceX, sourceY, sourceWidth, sourceHeight);\n                            } else {\n                                // Fallback to dark background if video not ready\n                                p.fill(40, 40, 40, 200 * (infoCardAlpha / 255));\n                                p.noStroke();\n                                p.rect(itemX, startY, itemWidth, itemHeight);\n                            }\n                        } else if (mediaData.type === 'video-placeholder') {\n                            // Mobile: Show black placeholder with play icon\n                            p.fill(23, 23, 23, 240 * (infoCardAlpha / 255));\n                            p.noStroke();\n                            p.rect(itemX, startY, itemWidth, itemHeight);\n                            // Small play icon overlay\n                            const playSize = itemWidth * 0.15;\n                            const playX = itemX + (itemWidth - playSize) / 2;\n                            const playY = startY + (itemHeight - playSize) / 2;\n                            renderPlayIcon(playX, playY, playSize, infoCardAlpha);\n                        }\n                    } catch (error) {\n                        console.warn('Error rendering media:', error);\n                        // Fall back to placeholder\n                        p.fill(80, 80, 80, 150 * (infoCardAlpha / 255));\n                        p.stroke(120, infoCardAlpha * 0.5);\n                        p.strokeWeight(1);\n                        p.rect(itemX, startY, itemWidth, itemHeight);\n                        // Show error text\n                        p.fill(200, infoCardAlpha * 0.7);\n                        p.noStroke();\n                        p.textAlign(p.CENTER, p.CENTER);\n                        p.textSize(isMobile ? 6 : 12);\n                        p.text(mediaData.type === 'video' ? 'Video Error' : 'Image Error', itemX + itemWidth / 2, startY + itemHeight / 2);\n                    }\n                    p.pop();\n                } else if (mediaData) {\n                    // Show appropriate placeholder based on type\n                    if (mediaData.type === 'video-thumbnail-lazy' || mediaData.type === 'image-lazy') {\n                        // Light placeholder for lazy loading items\n                        p.fill(60, 60, 60, 120 * (infoCardAlpha / 255));\n                        p.stroke(110, infoCardAlpha * 0.4);\n                        p.strokeWeight(1);\n                        p.rect(itemX, startY, itemWidth, itemHeight);\n                        // Subtle loading indicator\n                        p.fill(180, infoCardAlpha * 0.6);\n                        p.noStroke();\n                        p.textAlign(p.CENTER, p.CENTER);\n                        p.textSize(isMobile ? 6 : 12);\n                        p.text(\"\\u2022\\u2022\\u2022\", itemX + itemWidth / 2, startY + itemHeight / 2);\n                    } else {\n                        // Standard loading placeholder\n                        p.fill(50, 50, 50, 150 * (infoCardAlpha / 255));\n                        p.stroke(100, infoCardAlpha * 0.5);\n                        p.strokeWeight(1);\n                        p.rect(itemX, startY, itemWidth, itemHeight);\n                        // Loading text\n                        p.fill(150, infoCardAlpha * 0.7);\n                        p.noStroke();\n                        p.textAlign(p.CENTER, p.CENTER);\n                        p.textSize(isMobile ? 8 : 14);\n                        p.text('Loading...', itemX + itemWidth / 2, startY + itemHeight / 2);\n                    }\n                } else {\n                    // No media data available\n                    p.fill(40, 40, 40, 100 * (infoCardAlpha / 255));\n                    p.stroke(80, infoCardAlpha * 0.3);\n                    p.strokeWeight(1);\n                    p.rect(itemX, startY, itemWidth, itemHeight);\n                }\n                // Media border\n                p.noFill();\n                p.stroke(230, infoCardAlpha * 0.6);\n                p.strokeWeight(1);\n                p.rect(itemX, startY, itemWidth, itemHeight);\n            }\n        });\n        // Scroll indicators (if needed)\n        if (totalWidth > width) {\n            const indicatorAlpha = infoCardAlpha * 0.8;\n            // Left scroll indicator\n            if (galleryScrollX < 0) {\n                p.fill(230, indicatorAlpha);\n                p.noStroke();\n                p.triangle(x + 5, y + height / 2, x + 15, y + height / 2 - 5, x + 15, y + height / 2 + 5);\n            }\n            // Right scroll indicator\n            if (galleryScrollX > -maxScroll) {\n                p.fill(230, indicatorAlpha);\n                p.noStroke();\n                p.triangle(x + width - 5, y + height / 2, x + width - 15, y + height / 2 - 5, x + width - 15, y + height / 2 + 5);\n            }\n        }\n        // Restore clipping context\n        p.drawingContext.restore();\n        p.pop();\n    }\n    function openExpandedMedia(index) {\n        expandedMediaIndex = index;\n        targetExpandedAlpha = 255;\n        expandedMediaAnimationStart = p.millis();\n        expandedMediaAnimating = true;\n    }\n    function closeExpandedMedia() {\n        targetExpandedAlpha = 0;\n        expandedMediaAnimationStart = p.millis();\n        expandedMediaAnimating = true;\n        // Clean up native video element\n        if (nativeVideoElement) {\n            nativeVideoElement.remove();\n            nativeVideoElement = null;\n        }\n    }\n    function renderExpandedNativeVideo(videoPath) {\n        // Dark overlay\n        p.fill(0, 0, 0, 200 * (expandedMediaAlpha / 255));\n        p.noStroke();\n        p.rect(0, 0, p.width, p.height);\n        // Create or update native video element\n        if (!nativeVideoElement || nativeVideoElement.src !== videoPath) {\n            // Clean up existing video if it exists\n            if (nativeVideoElement) nativeVideoElement.remove();\n            nativeVideoElement = document.createElement('video');\n            nativeVideoElement.src = videoPath;\n            nativeVideoElement.controls = true;\n            nativeVideoElement.preload = 'metadata';\n            nativeVideoElement.setAttribute('playsinline', true);\n            nativeVideoElement.muted = true;\n            // Style the video element\n            nativeVideoElement.style.position = 'fixed';\n            nativeVideoElement.style.zIndex = '1000';\n            nativeVideoElement.style.backgroundColor = '#000';\n            nativeVideoElement.style.borderRadius = '8px';\n            // Add to DOM\n            document.body.appendChild(nativeVideoElement);\n        }\n        // Calculate video size and position (full width on mobile, 80% on desktop)\n        const isMobile = (0, $baa6D.widthCheck)(p.width);\n        const maxWidth = isMobile ? p.width : p.width * 0.8;\n        const maxHeight = isMobile ? p.height * 0.8 : p.height * 0.8;\n        // Use 16:9 aspect ratio as default, or actual video ratio if available\n        let aspectRatio = 16 / 9;\n        if (nativeVideoElement.videoWidth && nativeVideoElement.videoHeight) aspectRatio = nativeVideoElement.videoWidth / nativeVideoElement.videoHeight;\n        let videoWidth, videoHeight;\n        if (aspectRatio > maxWidth / maxHeight) {\n            videoWidth = maxWidth;\n            videoHeight = maxWidth / aspectRatio;\n        } else {\n            videoHeight = maxHeight;\n            videoWidth = maxHeight * aspectRatio;\n        }\n        // Position the video element\n        const videoX = (p.width - videoWidth) / 2;\n        const videoY = (p.height - videoHeight) / 2;\n        // Apply positioning and sizing\n        nativeVideoElement.style.left = videoX + 'px';\n        nativeVideoElement.style.top = videoY + 'px';\n        nativeVideoElement.style.width = videoWidth + 'px';\n        nativeVideoElement.style.height = videoHeight + 'px';\n        nativeVideoElement.style.opacity = expandedMediaAlpha / 255;\n        // Close button (centered below the video, similar to arrow buttons)\n        const closeSize = isMobile ? 50 : 40;\n        const closePadding = isMobile ? 20 : 15;\n        const closeY = videoY + videoHeight + closePadding;\n        const closeX = (p.width - closeSize) / 2; // Center horizontally\n        p.fill(0, 0, 0, 150 * (expandedMediaAlpha / 255));\n        p.stroke(255, expandedMediaAlpha);\n        p.strokeWeight(2);\n        p.rect(closeX, closeY, closeSize, closeSize);\n        // X symbol\n        p.stroke(255, expandedMediaAlpha);\n        p.strokeWeight(3);\n        const padding = closeSize * 0.3; // Proportional padding\n        p.line(closeX + padding, closeY + padding, closeX + closeSize - padding, closeY + closeSize - padding);\n        p.line(closeX + closeSize - padding, closeY + padding, closeX + padding, closeY + closeSize - padding);\n    }\n    function renderExpandedMedia() {\n        if (activeInfoCard === null || expandedMediaIndex === null) return;\n        const project = (0, $JTwtx.projects)[activeInfoCard];\n        if (!project.images || expandedMediaIndex >= project.images.length) return;\n        const mediaItem = project.images[expandedMediaIndex];\n        let pathString;\n        if (typeof mediaItem === 'string') pathString = mediaItem;\n        else if (mediaItem && typeof mediaItem === 'object') pathString = mediaItem.default || mediaItem.src || mediaItem.href || mediaItem.toString();\n        else pathString = String(mediaItem);\n        const mediaData = loadedMedia.get(pathString);\n        const isVideo = pathString.toLowerCase().match(/\\.(mp4|mov|webm|avi)(\\?.*)?$/i);\n        // For videos or video placeholders, use native video player\n        if (isVideo || mediaData && (mediaData.type === 'video-placeholder' || mediaData.type === 'video-thumbnail')) {\n            // Use the original video source for native player\n            const videoSrc = mediaData && mediaData.videoSrc ? mediaData.videoSrc : pathString;\n            renderExpandedNativeVideo(videoSrc);\n            return;\n        }\n        // For images, continue with p5.js rendering\n        if (!mediaData || !mediaData.loaded) return;\n        // Dark overlay\n        p.fill(0, 0, 0, 200 * (expandedMediaAlpha / 255));\n        p.noStroke();\n        p.rect(0, 0, p.width, p.height);\n        // Calculate media size (full width on mobile, 80% on desktop)\n        const isMobile = (0, $baa6D.widthCheck)(p.width);\n        const maxWidth = isMobile ? p.width : p.width * 0.8;\n        const maxHeight = isMobile ? p.height * 0.8 : p.height * 0.8;\n        let mediaWidth, mediaHeight;\n        if (mediaData.type === 'image') {\n            const img = mediaData.element;\n            const aspectRatio = img.width / img.height;\n            if (aspectRatio > maxWidth / maxHeight) {\n                mediaWidth = maxWidth;\n                mediaHeight = maxWidth / aspectRatio;\n            } else {\n                mediaHeight = maxHeight;\n                mediaWidth = maxHeight * aspectRatio;\n            }\n        } else if (mediaData.type === 'video') {\n            const video = mediaData.element;\n            // Get video dimensions with fallbacks\n            let videoWidth = video.elt.videoWidth || video.width || 1920;\n            let videoHeight = video.elt.videoHeight || video.height || 1080;\n            // Ensure we have valid dimensions\n            if (videoWidth <= 0 || videoHeight <= 0) {\n                videoWidth = 1920;\n                videoHeight = 1080;\n            }\n            const aspectRatio = videoWidth / videoHeight;\n            if (aspectRatio > maxWidth / maxHeight) {\n                mediaWidth = maxWidth;\n                mediaHeight = maxWidth / aspectRatio;\n            } else {\n                mediaHeight = maxHeight;\n                mediaWidth = maxHeight * aspectRatio;\n            }\n        }\n        const mediaX = (p.width - mediaWidth) / 2;\n        const mediaY = (p.height - mediaHeight) / 2;\n        // Render expanded media\n        p.push();\n        p.tint(255, expandedMediaAlpha);\n        p.image(mediaData.element, mediaX, mediaY, mediaWidth, mediaHeight);\n        p.pop();\n        // Close button (centered below the image, similar to arrow buttons)\n        const closeSize = isMobile ? 50 : 40;\n        const closePadding = isMobile ? 20 : 15;\n        const closeY = mediaY + mediaHeight + closePadding;\n        const closeX = (p.width - closeSize) / 2; // Center horizontally\n        p.fill(0, 0, 0, 150 * (expandedMediaAlpha / 255));\n        p.stroke(255, expandedMediaAlpha);\n        p.strokeWeight(2);\n        p.rect(closeX, closeY, closeSize, closeSize);\n        // X symbol\n        p.stroke(255, expandedMediaAlpha);\n        p.strokeWeight(3);\n        const padding = closeSize * 0.3; // Proportional padding\n        p.line(closeX + padding, closeY + padding, closeX + closeSize - padding, closeY + closeSize - padding);\n        p.line(closeX + closeSize - padding, closeY + padding, closeX + padding, closeY + closeSize - padding);\n    // No custom controls needed - native video handles everything\n    }\n};\nconst $10c5b62b251f1acf$export$4d92f5370eca5938 = (node, options = {})=>{\n    return new p5((p)=>$10c5b62b251f1acf$export$d038dabfbf61338f(p, options), node);\n};\n\n\nclass $1e164a6ac005f7d0$export$b95f0ca738335a5f extends (0, $800sp.LitElement) {\n    static styles = (0, $800sp.css)`\n        canvas {\n            display: block;\n            margin: 0;\n            padding: 0;\n            overflow: hidden;\n            width: 100%;\n            height: 100%;\n        }\n    `;\n    static properties = {\n        id: {\n            type: String\n        },\n        sketch: {\n            type: String\n        },\n        skipAnimations: {\n            type: Boolean\n        },\n        options: {\n            type: Object\n        }\n    };\n    constructor(){\n        super();\n        this.id = \"bg\";\n        this.sketch = \"\";\n        this.skipAnimations = false;\n        this.options = {};\n        this.p5Instance = null;\n        this.containerDiv = null;\n        this.isInitialized = false;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Initialize the sketch when the element is added to the DOM\n        this.updateComplete.then(()=>{\n            if (!this.isInitialized) this.initializeSketch();\n        });\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        // Clean up the p5 instance when the element is removed from the DOM\n        this.cleanupSketch();\n    }\n    updated(changedProperties) {\n        super.updated(changedProperties);\n        // Only reinitialize if already initialized and properties actually changed\n        if (this.isInitialized && (changedProperties.has('sketch') || changedProperties.has('skipAnimations') || changedProperties.has('options'))) {\n            this.cleanupSketch();\n            this.initializeSketch();\n        } else if (!this.isInitialized) // Initialize for the first time\n        this.initializeSketch();\n    }\n    cleanupSketch() {\n        try {\n            if (this.p5Instance) {\n                console.log(`p5-element: Cleaning up p5 instance for ${this.sketch}`);\n                // Call custom cleanup method if it exists\n                if (typeof this.p5Instance.cleanupSketch === 'function') this.p5Instance.cleanupSketch();\n                // Remove the p5 instance properly\n                this.p5Instance.remove();\n                this.p5Instance = null;\n            }\n            if (this.containerDiv) // Clear the container div\n            this.containerDiv.innerHTML = '';\n            this.isInitialized = false;\n        } catch (error) {\n            console.error('p5-element: Error during cleanup:', error);\n            // Force cleanup even if there's an error\n            this.p5Instance = null;\n            if (this.containerDiv) this.containerDiv.innerHTML = '';\n            this.isInitialized = false;\n        }\n    }\n    initializeSketch() {\n        try {\n            if (!this.containerDiv) this.containerDiv = this.shadowRoot.querySelector('#sketch-container');\n            if (!this.containerDiv) {\n                console.warn('p5-element: Container not ready yet, retrying...');\n                setTimeout(()=>this.initializeSketch(), 100);\n                return;\n            }\n            // Clear any existing content\n            this.containerDiv.innerHTML = '';\n            console.log(`p5-element: Initializing sketch: ${this.sketch}, skipAnimations: ${this.skipAnimations}, options:`, this.options);\n            // Create the appropriate sketch based on the sketch property\n            if (this.sketch === \"home\") this.p5Instance = (0, $7c52c1757ddfa23f$export$6704eadea0be434f)(this.containerDiv, {\n                skipAnimations: this.skipAnimations\n            });\n            else if (this.sketch === \"codeart\") this.p5Instance = (0, $a850a1f0a1459307$export$6d40932eaa280b79)(this.containerDiv);\n            else if (this.sketch === \"installations\") this.p5Instance = (0, $10c5b62b251f1acf$export$4d92f5370eca5938)(this.containerDiv, this.options);\n            else this.p5Instance = (0, $82b1d05426f642e7$export$121e7a268b92cc36)(this.containerDiv);\n            if (this.p5Instance) {\n                console.log(`p5-element: Successfully created p5 instance for ${this.sketch}`);\n                this.isInitialized = true;\n            }\n        } catch (error) {\n            console.error('p5-element: Error initializing sketch:', error);\n            this.isInitialized = false;\n        }\n    }\n    render() {\n        return (0, $800sp.html)`<div id=\"sketch-container\"></div>`;\n    }\n}\ncustomElements.define(\"p5-element\", $1e164a6ac005f7d0$export$b95f0ca738335a5f);\n\n\n//# sourceMappingURL=blap64.f954e2fc.js.map\n","import { LitElement, html, css } from \"lit\";\nimport { homeSketch } from \"../Home/sketch.js\";\nimport { oopsSketch } from \"../Oops/sketch.js\";\nimport { codeartSketch } from \"../CodeArt/sketch.js\";\nimport { installationsSketch } from \"../Installations/sketch.js\";\n\nexport class p5Element extends LitElement {\n    static styles = css`\n        canvas {\n            display: block;\n            margin: 0;\n            padding: 0;\n            overflow: hidden;\n            width: 100%;\n            height: 100%;\n        }\n    `;\n\n    static properties = {\n        id: { type: String },\n        sketch: { type: String },\n        skipAnimations: { type: Boolean },\n        options: { type: Object },\n    };\n\n    constructor() {\n        super();\n        this.id = \"bg\";\n        this.sketch = \"\";\n        this.skipAnimations = false;\n        this.options = {};\n        this.p5Instance = null;\n        this.containerDiv = null;\n        this.isInitialized = false;\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n        // Initialize the sketch when the element is added to the DOM\n        this.updateComplete.then(() => {\n            if (!this.isInitialized) {\n                this.initializeSketch();\n            }\n        });\n    }\n\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        // Clean up the p5 instance when the element is removed from the DOM\n        this.cleanupSketch();\n    }\n\n    updated(changedProperties) {\n        super.updated(changedProperties);\n        // Only reinitialize if already initialized and properties actually changed\n        if (this.isInitialized && (changedProperties.has('sketch') || changedProperties.has('skipAnimations') || changedProperties.has('options'))) {\n            this.cleanupSketch();\n            this.initializeSketch();\n        } else if (!this.isInitialized) {\n            // Initialize for the first time\n            this.initializeSketch();\n        }\n    }\n\n    cleanupSketch() {\n        try {\n            if (this.p5Instance) {\n                console.log(`p5-element: Cleaning up p5 instance for ${this.sketch}`);\n                \n                // Call custom cleanup method if it exists\n                if (typeof this.p5Instance.cleanupSketch === 'function') {\n                    this.p5Instance.cleanupSketch();\n                }\n                \n                // Remove the p5 instance properly\n                this.p5Instance.remove();\n                this.p5Instance = null;\n            }\n            if (this.containerDiv) {\n                // Clear the container div\n                this.containerDiv.innerHTML = '';\n            }\n            this.isInitialized = false;\n        } catch (error) {\n            console.error('p5-element: Error during cleanup:', error);\n            // Force cleanup even if there's an error\n            this.p5Instance = null;\n            if (this.containerDiv) {\n                this.containerDiv.innerHTML = '';\n            }\n            this.isInitialized = false;\n        }\n    }\n\n    initializeSketch() {\n        try {\n            if (!this.containerDiv) {\n                this.containerDiv = this.shadowRoot.querySelector('#sketch-container');\n            }\n\n            if (!this.containerDiv) {\n                console.warn('p5-element: Container not ready yet, retrying...');\n                setTimeout(() => this.initializeSketch(), 100);\n                return;\n            }\n\n            // Clear any existing content\n            this.containerDiv.innerHTML = '';\n\n            console.log(`p5-element: Initializing sketch: ${this.sketch}, skipAnimations: ${this.skipAnimations}, options:`, this.options);\n\n            // Create the appropriate sketch based on the sketch property\n            if (this.sketch === \"home\") {\n                this.p5Instance = homeSketch(this.containerDiv, { skipAnimations: this.skipAnimations });\n            } else if (this.sketch === \"codeart\") {\n                this.p5Instance = codeartSketch(this.containerDiv);\n            } else if (this.sketch === \"installations\") {\n                this.p5Instance = installationsSketch(this.containerDiv, this.options);\n            } else {\n                this.p5Instance = oopsSketch(this.containerDiv);\n            }\n\n            if (this.p5Instance) {\n                console.log(`p5-element: Successfully created p5 instance for ${this.sketch}`);\n                this.isInitialized = true;\n            }\n        } catch (error) {\n            console.error('p5-element: Error initializing sketch:', error);\n            this.isInitialized = false;\n        }\n    }\n\n    render() {\n        return html`<div id=\"sketch-container\"></div>`;\n    }\n}\n\ncustomElements.define(\"p5-element\", p5Element);\n","import { smoothFollow, easeInCubic, getFontSizes, widthCheck, loadGoogleFontSet, injectFontLink, getViewportSize, AnimationManager, UICornerBoxButton, UIArcButton, UITriangleButton, UIHexButton, TextWriter, updateCursor } from \"../../utils\";\n\n// Home sketch with animation support\n// options.skipAnimations: boolean - when true, skips intro animations and shows final state immediately\n// This is automatically enabled when navigating back via browser back/forward buttons\n// or can be manually enabled via URL parameter ?skipAnimations=true\nexport const sketch = function (p, options = {}) {\n\tlet ui = [];\n    let ui_opacity = 0;\n\tlet smoothX, smoothY;\n\tlet short;\n    let intro_texts = [];\n    let animation_states = [];\n    let animation_manager;\n    let font_sizes;\n    let mobile = false;\n    let skipAnimations = options.skipAnimations || false;\n\n\tp.setup = async function() {\n        p.noCanvas();\n\t    const s = getViewportSize();\n\t\tp.createCanvas(s.width, s.height);\n\t\tmobile = widthCheck(p.width);\n\t\tp.background(23);\n\t\tp.noFill();\n\t\tp.stroke(230);\n\t\tp.strokeWeight(4);\n\t\tp.strokeCap(p.PROJECT);\n\t\tawait loadGoogleFontSet('../../assets/fonts/BPdotsSquareVF.ttf');\n\t\tp.textAlign(p.CENTER, p.CENTER);\n\t\tshort = p.min(p.width, p.height);\n\t\tconst s_font = mobile ? 14 : Math.max(0.022*p.width, 32);\n\t\tui.push(new UICornerBoxButton(p, 0.25*p.width, 0.7*p.height, 0.26*short, 0.26*short, 0.01*p.width, 0.01*p.width, \"INTERACTIVE\\nMEDIA\", s_font));\n\t\tui.push(new UIArcButton(p, 0.5*p.width, 0.7*p.height, 0.3*short, 0.3*short, 0.01*p.width, 0.01*p.width, \"PHOTO\", s_font));\n\t\tui.push(new UITriangleButton(p, 0.75*p.width, 0.35*p.height, 0.2*short, 0.2*short, 0.01*p.width, 0.01*p.width, -0.5*p.PI, \"ABOUT\", s_font));\n\t\tui.push(new UIHexButton(p, 0.75*p.width, 0.7*p.height, 0.3*short, 0.3*short, 0.01*p.width, 0.01*p.width, \"COLLECT\", s_font));\n\n\t\t// Apply quadratic curve layout to UI elements\n\t\tlayoutUI();\n\t\tsmoothX = p.width/2;\n\t\tsmoothY = p.height/2;\n\t\tp.textFont('BPdotsSquareVF', {\n            fontVariationSettings: `wght 900`\n        });\n        font_sizes = getFontSizes(p.width, p.height);\n        let padding = [0.04, 0.15];\n        if (mobile){\n            padding = [0.025, 0.05];\n        }\n\n        intro_texts.push(new TextWriter(p, padding[0] * p.width, padding[0] * p.width, p.width, p.height / 2, \"HELLO, FRIEND.\", font_sizes.large));\n        intro_texts.push(new TextWriter(p, padding[1] * p.width, 0.18 * p.height, p.width / 2, p.height / 2, \"I play many roles:\", font_sizes.small));\n        intro_texts.push(new TextWriter(p, padding[1] * p.width, 0.22 * p.height, p.width, p.height / 2, \"CREATIVE TECHNOLOGIST\\nEDUCATOR\\nARTIST\", font_sizes.medium));\n\n        animation_states = [\n            {\n                \"start_time\": 500,\n                \"duration\": 1000,\n                \"idx\": 0,\n                \"fn\": intro_texts[0].renderSequentialRandom.bind(intro_texts[0]),\n                \"args\": [],\n                \"persist\": true,\n            },\n            {\n                \"start_time\": 3000,\n                \"duration\": 1000,\n                \"idx\": 0,\n                \"fn\": intro_texts[0].renderTransition.bind(intro_texts[0]),\n                \"args\": [\"HELLO, FRIEND.\", \"My name is Benjamin Lappalainen\"],\n                \"persist\": true,\n            },\n            {\n                \"start_time\": 4000,\n                \"duration\": 500,\n                \"idx\": 1,\n                \"fn\": intro_texts[1].renderSequentialRandom.bind(intro_texts[1]),\n                \"args\": [],\n                \"persist\": true,\n            },\n            {\n                \"start_time\": 4750,\n                \"duration\": 2000,\n                \"idx\": 2,\n                \"fn\": intro_texts[2].renderSequentialRandom.bind(intro_texts[2]),\n                \"args\": [],\n                \"persist\": true,\n            },\n            {\n                \"start_time\": 7250,\n                \"duration\": 1000,\n                \"idx\": 2,\n                \"fn\": intro_texts[2].renderTransition.bind(intro_texts[2]),\n                \"args\": [\"CREATIVE TECHNOLOGIST\\nEDUCATOR\\nARTIST\", \"CREATIVE TECHNOLOGIST\\nEDUCATOR\\nARTIST\\nand more...\"],\n                \"persist\": true,\n            },\n            {\n                \"start_time\": 5000,\n                \"duration\": 1000,\n                \"idx\": 0,\n                \"fn\": intro_texts[0].renderTransition.bind(intro_texts[0]),\n                \"args\": [\"My name is Benjamin Lappalainen\", \"Benjamin Lappalainen\"],\n                \"persist\": true,\n            },\n            {\n                \"start_time\": 7000,\n                \"duration\": 250,\n                \"idx\": 0,\n                \"fn\": intro_texts[0].renderTransition.bind(intro_texts[0]),\n                \"args\": [\"Benjamin Lappalainen\", \"BLAP\"],\n                \"persist\": true,\n            },\n            {\n                \"start_time\": 7500,\n                \"duration\": 250,\n                \"idx\": 0,\n                \"fn\": intro_texts[0].renderTransition.bind(intro_texts[0]),\n                \"args\": [\"BLAP\", \"BLAP64\"],\n                \"persist\": true,\n            },\n            {\n                \"start_time\": 4000,\n                \"duration\": 1000,\n                \"idx\": 3,\n                \"fn\": setUIOpacity,\n                \"args\": [],\n                \"persist\": false,\n            }\n        ];\n        animation_manager = new AnimationManager(animation_states);\n\n        // Skip animations if requested\n        if (skipAnimations) {\n            // Set final states immediately\n            intro_texts[0].t = \"BLAP64\";\n            intro_texts[1].t = \"I play many roles:\";\n            intro_texts[2].t = \"CREATIVE TECHNOLOGIST\\nEDUCATOR\\nARTIST\\nand more...\";\n            ui_opacity = 255;\n            animation_manager.t = 999999;\n        }\n\n        window.addEventListener(\"focus\", (event) => {\n            if (p.millis() > 5000){\n                setUIOpacity(1);\n            }\n        });\n\t}\n\n\tp.draw = function() {\n\t    // deltaTime allows us to be framerate agnostic for animation speed\n\t\tif (!mobile){\n            smoothX = smoothFollow(p.mouseX, smoothX, 0.003*p.deltaTime);\n            smoothY = smoothFollow(p.mouseY, smoothY, 0.003*p.deltaTime);\n\t\t} else {\n            smoothX = p.width * (0.5 + 0.2 * p.cos(0.0007 * p.millis()));\n            smoothY = p.height * (0.75 + 0.2 * p.sin(0.0007 * p.millis()));\n\t\t}\n\t\tp.clear();\n\t\tp.background(23);\n        p.textAlign(p.CENTER, p.CENTER);\n        ui.forEach((ui_element) => {\n            const d = ui_element.dist(smoothX, smoothY);\n            ui_element.cs.x = easeInCubic(p.map(d, 0, 0.5*p.width, 1, 0));\n            ui_element.cs.y = easeInCubic(p.map(d, 0, 0.5*p.width, 1, 0));\n            p.strokeWeight(1 + 0.015*short*easeInCubic(p.map(d, 0, 0.5*p.width, 1, 0, true)));\n            p.noFill();\n            if (ui_element.contains(p.mouseX, p.mouseY)){\n                p.stroke(230, 20, 20, ui_opacity);\n            } else {\n                p.stroke(230, ui_opacity);\n            }\n            ui_element.render();\n\n            // Text rendering\n            p.noStroke();\n            p.textFont('BPdotsSquareVF', {\n                fontVariationSettings: `wght ${p.map(d/p.width, 1, 0, 100, 900, true)}`\n            });\n            if (ui_element.contains(p.mouseX, p.mouseY)){\n                p.fill(230, 20, 20, ui_opacity);\n            } else {\n                p.fill(230, ui_opacity);\n            }\n            ui_element.textWriter.renderSequentialRandom(p.map(d, 100, 0.5*p.width, 1, 0, true));\n        });\n        p.noFill();\n        p.stroke(230);\n        p.strokeWeight(2);\n        p.noStroke();\n        p.fill(230);\n        p.textAlign(p.LEFT, p.TOP);\n        p.textFont('BPdotsSquareVF', {\n            fontVariationSettings: `wght 900`\n        });\n        animation_manager.execute(p);\n\n        // Update cursor based on hover state\n        updateCursor(p, p.mouseX, p.mouseY, ui);\n\t}\n\n\tp.mousePressed = function(event){\n\t    if (event && event.button !== 0) {\n            return;\n        }\n\t    if (ui_opacity < 128){\n            return;\n\t\t}\n        const ANIMATION_DELAY = 500;\n        ui.forEach((ui_element, index) => {\n\t\t\tif (ui_element.contains(p.mouseX, p.mouseY)){\n\t\t\t\t// Navigate based on which UI element was clicked\n\t\t\t\tif (window.appRouter) {\n\t\t\t\t\tswitch(index) {\n\t\t\t\t\t\tcase 0: // First button - INTERACTIVE\n\t\t\t\t\t\t    setTimeout(() => {\n    \t\t\t\t\t\t\twindow.appRouter.navigate('/interactive');\n    \t\t\t\t\t\t}, ANIMATION_DELAY);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 1: // Second button - PHOTO\n\t\t\t\t\t\t\t// Add photo route when available\n\t\t\t\t\t\t\tconsole.log('Photo section coming soon!');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2: // Third button - ABOUT\n    \t\t\t\t\t\tsetTimeout(() => {\n    \t\t\t\t\t\t\twindow.appRouter.navigate('/about');\n    \t\t\t\t\t\t}, ANIMATION_DELAY);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n                return;\n\t\t\t}\n        });\n\t}\n\n\t// Enhanced windowResized function that automatically updates all UI elements\n\t// Maintains proportional positioning and sizing based on new canvas dimensions\n\t// Preserves animation states when not skipping animations\n\tp.windowResized = function windowResized() {\n        const s = getViewportSize();\n        p.resizeCanvas(s.width, s.height);\n        short = p.min(s.width, s.height);\n        mobile = widthCheck(p.width);\n\n        // Update font sizes based on new dimensions\n        font_sizes = getFontSizes(p.width, p.height);\n\n        // Update padding based on new width\n        let padding = [0.05, 0.15];\n        if (mobile){\n            padding = [0.025, 0.05];\n        }\n        // Clear and recreate UI elements with new proportional positions\n        // UI elements: corner box, arc, and triangle buttons at 25%, 50%, 75% width\n        ui.length = 0;\n        const s_font = Math.max(0.022*p.width, 32);\n        ui.push(new UICornerBoxButton(p, 0.25*p.width, 0.7*p.height, 0.26*short, 0.26*short, 0.01*p.width, 0.01*p.width, \"INTERACTIVE\\nMEDIA\", s_font));\n\t\tui.push(new UIArcButton(p, 0.5*p.width, 0.7*p.height, 0.3*short, 0.3*short, 0.01*p.width, 0.01*p.width, \"PHOTO\", s_font));\n\t\tui.push(new UITriangleButton(p, 0.75*p.width, 0.35*p.height, 0.2*short, 0.2*short, 0.01*p.width, 0.01*p.width, -0.5*p.PI, \"ABOUT\", s_font));\n\t\tui.push(new UIHexButton(p, 0.75*p.width, 0.7*p.height, 0.3*short, 0.3*short, 0.01*p.width, 0.01*p.width, \"COLLECT\", s_font));\n\n        // Apply quadratic curve layout to UI elements\n        layoutUI();\n\n\n        // Update intro text elements positions and sizes\n        if (skipAnimations) {\n            // Preserve final states when skipping animations\n            intro_texts.length = 0;\n            intro_texts.push(new TextWriter(p, padding[0] * p.width, padding[0] * p.width, 0.8*p.width, p.height / 2, \"BLAP64\", font_sizes.large));\n            intro_texts.push(new TextWriter(p, padding[1] * p.width, 0.18 * p.height, p.width / 2, p.height / 2, \"I play many roles:\", font_sizes.small));\n            intro_texts.push(new TextWriter(p, padding[1] * p.width, 0.22 * p.height, p.width, p.height / 2, \"CREATIVE TECHNOLOGIST\\nEDUCATOR\\nARTIST\\nand more...\", font_sizes.medium));\n        } else {\n            // Update positions but preserve current animation states and text content\n            intro_texts[0].p.x = padding[0] * p.width;\n            intro_texts[0].p.y = padding[0] * p.width;\n            intro_texts[0].s.x = 0.8*p.width;\n            intro_texts[0].s.y = p.height / 2;\n            intro_texts[0].size = font_sizes.large;\n\n            intro_texts[1].p.x = padding[1] * p.width;\n            intro_texts[1].p.y = 0.18 * p.height;\n            intro_texts[1].s.x = p.width / 2;\n            intro_texts[1].s.y = p.height / 2;\n            intro_texts[1].size = font_sizes.small;\n\n            intro_texts[2].p.x = padding[1] * p.width;\n            intro_texts[2].p.y = 0.22 * p.height;\n            intro_texts[2].s.x = p.width;\n            intro_texts[2].s.y = p.height / 2;\n            intro_texts[2].size = font_sizes.medium;\n        }\n     };\n\n\n\n    function setUIOpacity(v) {\n        ui_opacity = 255*v;\n    }\n\n    // Layout UI elements along a quadratic curve going up towards the right\n    function layoutUI() {\n        if (ui.length === 0) return;\n\n        if (mobile) {\n            // Mobile layout: arrange in 2x2 grid in lower third of screen\n            const gridCenterX = 0.5 * p.width;\n            const gridCenterY = 0.7 * p.height; // Lower third of screen\n            const gridSpacing = 0.45 * p.width; // Spacing between grid positions\n\n            // Grid positions: 2x2 layout\n            const gridPositions = [\n                { x: gridCenterX - gridSpacing/2, y: gridCenterY - gridSpacing/2 }, // Top-left\n                { x: gridCenterX + gridSpacing/2, y: gridCenterY - gridSpacing/2 }, // Top-right\n                { x: gridCenterX - gridSpacing/2, y: gridCenterY + gridSpacing/2 }, // Bottom-left\n                { x: gridCenterX + gridSpacing/2, y: gridCenterY + gridSpacing/2 }  // Bottom-right\n            ];\n\n            // Position UI elements in grid\n            for (let i = 0; i < ui.length; i++) {\n                const pos = gridPositions[i % gridPositions.length]; // Handle more than 4 elements\n\n                // Update UI element position\n                ui[i].p.x = pos.x;\n                ui[i].p.y = pos.y;\n\n                // Update corresponding TextWriter position\n                ui[i].textWriter.p.x = pos.x;\n                ui[i].textWriter.p.y = pos.y;\n            }\n        } else {\n            // Desktop layout: quadratic curve\n            // Define curve parameters - curve goes from bottom-left to top-right\n            const startX = 0.15 * p.width;  // Start X position (15% from left)\n            const startY = 0.75 * p.height; // Start Y position (75% from top, near bottom)\n            const endX = 0.85 * p.width;    // End X position (85% from left)\n            const endY = 0.2 * p.height;    // End Y position (20% from top, near top)\n\n            // Quadratic curve control point to create convex upward arc\n            const controlX = 0.6 * p.width;  // Control point X\n            const controlY = 0.65 * p.height; // Control point Y (creates convex curve)\n\n            // Calculate positions for each UI element along the curve\n            for (let i = 0; i < ui.length; i++) {\n                // Parameter t goes from 0 to 1 along the curve\n                const t = ui.length > 1 ? i / (ui.length - 1) : 0;\n\n                // Quadratic Bezier curve formula: P(t) = (1-t)²P₀ + 2(1-t)tP₁ + t²P₂\n                const oneMinusT = 1 - t;\n                const x = oneMinusT * oneMinusT * startX +\n                         2 * oneMinusT * t * controlX +\n                         t * t * endX;\n                const y = oneMinusT * oneMinusT * startY +\n                         2 * oneMinusT * t * controlY +\n                         t * t * endY;\n\n                // Update UI element position\n                ui[i].p.x = x;\n                ui[i].p.y = y;\n\n                // Update corresponding TextWriter position\n                ui[i].textWriter.p.x = x;\n                ui[i].textWriter.p.y = y;\n            }\n        }\n    }\n};\n\nexport const homeSketch = (node, options = {}) => {\n    return new p5((p) => sketch(p, options), node);\n};\n","import { getViewportSize } from \"../../utils\";\n\nexport const sketch = function (p) {\n    let fbo = undefined;\n    let short = 128;\n\n    p.setup = function setup() {\n        p.noCanvas();\n        p.pixelDensity(1);\n        const s = getViewportSize();\n        p.createCanvas(s.width, s.height, p.WEBGL);\n        // Options for creating our framebuffer, width and height relative to the size of our canvas determine the pixelation appearance\n        const options = {\n            width: 128,\n            height: 128,\n            textureFiltering: p.NEAREST, // Required to prevent interpolation (blurring) when we upscale the image. Gives the pixelated effect that we're going for\n        };\n        // Disable p5's smoothing\n        p.noSmooth();\n        p.ellipseMode(p.CENTER);\n        short = p.min(s.width, s.height);\n        // Make the framebuffer\n        fbo = p.createFramebuffer(options);\n        // p5 in instance mode doesn't seem to work well with elements in a shadow root and doesn't remove the \"p5_loading\" div by itself\n        let bg = document.getElementById(\"bg\");\n        let loading_div = bg.shadowRoot.getElementById(\"p5_loading\");\n        if (loading_div) loading_div.remove();\n    };\n\n    p.draw = function draw() {\n        p.clear();\n        fbo.begin(); // Begin drawing stuff in the framebuffer\n        p.noFill();\n        p.stroke(200, 20, 20);\n        p.strokeWeight(p.abs(p.sin(p.frameCount / 42)));\n        p.clear();\n        p.rotateX(p.frameCount / 50);\n        p.rotateY(p.frameCount / 200);\n        p.circle(0, 0, 64);\n        p.rotateY(p.PI / 2);\n        p.circle(0, 0, 64);\n        fbo.end(); // Finish drawing stuff in the framebuffer\n        // Render an image of the framebuffer, centering and stretching it to the size of the canvas\n        p.image(fbo, -short / 2, -short / 2, short, short);\n    };\n\n    p.windowResized = function windowResized() {\n        const s = getViewportSize();\n        p.resizeCanvas(s.width, s.height);\n        short = p.min(s.width, s.height);\n    };\n\n\n};\n\nexport const oopsSketch = (node) => {\n    return new p5(sketch, node);\n};\n","import { getViewportSize, UITriangleButton, easeInCubic, smoothFollow, updateCursor, widthCheck } from \"../../utils\";\n\nexport const sketch = function (p) {\n    let ui = [];\n    let short = 128;\n    let smoothX = 0;\n    let smoothY = 0;\n    let mobile = false;\n    let cx, cy, r;\n\n    p.setup = function setup() {\n        p.noCanvas();\n        p.pixelDensity(1);\n        const s = getViewportSize();\n        mobile = widthCheck(s.width);\n        p.createCanvas(s.width, s.height);\n        short = p.min(s.width, s.height);\n        cx = 0.5 * p.width;\n        cy = mobile ? 0.5 * p.height : 0.6 * p.height;\n        r = 0.2 * short;\n        layoutUI();\n        p.background(23);\n        p.textAlign(p.CENTER, p.CENTER);\n        p.strokeCap(p.PROJECT);\n        // p5 in instance mode doesn't seem to work well with elements in a shadow root and doesn't remove the \"p5_loading\" div by itself\n        let bg = document.getElementById(\"bg\");\n        let loading_div = bg.shadowRoot.getElementById(\"p5_loading\");\n        if (loading_div) loading_div.remove();\n    };\n\n    p.draw = function draw() {\n        p.background(23);\n        if (!mobile){\n            smoothX = smoothFollow(p.mouseX, smoothX, 0.003*p.deltaTime);\n            smoothY = smoothFollow(p.mouseY, smoothY, 0.003*p.deltaTime);\n        } else {\n            smoothX = p.width * (0.5 + 0.2 * p.cos(-p.PI/2 + 0.001 * p.millis()));\n            smoothY = p.height * (0.5 + 0.2 * p.sin(-p.PI / 2 + 0.001 * p.millis()));\n        }\n\n        p.noFill();\n        p.stroke(230);\n        p.strokeWeight(1);\n        ui.forEach((ui_element) => {\n            const d = ui_element.dist(smoothX, smoothY);\n            ui_element.cs.x = easeInCubic(p.map(d, 0, 0.5*p.width, 1, 0));\n            ui_element.cs.y = easeInCubic(p.map(d, 0, 0.5*p.width, 1, 0));\n            //p.strokeWeight(1 + 0.015*short*easeInCubic(p.map(l, 0, 0.5*p.width, 1, 0, true)));\n            p.noFill();\n            if (ui_element.contains(p.mouseX, p.mouseY)){\n                p.stroke(230, 20, 20);\n            } else {\n                p.stroke(230);\n            }\n            ui_element.renderTriangle();\n\n            // Text rendering\n            p.noStroke();\n            p.textFont('BPdotsSquareVF', {\n                fontVariationSettings: `wght ${p.map(d/p.width, 1, 0, 100, 900, true)}`\n            });\n            if (ui_element.contains(p.mouseX, p.mouseY)){\n                p.fill(230, 20, 20);\n            } else {\n                p.fill(230);\n            }\n            ui_element.textWriter.renderSequentialRandom(p.map(d, 100, 0.5*p.width, 1, 0, true));\n        });\n        renderDecor();\n\n        // Update cursor based on hover state\n        updateCursor(p, p.mouseX, p.mouseY, ui);\n    };\n\n    p.windowResized = function windowResized() {\n        const s = getViewportSize();\n        mobile = widthCheck(s.width);\n        p.resizeCanvas(s.width, s.height);\n        short = p.min(s.width, s.height);\n        cx = 0.5*p.width;\n        cy = 0.6 * p.height;\n        r = 0.2 * short;\n        layoutUI();\n    };\n\n    p.mousePressed = function(event){\n        if (event && event.button !== 0) {\n            return;\n        }\n        const ANIMATION_DELAY = 500;\n        ui.forEach((ui_element, index) => {\n\t\tif (ui_element.contains(p.mouseX, p.mouseY)){\n\t\t\t// Navigate based on which UI element was clicked\n\t\t\tif (window.appRouter) {\n\t\t\t\tswitch(index) {\n\t\t\t\t\tcase 0: // Projects and Installations\n\t\t\t\t\t    setTimeout(() => {\n \t\t\t\t\t\t\twindow.appRouter.navigate('/interactive/live');\n  \t\t\t\t\t\t}, ANIMATION_DELAY);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1: // Physical Artifacts\n\t\t\t\t\t\t// Add photo route when available\n\t\t\t\t\t\tconsole.log('PHYSICAL ARTIFACTS COMING SOON');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2: // Web art\n      \t\t\t\t\t\tsetTimeout(() => {\n     \t\t\t\t\t\t\twindow.appRouter.navigate('/about');\n      \t\t\t\t\t\t}, ANIMATION_DELAY);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n                return;\n\t\t}\n        });\n\t}\n\n    function layoutUI(){\n        ui.length = 0;\n        const s_font = mobile ? 18 : Math.max(0.022*p.width, 32);\n        ui.push(new UITriangleButton(p, cx, cy - r, 0.1*short, 0.1*short, 0.01*p.width, 0.01*p.width, -0.5*p.PI, \"LIVE\\nEXPERIENCES\", s_font));\n        ui[0].setTextOffset(0, -0.9*r);\n        ui.push(new UITriangleButton(p, cx - r*p.cos(p.PI/6), cy + r*p.sin(p.PI/6), 0.1*short, 0.1*short, 0.01*p.width, 0.01*p.width, -0.5*p.PI, \"PHYSICAL\\nARTIFACTS\", s_font));\n        ui[1].setTextOffset(-0.95*r*p.cos(p.PI/6), 1.15*r*p.sin(p.PI/6));\n        ui.push(new UITriangleButton(p, cx + r*p.cos(p.PI/6), cy + r*p.sin(p.PI/6), 0.1*short, 0.1*short, 0.01*p.width, 0.01*p.width, -0.5*p.PI, \"WEB\\nEXPERIENCES\", s_font));\n        ui[2].setTextOffset(0.95*r*p.cos(p.PI/6), 1.15*r*p.sin(p.PI/6));\n    }\n\n    function renderDecor(){\n        const t = 0.0003 * p.millis();\n        p.noFill();\n        p.stroke(230);\n        p.strokeWeight(1);\n        let m = p.createVector(smoothX, smoothY);\n        let c = p.createVector(cx, cy);\n        let new_v = p5.Vector.sub(m, c);\n        const h = new_v.heading();\n        let new_cx = cx + 0.1 * p.min(new_v.mag(), 3*r) * p.cos(h);\n        let new_cy = cy + 0.1 * p.min(new_v.mag(), 3*r) * p.sin(h);\n        p.circle(new_cx, new_cy, 0.5 * r);\n        let a_mod = -h;\n        let a0 = a_mod + zcn(t);\n        let a1 = 2*p.PI / 3 + a_mod + zcn(t);\n        let a2 = 4 * p.PI / 3 + a_mod + zcn(t);\n        let c00 = radialToCartesian(0.2 * r, a0);\n        let c01 = radialToCartesian(0.3 * r, a0);\n        let c10 = radialToCartesian(0.2 * r, a1);\n        let c11 = radialToCartesian(0.3 * r, a1);\n        let c20 = radialToCartesian(0.2 * r, a2);\n        let c21 = radialToCartesian(0.3 * r, a2);\n        p.line(new_cx + c00.x, new_cy + c00.y, new_cx + c01.x, new_cy + c01.y);\n        p.line(new_cx + c10.x, new_cy + c10.y, new_cx + c11.x, new_cy + c11.y);\n        p.line(new_cx + c20.x, new_cy + c20.y, new_cx + c21.x, new_cy + c21.y);\n        a_mod = p.abs(a_mod);\n        for (let i = 0; i < 3; i++){\n            let ad = p.PI * zcn(0.1 * a_mod + 0.0003 * p.millis());\n            a0 = i * p.TWO_PI / 3 + 0.6 * p.PI / 6 + a_mod + ad;\n            a1 = i * p.TWO_PI / 3 + 1.4 * p.PI / 6 + a_mod + ad;\n            c00 = radialToCartesian(0.5*r, a0);\n            c01 = radialToCartesian(0.5*r, a1);\n            p.line(new_cx + c00.x, new_cy + c00.y, new_cx + c01.x, new_cy + c01.y);\n            let lm = (0.02 * a_mod/p.PI) + 0.02;\n            let rmi = (0.5 - lm) * r;\n            let rmo = (0.5 + lm) * r;\n            c00 = radialToCartesian(rmi, a0);\n            c01 = radialToCartesian(rmo, a0);\n            p.line(new_cx + c00.x, new_cy + c00.y, new_cx + c01.x, new_cy + c01.y);\n            c00 = radialToCartesian(rmi, a1);\n            c01 = radialToCartesian(rmo, a1);\n            p.line(new_cx + c00.x, new_cy + c00.y, new_cx + c01.x, new_cy + c01.y);\n        }\n\n    }\n\n    function radialToCartesian(r, a){\n        return { x: r * p.cos(a), y: -r * p.sin(a) };\n    }\n\n    function zcn(x=0, y=0, z=0){\n        return 2*(p.noise(x, y, z)-0.5);\n    }\n};\n\nexport const codeartSketch = (node) => {\n    return new p5(sketch, node);\n};\n","import { getViewportSize, UIPlanetButton, smoothFollow, loadGoogleFontSet, widthCheck, updateCursor, getMediaPath, isVideoFile, calculateCropDimensions, daysSince, radialToCartesian } from \"../../utils\";\nimport { projects, findProjectBySlug, getProjectIndexBySlug } from \"./project-details\";\n\nexport const sketch = function (p, options = {}) {\n    let short = 128;\n    let smoothX = 0;\n    let smoothY = 0;\n    let smoothV = p.createVector(smoothX, smoothY);\n    let mobile = false;\n    let planetButtons = [];\n    let activeInfoCard = null;\n    let infoCardAlpha = 0;\n    let infoCardAnimationStart = 0;\n    let infoCardAnimating = false;\n    let targetAlpha = 0;\n    let galleryScrollX = 0;\n    let targetGalleryScrollX = 0;\n    let galleryDragging = false;\n    let galleryDragStartX = 0;\n    let galleryStartScrollX = 0;\n    let loadedMedia = new Map();\n    let expandedMediaIndex = null;\n    let expandedMediaAlpha = 0;\n    let expandedMediaAnimating = false;\n    let expandedMediaAnimationStart = 0;\n    let targetExpandedAlpha = 0;\n    let nativeVideoElement = null;\n    let pendingProjectSlug = null;\n    let layoutInitialized = false;\n    let frameCount = 0;\n    let currentPath = null;\n\n    // Interface data\n    let sols = 0;\n\n    // Mobile sequential preview variables\n    let currentPreviewIndex = 0;\n    let previewStartTime = 0;\n    let previewDuration = 2000; // 2 seconds per preview\n    \n    // Text calculation cache for performance\n    let textCache = new Map();\n\n    // Media loading tracking to prevent duplicates\n    let mediaBeingLoaded = new Set();\n\n    // Resize throttling\n    let resizeTimeout = null;\n\n    let hashChangeHandler = null;\n\n    // Add cleanup method to be called when sketch is destroyed\n    p.cleanupSketch = function() {\n        // Clean up native video element\n        if (nativeVideoElement) {\n            nativeVideoElement.remove();\n            nativeVideoElement = null;\n        }\n\n        // Clean up any loaded video elements\n        loadedMedia.forEach((mediaData, path) => {\n            if (mediaData.type === 'video' && mediaData.element && mediaData.element.remove) {\n                mediaData.element.remove();\n            }\n        });\n        loadedMedia.clear();\n\n        // Reset state\n        activeInfoCard = null;\n        expandedMediaIndex = null;\n        infoCardAlpha = 0;\n        expandedMediaAlpha = 0;\n\n        // Re-enable browser swipe navigation\n        document.body.style.overscrollBehavior = '';\n        document.body.style.touchAction = '';\n\n        // Remove hash change listener\n        if (hashChangeHandler) {\n            window.removeEventListener('hashchange', hashChangeHandler);\n            hashChangeHandler = null;\n        }\n\n        // Don't clear session storage here - let setup function handle it for back navigation detection\n    };\n\n    // Helper functions for layout calculations\n    function getCardDimensions() {\n        const isMobile = widthCheck(p.width);\n        const cardWidth = isMobile ? p.width * 0.95 : p.width * 0.82;\n        const cardHeight = isMobile ? p.height * 0.88 : p.height * 0.82; // Increased mobile height to 0.88 (was 0.75)\n        const cardX = (p.width - cardWidth) / 2;\n        // Move mobile card much higher up since breadcrumb is now hidden, keep desktop unchanged\n        const cardY = isMobile ? (p.height - cardHeight) / 2 - 40 : (p.height - cardHeight) / 2 - 20;\n        return { width: cardWidth, height: cardHeight, x: cardX, y: cardY, isMobile };\n    }\n\n    function getGalleryLayout(cardWidth, cardHeight, cardX, cardY, isMobile) {\n        const padding = isMobile ? 20 : 24;\n        const lineHeight = isMobile ? 28 : 32;\n        const galleryY = cardY + padding + lineHeight * 5.3;\n        const galleryHeight = cardHeight * 0.35; // Slightly smaller to leave more room for text\n        return { galleryY, galleryHeight, padding, lineHeight };\n    }\n\n    function getGalleryItemDimensions(galleryHeight, isMobile) {\n        const galleryPadding = isMobile ? 8 : 10;\n        const itemHeight = galleryHeight - (2 * galleryPadding);\n        const itemWidth = itemHeight * 1.5; // 3:2 aspect ratio\n        return { itemWidth, itemHeight, galleryPadding };\n    }\n\n    function renderCloseButton(x, y, size, alpha) {\n        const padding = size * 0.25;\n\n        // Close button background\n        p.fill(50, 50, 50, 200 * (alpha / 255));\n        p.stroke(200, alpha);\n        p.strokeWeight(1);\n        p.rect(x, y, size, size);\n\n        // X symbol\n        p.stroke(200, alpha);\n        p.strokeWeight(2);\n        p.line(x + padding, y + padding, x + size - padding, y + size - padding);\n        p.line(x + size - padding, y + padding, x + padding, y + size - padding);\n    }\n\n    function renderPlayIcon(x, y, size, alpha) {\n        // Semi-transparent play button background\n        p.fill(0, 0, 0, 120 * (alpha / 255));\n        p.noStroke();\n        p.circle(x + size/2, y + size/2, size);\n\n        // Play triangle\n        p.fill(255, 255, 255, 180 * (alpha / 255));\n        const triangleSize = size * 0.35;\n        const triangleCenterX = x + size/2 + triangleSize * 0.1;\n        const triangleCenterY = y + size/2;\n        p.triangle(\n            triangleCenterX - triangleSize/2, triangleCenterY - triangleSize/2,\n            triangleCenterX - triangleSize/2, triangleCenterY + triangleSize/2,\n            triangleCenterX + triangleSize/2, triangleCenterY\n        );\n    }\n\n    function initializeLayout() {\n        const s = getViewportSize();\n        short = p.min(s.width, s.height);\n        mobile = widthCheck(s.width);\n        setupRadialLayout();\n        layoutInitialized = true;\n\n        // Reset mobile preview timing when layout changes\n        if (mobile) {\n            previewStartTime = 0;\n            currentPreviewIndex = 0;\n        }\n    }\n\n    p.setup = async function setup() {\n        p.noCanvas();\n        p.pixelDensity(1);\n        const s = getViewportSize();\n        p.createCanvas(s.width, s.height);\n        initializeLayout();\n        p.background(23);\n        p.textAlign(p.CENTER, p.CENTER);\n        p.strokeCap(p.PROJECT);\n        await loadGoogleFontSet('../../assets/fonts/BPdotsSquareVF.ttf');\n        await loadGoogleFontSet('../../assets/fonts/ZxGamut.ttf');\n        p.textFont('BPdotsSquareVF', {\n            fontVariationSettings: `wght 900`\n        });\n        // p5 in instance mode doesn't seem to work well with elements in a shadow root and doesn't remove the \"p5_loading\" div by itself\n        let bg = document.getElementById(\"bg\");\n        let loading_div = bg.shadowRoot.getElementById(\"p5_loading\");\n        if (loading_div) loading_div.remove();\n\n        // Handle direct project navigation via URL parameter\n        if (options && options.project) {\n            pendingProjectSlug = options.project;\n            currentPath = `/interactive/live/${options.project}`;\n            // Store that we have an active project\n            sessionStorage.setItem('installationsActiveProject', options.project);\n        } else {\n            currentPath = '/interactive/live';\n            // Check if we had an active project before and now we don't\n            const wasActiveProject = sessionStorage.getItem('installationsActiveProject');\n            if (wasActiveProject) {\n                // We navigated back from a project to main page - clear the storage\n                sessionStorage.removeItem('installationsActiveProject');\n                // Ensure no project opens automatically on back navigation\n                pendingProjectSlug = null;\n\n                // Initialize with info card closed\n                activeInfoCard = null;\n                infoCardAlpha = 0;\n                targetAlpha = 0;\n                infoCardAnimating = false;\n            }\n        }\n\n        // Add hash change listener to detect back navigation within the same route\n        hashChangeHandler = function(event) {\n            const newHash = window.location.hash.substr(1);\n            const cleanPath = newHash && newHash !== '' ?\n                (newHash.startsWith('/') ? newHash : '/' + newHash) : '/';\n\n            // If we're on the installations page and URL changed to just /interactive/live\n            // and we have an active info card, close it\n            if (cleanPath === '/interactive/live' && activeInfoCard !== null) {\n                closeInfoCard();\n            }\n        };\n\n        // Calculate days since project start\n        sols = daysSince('2024-08-14');\n        window.addEventListener('hashchange', hashChangeHandler);\n    };\n\n    p.draw = function draw() {\n        p.background(23);\n        frameCount++;\n\n        // Handle smooth cursor movement - mobile vs desktop\n        if (mobile && planetButtons && planetButtons.length > 0) {\n            // Mobile: Sequential preview of each planet button\n            // Initialize preview start time on first frame\n            if (previewStartTime === 0) {\n                previewStartTime = p.millis();\n            }\n\n            // Calculate which planet should be previewed based on elapsed time\n            const elapsedTime = p.millis() - previewStartTime;\n            const cyclePosition = (elapsedTime / previewDuration) % planetButtons.length;\n            const targetIndex = Math.floor(cyclePosition);\n\n            if (targetIndex !== currentPreviewIndex && targetIndex < planetButtons.length) {\n                currentPreviewIndex = targetIndex;\n            }\n\n            // Smoothly move to the current preview planet position\n            const targetPlanet = planetButtons[currentPreviewIndex];\n            if (targetPlanet) {\n                smoothX = p.constrain(smoothFollow(targetPlanet.p.x, smoothX, 0.005 * p.deltaTime), 0, p.width);\n                smoothY = p.constrain(smoothFollow(targetPlanet.p.y, smoothY, 0.005 * p.deltaTime), 0, p.height);\n            }\n        } else {\n            // Desktop: Follow mouse cursor\n            smoothX = smoothFollow(p.mouseX, smoothX, 0.003 * p.deltaTime);\n            smoothY = smoothFollow(p.mouseY, smoothY, 0.003 * p.deltaTime);\n        }\n\n        smoothV.x = smoothX;\n        smoothV.y = smoothY;\n        p.noFill();\n        p.stroke(230);\n        p.strokeWeight(1);\n        renderRadialLayout();\n        renderHUDDecorations();\n\n        // Handle pending project opening after layout is initialized and a few frames have passed\n        if (pendingProjectSlug && layoutInitialized && planetButtons && planetButtons.length > 0 && frameCount > 5) {\n            const projectIndex = getProjectIndexBySlug(pendingProjectSlug);\n            if (projectIndex !== -1 && projectIndex < planetButtons.length) {\n                openInfoCard(projectIndex);\n                pendingProjectSlug = null; // Clear the pending slug\n            } else {\n                // If project not found, clear the pending slug to avoid infinite attempts\n                pendingProjectSlug = null;\n            }\n        }\n        p.noFill();\n        p.stroke(230, 50);\n        const s = short * 0.03;\n        p.push();\n        p.translate(smoothX, smoothY);\n        p.rotate(p.TWO_PI * p.noise(smoothX / short, smoothY / short, 0.0001 * p.millis()));\n        p.circle(0, 0, 0.33 * s);\n        p.triangle(s, 0, s * p.cos(p.TWO_PI / 3), s * p.sin(p.TWO_PI / 3), s * p.cos(2 * p.TWO_PI / 3), s * p.sin(2 * p.TWO_PI / 3));\n        p.pop();\n        // Update info card animation\n        if (infoCardAnimating) {\n            const elapsed = p.millis() - infoCardAnimationStart;\n            const progress = p.constrain(elapsed / 250, 0, 1);\n            infoCardAlpha = p.lerp(infoCardAlpha, targetAlpha, progress);\n\n            if (progress >= 1) {\n                infoCardAnimating = false;\n                infoCardAlpha = targetAlpha;\n                if (targetAlpha === 0) {\n                    activeInfoCard = null;\n                }\n            }\n        }\n\n        // Update gallery scrolling\n        if (!galleryDragging) {\n            galleryScrollX = p.lerp(galleryScrollX, targetGalleryScrollX, 0.1);\n        }\n\n        // Update expanded media animation\n        if (expandedMediaAnimating) {\n            const elapsed = p.millis() - expandedMediaAnimationStart;\n            const progress = p.constrain(elapsed / 300, 0, 1);\n            expandedMediaAlpha = p.lerp(expandedMediaAlpha, targetExpandedAlpha, progress);\n\n            if (progress >= 1) {\n                expandedMediaAnimating = false;\n                expandedMediaAlpha = targetExpandedAlpha;\n                if (targetExpandedAlpha === 0) {\n                    expandedMediaIndex = null;\n                }\n            }\n        }\n\n        // Update cursor based on hover state\n        // Don't include planet buttons when info card is active\n        const hoverTargets = activeInfoCard !== null ?\n            [getCloseButtonHoverCheck(), getNavigationButtonHoverCheck()] :\n            [...planetButtons, getTextAreasHoverCheck(), getCloseButtonHoverCheck()];\n        updateCursor(p, p.mouseX, p.mouseY, ...hoverTargets);\n\n        // Render active info card\n        if (activeInfoCard !== null || infoCardAlpha > 0) {\n            renderInfoCard(projects[activeInfoCard]);\n        }\n\n        // Render expanded media overlay\n        if (expandedMediaIndex !== null || expandedMediaAlpha > 0) {\n            renderExpandedMedia();\n        }\n        \n    };\n\n    p.windowResized = function windowResized() {\n        // Throttle resize events to prevent performance issues during orientation changes\n        if (resizeTimeout) {\n            clearTimeout(resizeTimeout);\n        }\n\n        resizeTimeout = setTimeout(() => {\n            const s = getViewportSize();\n            p.resizeCanvas(s.width, s.height);\n            initializeLayout();\n            resizeTimeout = null;\n        }, 150); // Wait 150ms after resize stops\n    };\n\n    p.mousePressed = function (event) {\n        if (event && event.button !== 0) {\n            return;\n        }\n        const ANIMATION_DELAY = 500;\n\n        // Check if clicking on expanded media overlay\n        if (expandedMediaIndex !== null) {\n            const project = projects[activeInfoCard];\n            const mediaItem = project.images[expandedMediaIndex];\n            let pathString;\n            if (typeof mediaItem === 'string') {\n                pathString = mediaItem;\n            } else if (mediaItem && typeof mediaItem === 'object') {\n                pathString = mediaItem.default || mediaItem.src || mediaItem.href || mediaItem.toString();\n            } else {\n                pathString = String(mediaItem);\n            }\n\n            const isVideo = pathString.toLowerCase().match(/\\.(mp4|mov|webm|avi)(\\?.*)?$/i);\n            const isMobile = widthCheck(p.width);\n            const maxWidth = isMobile ? p.width : p.width * 0.8;\n            const maxHeight = isMobile ? p.height * 0.8 : p.height * 0.8;\n            let mediaWidth, mediaHeight;\n\n            if (isVideo) {\n                // For native videos, use standard dimensions\n                const aspectRatio = nativeVideoElement && nativeVideoElement.videoWidth && nativeVideoElement.videoHeight ?\n                    nativeVideoElement.videoWidth / nativeVideoElement.videoHeight : 16 / 9;\n\n                if (aspectRatio > maxWidth / maxHeight) {\n                    mediaWidth = maxWidth;\n                    mediaHeight = maxWidth / aspectRatio;\n                } else {\n                    mediaHeight = maxHeight;\n                    mediaWidth = maxHeight * aspectRatio;\n                }\n            } else {\n                // For images, get from loaded media\n                const mediaData = loadedMedia.get(pathString);\n                if (mediaData && mediaData.loaded) {\n                    const img = mediaData.element;\n                    const aspectRatio = img.width / img.height;\n                    if (aspectRatio > maxWidth / maxHeight) {\n                        mediaWidth = maxWidth;\n                        mediaHeight = maxWidth / aspectRatio;\n                    } else {\n                        mediaHeight = maxHeight;\n                        mediaWidth = maxHeight * aspectRatio;\n                    }\n                } else {\n                    return; // Image not ready\n                }\n            }\n\n            const mediaX = (p.width - mediaWidth) / 2;\n            const mediaY = (p.height - mediaHeight) / 2;\n\n            // Check close button (now centered below media)\n            const closeSize = isMobile ? 50 : 40;\n            const closePadding = isMobile ? 20 : 15;\n            const closeX = (p.width - closeSize) / 2; // Center horizontally\n            const closeY = mediaY + mediaHeight + closePadding;\n\n            if (p.mouseX >= closeX && p.mouseX <= closeX + closeSize &&\n                p.mouseY >= closeY && p.mouseY <= closeY + closeSize) {\n                closeExpandedMedia();\n                return;\n            }\n\n            // Native video players handle their own controls\n\n            // Click outside media and close button area closes it\n            const totalHeight = mediaHeight + closePadding + closeSize;\n            if (p.mouseX < mediaX || p.mouseX > mediaX + mediaWidth ||\n                p.mouseY < mediaY || p.mouseY > mediaY + totalHeight) {\n                closeExpandedMedia();\n                return;\n            }\n            return;\n        }\n\n\n        // Check if clicking on info card or close button\n        if (activeInfoCard !== null) {\n            const { width: cardWidth, height: cardHeight, x: cardX, y: cardY, isMobile } = getCardDimensions();\n            const closeButtonSize = isMobile ? 44 : 30;\n            const closeButtonX = cardX + cardWidth - closeButtonSize - 10;\n            const closeButtonY = cardY + 10;\n\n            // Check if clicking close button\n            if (p.mouseX >= closeButtonX && p.mouseX <= closeButtonX + closeButtonSize &&\n                p.mouseY >= closeButtonY && p.mouseY <= closeButtonY + closeButtonSize) {\n                closeInfoCard();\n                return;\n            }\n\n            // Check if clicking navigation arrows\n            if (projects.length > 1) {\n                const arrowSize = isMobile ? 50 : 40;\n                const arrowPadding = isMobile ? 20 : 15;\n                const arrowY = cardY + cardHeight + arrowPadding;\n\n                // Use new arrow positioning logic (same as in renderNavigationArrows)\n                const counterWidth = 80;\n                const totalWidth = arrowSize * 2 + counterWidth + arrowPadding * 2;\n                const startX = cardX + (cardWidth - totalWidth) / 2;\n\n                const leftArrowX = startX;\n                const rightArrowX = startX + arrowSize + counterWidth + arrowPadding * 2;\n\n                // Check left arrow (previous with wraparound)\n                if (p.mouseX >= leftArrowX && p.mouseX <= leftArrowX + arrowSize &&\n                    p.mouseY >= arrowY && p.mouseY <= arrowY + arrowSize) {\n                    const prevIndex = activeInfoCard === 0 ? projects.length - 1 : activeInfoCard - 1;\n                    navigateToProject(prevIndex);\n                    return;\n                }\n\n                // Check right arrow (next with wraparound)\n                if (p.mouseX >= rightArrowX && p.mouseX <= rightArrowX + arrowSize &&\n                    p.mouseY >= arrowY && p.mouseY <= arrowY + arrowSize) {\n                    const nextIndex = activeInfoCard === projects.length - 1 ? 0 : activeInfoCard + 1;\n                    navigateToProject(nextIndex);\n                    return;\n                }\n            }\n\n            // Check if clicking in gallery area\n            const project = projects[activeInfoCard];\n            if (project.images && project.images.length > 0) {\n                const padding = isMobile ? 20 : 24;\n                const lineHeight = isMobile ? 28 : 32;\n                const galleryY = cardY + padding + lineHeight * 5.3; // Approximate gallery Y position\n                const galleryHeight = cardHeight * 0.35;\n\n                if (p.mouseX >= cardX + padding && p.mouseX <= cardX + cardWidth - padding &&\n                    p.mouseY >= galleryY && p.mouseY <= galleryY + galleryHeight) {\n                    // Start gallery dragging\n                    galleryDragging = true;\n                    galleryDragStartX = p.mouseX;\n                    galleryStartScrollX = galleryScrollX;\n                    return;\n                }\n            }\n\n            // Check if clicking outside the card\n            if (p.mouseX < cardX || p.mouseX > cardX + cardWidth ||\n                p.mouseY < cardY || p.mouseY > cardY + cardHeight) {\n                closeInfoCard();\n                return;\n            }\n\n            // If clicking inside the card (but not close button), do nothing\n            return;\n        }\n\n        // Check planet buttons and their text areas\n        planetButtons.forEach((planetButton, index) => {\n            const project = projects[index];\n            const planetClicked = planetButton.contains(p.mouseX, p.mouseY);\n            const textClicked = isHoveringText(planetButton, p.mouseX, p.mouseY, project.name);\n\n            if (planetClicked || textClicked) {\n                openInfoCard(index);\n                // Update URL to include project slug\n                if (project && project.slug && window.appRouter) {\n                    const newPath = `/interactive/live/${project.slug}`;\n                    // Only update if the current path is different\n                    if (window.location.hash !== `#${newPath}`) {\n                        window.history.pushState(null, '', `#${newPath}`);\n                        currentPath = newPath;\n                    }\n                }\n                return;\n            }\n        });\n    }\n\n    p.mouseDragged = function () {\n        if (galleryDragging && activeInfoCard !== null) {\n            const dragDistance = p.mouseX - galleryDragStartX;\n            galleryScrollX = galleryStartScrollX + dragDistance;\n            targetGalleryScrollX = galleryScrollX;\n        }\n    }\n\n    p.mouseReleased = function () {\n        if (galleryDragging) {\n            const dragDistance = Math.abs(p.mouseX - galleryDragStartX);\n            galleryDragging = false;\n\n            // If minimal drag (< 5 pixels), treat as a click for media expansion\n            if (dragDistance < 5 && activeInfoCard !== null) {\n                const project = projects[activeInfoCard];\n                if (project && project.images && project.images.length > 0) {\n                    const { width: cardWidth, height: cardHeight, x: cardX, y: cardY, isMobile } = getCardDimensions();\n                    const { galleryY, padding, lineHeight } = getGalleryLayout(cardWidth, cardHeight, cardX, cardY, isMobile);\n\n                    // Use EXACT same galleryHeight calculation as main rendering\n                    const galleryHeight = isMobile ? cardHeight * 0.3 : cardHeight * 0.4;\n\n                    // Use EXACT same calculations as renderGallery for consistent click detection\n                    const galleryAreaPadding = isMobile ? 8 : 10; // This is the 'padding' variable in rendering\n                    const itemHeight = galleryHeight - (2 * galleryAreaPadding);\n                    const itemWidth = itemHeight * 1.5; // 3:2 aspect ratio\n\n                    // Gallery area coordinates (same as rendering: x=cardX+padding, y=galleryY)\n                    const galleryX = cardX + padding; // Card padding\n                    const galleryY_coords = galleryY;\n\n                    // Start coordinates within gallery area (same as rendering: startX = x + padding)\n                    const startX = galleryX + galleryAreaPadding; // Gallery area left padding\n                    const startY = galleryY_coords + galleryAreaPadding; // Gallery area top padding\n\n                    // Check if clicking on a specific media item\n                    for (let i = 0; i < project.images.length; i++) {\n                        const itemX = startX + i * (itemWidth + galleryAreaPadding) + galleryScrollX;\n                        if (p.mouseX >= itemX && p.mouseX <= itemX + itemWidth &&\n                            p.mouseY >= startY && p.mouseY <= startY + itemHeight) {\n                            openExpandedMedia(i);\n                            return;\n                        }\n                    }\n                }\n            }\n\n            // Apply momentum/easing to final scroll position\n            const project = projects[activeInfoCard];\n            if (project && project.images && project.images.length > 0) {\n                const { width: cardWidth, height: cardHeight } = getCardDimensions();\n                const isMobile = widthCheck(p.width);\n                const padding = isMobile ? 20 : 24;\n                const galleryWidth = cardWidth - 2 * padding;\n\n                // Use EXACT same galleryHeight as main rendering\n                const galleryHeight = isMobile ? cardHeight * 0.3 : cardHeight * 0.4;\n\n                // Use same calculations as rendering and click detection\n                const galleryAreaPadding = isMobile ? 8 : 10;\n                const itemHeight = galleryHeight - (2 * galleryAreaPadding);\n                const itemWidth = itemHeight * 1.5; // 3:2 aspect ratio\n                const totalWidth = project.images.length * (itemWidth + galleryAreaPadding) - galleryAreaPadding;\n                const maxScroll = p.max(0, totalWidth);\n                targetGalleryScrollX = p.constrain(targetGalleryScrollX, -maxScroll, 0);\n            }\n        }\n    }\n\n    p.mouseWheel = function (event) {\n        if (activeInfoCard !== null) {\n            const project = projects[activeInfoCard];\n            if (project && project.images && project.images.length > 0) {\n                // Check if mouse is over gallery area\n                const { width: cardWidth, height: cardHeight, x: cardX, y: cardY, isMobile } = getCardDimensions();\n                const { galleryY, padding, lineHeight } = getGalleryLayout(cardWidth, cardHeight, cardX, cardY, isMobile);\n\n                // Use EXACT same galleryHeight as main rendering\n                const galleryHeight = isMobile ? cardHeight * 0.3 : cardHeight * 0.4;\n\n                if (p.mouseX >= cardX + padding && p.mouseX <= cardX + cardWidth - padding &&\n                    p.mouseY >= galleryY && p.mouseY <= galleryY + galleryHeight) {\n\n                    const scrollAmount = event.delta * 2;\n                    targetGalleryScrollX -= scrollAmount;\n\n                    // Constrain scroll bounds using same calculations as rendering\n                    const galleryAreaPadding = isMobile ? 8 : 10;\n                    const itemHeight = galleryHeight - (2 * galleryAreaPadding);\n                    const itemWidth = itemHeight * 1.5; // 3:2 aspect ratio\n                    const totalWidth = project.images.length * (itemWidth + galleryAreaPadding) - galleryAreaPadding;\n                    const maxScroll = p.max(0, totalWidth);\n                    targetGalleryScrollX = p.constrain(targetGalleryScrollX, -maxScroll, 0);\n\n                    return false; // Prevent page scroll\n                }\n            }\n        }\n    }\n\n\n    function openInfoCard(index) {\n        activeInfoCard = index;\n        targetAlpha = 255;\n        infoCardAnimationStart = p.millis();\n        infoCardAnimating = true;\n        galleryScrollX = 0;\n        targetGalleryScrollX = 0;\n        galleryDragging = false;\n        loadMediaForProject(projects[index]);\n\n        // Disable browser swipe navigation while info card is open\n        document.body.style.overscrollBehavior = 'none';\n        document.body.style.touchAction = 'none';\n\n        // Lock orientation on mobile to prevent performance issues\n        if (screen.orientation && screen.orientation.lock) {\n            try {\n                screen.orientation.lock('portrait-primary').catch(() => {\n                    // Silently fail if orientation lock isn't supported\n                });\n            } catch (e) {\n                // Silently fail if orientation lock isn't supported\n            }\n        }\n\n        // Hide breadcrumb navigation on mobile when infoCard opens\n        if (widthCheck(p.width)) {\n            const breadcrumbContainer = document.getElementById(\"breadcrumb-container\");\n            if (breadcrumbContainer) {\n                breadcrumbContainer.style.display = 'none';\n            }\n        }\n\n        // Update breadcrumb to show current project\n        const project = projects[index];\n        if (project && project.slug) {\n            import(\"../elements/breadcrumb-nav.js\").then(({ updateBreadcrumb }) => {\n                updateBreadcrumb(`/interactive/live/${project.slug}`);\n            });\n        }\n    }\n\n    function navigateToProject(newIndex) {\n        activeInfoCard = newIndex;\n        galleryScrollX = 0;\n        targetGalleryScrollX = 0;\n        galleryDragging = false;\n        loadMediaForProject(projects[newIndex]);\n\n        // Update URL and breadcrumb\n        const project = projects[newIndex];\n        if (project && project.slug) {\n            const newPath = `/interactive/live/${project.slug}`;\n            if (window.location.hash !== `#${newPath}`) {\n                window.history.pushState(null, '', `#${newPath}`);\n                currentPath = newPath;\n\n                // Update breadcrumb\n                import(\"../elements/breadcrumb-nav.js\").then(({ updateBreadcrumb }) => {\n                    updateBreadcrumb(newPath);\n                });\n            }\n        }\n    }\n\n    function closeInfoCard() {\n        targetAlpha = 0;\n        infoCardAnimationStart = p.millis();\n        infoCardAnimating = true;\n        galleryScrollX = 0;\n        targetGalleryScrollX = 0;\n        galleryDragging = false;\n\n        // Clean up any expanded media\n        if (expandedMediaIndex !== null) {\n            closeExpandedMedia();\n        }\n\n        // Re-enable browser swipe navigation when info card is closed\n        document.body.style.overscrollBehavior = '';\n        document.body.style.touchAction = '';\n\n        // Unlock orientation when closing info card\n        if (screen.orientation && screen.orientation.unlock) {\n            try {\n                screen.orientation.unlock();\n            } catch (e) {\n                // Silently fail if orientation unlock isn't supported\n            }\n        }\n\n        // Show breadcrumb navigation on mobile when infoCard closes\n        if (widthCheck(p.width)) {\n            const breadcrumbContainer = document.getElementById(\"breadcrumb-container\");\n            if (breadcrumbContainer) {\n                breadcrumbContainer.style.display = 'block';\n            }\n        }\n\n\n        // Update URL back to main installations page\n        if (window.location.hash.includes('/interactive/live/') && window.location.hash !== '#/interactive/live') {\n            window.history.pushState(null, '', '#/interactive/live');\n            currentPath = '/interactive/live';\n        }\n\n        // Update breadcrumb back to installations page\n        import(\"../elements/breadcrumb-nav.js\").then(({ updateBreadcrumb }) => {\n            updateBreadcrumb('/interactive/live');\n        });\n\n        // Clear session storage\n        sessionStorage.removeItem('installationsActiveProject');\n    }\n\n    function getCloseButtonHoverCheck() {\n        return (mouseX, mouseY) => {\n            // Check expanded media close button first (higher priority)\n            if (expandedMediaIndex !== null) {\n                const isMobileCheck = widthCheck(p.width);\n                const closeSize = isMobileCheck ? 50 : 40;\n                const closePadding = isMobileCheck ? 20 : 15;\n                const closeX = (p.width - closeSize) / 2;\n\n                // Calculate media position to get close button Y position\n                const project = projects[activeInfoCard];\n                if (project && project.images && expandedMediaIndex < project.images.length) {\n                    const mediaItem = project.images[expandedMediaIndex];\n                    let pathString = typeof mediaItem === 'string' ? mediaItem :\n                        (mediaItem && typeof mediaItem === 'object' ?\n                            mediaItem.default || mediaItem.src || mediaItem.href || mediaItem.toString() :\n                            String(mediaItem));\n\n                    const isVideo = pathString.toLowerCase().match(/\\.(mp4|mov|webm|avi)(\\?.*)?$/i);\n                    const maxWidth = isMobileCheck ? p.width : p.width * 0.8;\n                    const maxHeight = isMobileCheck ? p.height * 0.8 : p.height * 0.8;\n                    let mediaHeight;\n\n                    if (isVideo) {\n                        const aspectRatio = nativeVideoElement && nativeVideoElement.videoWidth && nativeVideoElement.videoHeight ?\n                            nativeVideoElement.videoWidth / nativeVideoElement.videoHeight : 16 / 9;\n                        if (aspectRatio > maxWidth / maxHeight) {\n                            mediaHeight = maxWidth / aspectRatio;\n                        } else {\n                            mediaHeight = maxHeight;\n                        }\n                    } else {\n                        const mediaData = loadedMedia.get(pathString);\n                        if (mediaData && mediaData.loaded && mediaData.element) {\n                            const aspectRatio = mediaData.element.width / mediaData.element.height;\n                            if (aspectRatio > maxWidth / maxHeight) {\n                                mediaHeight = maxWidth / aspectRatio;\n                            } else {\n                                mediaHeight = maxHeight;\n                            }\n                        } else {\n                            mediaHeight = maxHeight; // fallback\n                        }\n                    }\n\n                    const mediaY = (p.height - mediaHeight) / 2;\n                    const closeY = mediaY + mediaHeight + closePadding;\n\n                    return mouseX >= closeX && mouseX <= closeX + closeSize &&\n                        mouseY >= closeY && mouseY <= closeY + closeSize;\n                }\n            }\n\n            // Check info card close button\n            if (activeInfoCard !== null) {\n                const { width: cardWidth, height: cardHeight, x: cardX, y: cardY, isMobile } = getCardDimensions();\n                const closeButtonSize = isMobile ? 44 : 30;\n                const closeButtonX = cardX + cardWidth - closeButtonSize - 10;\n                const closeButtonY = cardY + 10;\n\n                return mouseX >= closeButtonX && mouseX <= closeButtonX + closeButtonSize &&\n                    mouseY >= closeButtonY && mouseY <= closeButtonY + closeButtonSize;\n            }\n            return false;\n        };\n    }\n\n\n    \n    function preCalculateTextData() {\n        textCache.clear();\n        \n        const textOffsetX = mobile ? 25 : 40;\n        const textSize = mobile ? 14 : 18;\n        \n        // Set text size for accurate width calculations\n        p.textSize(textSize);\n        \n        projects.forEach((project, index) => {\n            // Calculate text wrapping\n            const maxChars = 16;\n            const words = project.name.split(' ');\n            let lines = [];\n            let currentLine = '';\n            \n            for (const word of words) {\n                if ((currentLine + word).length > maxChars && currentLine.length > 0) {\n                    lines.push(currentLine.trim());\n                    currentLine = word + ' ';\n                } else {\n                    currentLine += word + ' ';\n                }\n            }\n            if (currentLine.length > 0) {\n                lines.push(currentLine.trim());\n            }\n            \n            // Calculate dimensions\n            const lineHeight = textSize * 1.2;\n            const totalHeight = lines.length * lineHeight;\n            \n            // Get maximum line width\n            let maxWidth = 0;\n            lines.forEach(line => {\n                const lineWidth = p.textWidth(line);\n                if (lineWidth > maxWidth) maxWidth = lineWidth;\n            });\n            \n            // Store in cache\n            textCache.set(project.name, {\n                lines,\n                totalHeight,\n                maxWidth,\n                textOffsetX,\n                textSize,\n                lineHeight\n            });\n        });\n        \n        // Expose cache globally for UIPlanetButton access\n        window.textCache = textCache;\n    }\n\n    function isHoveringText(planetButton, mouseX, mouseY, projectName) {\n        // Get cached text data\n        const cached = textCache.get(projectName);\n        if (!cached) {\n            // Fallback - should not happen if cache is properly initialized\n            return false;\n        }\n        \n        const textX = planetButton.p.x + cached.textOffsetX;\n        const textY = planetButton.p.y;\n        \n        // Define text bounding rectangle using cached values\n        const textBounds = {\n            x: textX,\n            y: textY - cached.totalHeight / 2,\n            width: cached.maxWidth,\n            height: cached.totalHeight\n        };\n\n        // Check if mouse is within text bounds\n        return mouseX >= textBounds.x && mouseX <= textBounds.x + textBounds.width &&\n               mouseY >= textBounds.y && mouseY <= textBounds.y + textBounds.height;\n    }\n\n    function setupRadialLayout() {\n        planetButtons = [];\n        \n        // Pre-calculate all text data for performance\n        preCalculateTextData();\n\n        const nodeCount = projects.length;\n        const baseRadius = mobile ? 20 : 25;\n        const textSize = mobile ? 14 : 18;\n\n        // Based on proto.js design - create concentric circles with radial positioning\n        const step = p.height / 5;\n        const centerX = p.width / 2;\n\n        for (let i = 0; i < nodeCount; i++) {\n            // Calculate position based on proto.js pattern\n            const y = p.height - 0.25 * (i + 1) * step - 0.05*step;\n            const r = 0.25 * (i + 1) * step;\n            // Calculate radial position\n            const angle = -0.75*p.PI + i*0.09;\n            const radialPos = radialToCartesian(r, angle, p);\n            const pos = p.createVector(radialPos.x + centerX, -radialPos.y + y);\n            // Position node along the radial line (upward from center)\n            const nodeX = pos.x;//centerX;\n            const nodeY = pos.y;//y - r; // Position at the top of the circle\n\n            // Position text to the right of the node with offset\n            const textOffsetX = mobile ? 25 : 40;\n            const textOffsetY = 0;\n            const planetButton = new UIPlanetButton(p, nodeX, nodeY, baseRadius, 0, p.random(p.TWO_PI), 0, [222, 200], projects[i].name, textSize, textOffsetX, textOffsetY);\n            // Add hover state tracking\n            planetButton.hoverAlpha = 0;\n            planetButton.targetHoverAlpha = 0;\n            planetButtons.push(planetButton);\n        }\n    }\n\n    function renderRadialLayout() {\n        // Based on proto.js - render concentric circles first\n        const step = p.height / 5;\n        const centerX = p.width / 2;\n\n        p.push();\n        p.stroke(222, 64);\n        p.strokeWeight(1);\n        p.noFill();\n\n        // Draw concentric circles (background)\n        for (let i = 1; i <= planetButtons.length; i++) {\n            const y = p.height - 0.25 * i * step - 0.05*step;\n            const r = 0.25 * i * step;\n            p.circle(centerX, y, 2 * r);\n        }\n\n        p.pop();\n        \n        // Render planet buttons with integrated text rendering\n        planetButtons.forEach((planetButton, index) => {\n            const project = projects[index];\n            if (!project) return;\n            planetButton.angle -= 0.01*p.noise(index);\n\n            // Handle media preview on hover (to the left of the node)\n            // On mobile, use virtual cursor position; on desktop, use actual mouse\n            const hoverX = mobile ? smoothX : p.mouseX;\n            const hoverY = mobile ? smoothY : p.mouseY;\n\n            // Check if hovering over planet button OR text area\n            const planetHovered = planetButton.contains(hoverX, hoverY);\n            const textHovered = isHoveringText(planetButton, hoverX, hoverY, project.name);\n            const isHovered = planetHovered || textHovered;\n\n            // Update hover state smoothly\n            planetButton.targetHoverAlpha = isHovered ? 1 : 0;\n            planetButton.hoverAlpha = p.lerp(planetButton.hoverAlpha, planetButton.targetHoverAlpha, isHovered ? 0.1 : 0.01);\n\n            // Create a virtual smooth vector that reflects the hover state\n            // This gives consistent distance-based effects regardless of actual cursor position\n            const hoverDistance = p.lerp(200, 0, planetButton.hoverAlpha); // 200 = far (no effect), 20 = close (full effect)\n            const virtualSmoothV = p.createVector(\n                planetButton.p.x + hoverDistance,\n                planetButton.p.y\n            );\n\n            // Render planet button with hover state-based feedback\n            planetButton.render(virtualSmoothV, short);\n\n            if (isHovered && project.images && project.images.length > 0) {\n                // Load preview media if not already loaded\n                if (!planetButton.previewMedia) {\n                    loadPreviewMedia(planetButton, project);\n                }\n\n                // Render media preview to the left of the node\n                if (planetButton.previewMedia && planetButton.previewAlpha > 0.01) {\n                    const previewSize = mobile ? 70 : 160;\n                    const previewX = planetButton.p.x - previewSize - 30; // Position to the left\n                    const previewY = planetButton.p.y - previewSize / 2;\n\n                    p.push();\n\n                    // Render media image with tint\n                    p.tint(255, planetButton.previewAlpha * 255 * 0.7); // Low opacity as requested\n\n                    // Crop from center of media to fit square\n                    const mediaWidth = planetButton.previewMedia.width;\n                    const mediaHeight = planetButton.previewMedia.height;\n                    const cropSize = Math.min(mediaWidth, mediaHeight);\n                    const cropX = (mediaWidth - cropSize) / 2;\n                    const cropY = (mediaHeight - cropSize) / 2;\n\n                    p.image(planetButton.previewMedia,\n                        previewX, previewY,\n                        previewSize, previewSize,\n                        cropX, cropY, cropSize, cropSize);\n\n                    // Remove tint for corner brackets\n                    p.noTint();\n\n                    // Render HUD-style corner brackets\n                    const cornerSize = mobile ? 8 : 12;\n                    const alpha = planetButton.previewAlpha * 150; // Match preview opacity\n\n                    p.stroke(255, alpha);\n                    p.strokeWeight(1);\n                    p.noFill();\n\n                    // Corner brackets (like targeting system)\n                    const corners = [\n                        [previewX, previewY], // top-left\n                        [previewX + previewSize, previewY], // top-right\n                        [previewX + previewSize, previewY + previewSize], // bottom-right\n                        [previewX, previewY + previewSize] // bottom-left\n                    ];\n\n                    corners.forEach(([x, y], index) => {\n                        const xDir = index === 0 || index === 3 ? 1 : -1;\n                        const yDir = index === 0 || index === 1 ? 1 : -1;\n\n                        // Horizontal line\n                        p.line(x, y, x + xDir * cornerSize, y);\n                        // Vertical line\n                        p.line(x, y, x, y + yDir * cornerSize);\n                    });\n\n                    p.pop();\n                }\n            }\n\n            // Update preview alpha\n            if (isHovered) {\n                planetButton.previewAlpha = p.lerp(planetButton.previewAlpha || 0, 1, 0.1);\n            } else {\n                planetButton.previewAlpha = p.lerp(planetButton.previewAlpha || 0, 0, 0.15);\n            }\n        });\n    }\n\n    function renderHUDDecorations() {\n        p.push();\n\n        // Title\n        renderTitle();\n\n        // Perimeter decorations\n        renderPerimeterHUD();\n\n\n        p.pop();\n    }\n\n    function renderTitle() {\n        const titleY = mobile ? 5 : 20;\n        const titleSize = mobile ? 18 : 28;\n\n        p.fill(255, 200);\n        p.noStroke();\n        p.textAlign(p.CENTER, p.TOP);\n        p.textFont('BPdotsSquareVF', {\n            fontVariationSettings: `wght 900`\n        });\n        p.textSize(titleSize);\n        p.text(\"LIVE EXPERIENCES\", p.width / 2, titleY);\n\n        // Underline decoration\n        const textWidth = p.textWidth(\"LIVE EXPERIENCES\");\n        p.stroke(255, 120);\n        p.strokeWeight(1);\n        p.line(p.width/2 - textWidth/2 - 20, titleY + titleSize + 8,\n               p.width/2 + textWidth/2 + 20, titleY + titleSize + 8);\n    }\n\n    function renderPerimeterHUD() {\n        const margin = mobile ? 10 : 40;\n        const cornerSize = mobile ? 20 : 30;\n        const alpha = 100;\n\n        p.stroke(255, alpha);\n        p.strokeWeight(1);\n        p.strokeCap(p.SQUARE);\n        p.noFill();\n\n        // Corner brackets (like targeting system)\n        const corners = [\n            [margin, margin], // top-left\n            [p.width - margin, margin], // top-right\n            [p.width - margin, p.height - margin], // bottom-right\n            [margin, p.height - margin] // bottom-left\n        ];\n\n        corners.forEach(([x, y], index) => {\n            const xDir = index === 0 || index === 3 ? 1 : -1;\n            const yDir = index === 0 || index === 1 ? 1 : -1;\n\n            // Horizontal line\n            p.line(x, y, x + xDir * cornerSize, y);\n            // Vertical line\n            p.line(x, y, x, y + yDir * cornerSize);\n        });\n\n        // Side markers (like coordinate system)\n        const markerCount = mobile ? 3 : 5;\n        const markerSize = 6;\n\n        // Top and bottom markers\n        for (let i = 1; i < markerCount; i++) {\n            const x = p.lerp(margin + cornerSize, p.width - margin - cornerSize, i / markerCount);\n\n            // Top markers\n            p.line(x, margin, x, margin + markerSize);\n            // Bottom markers\n            p.line(x, p.height - margin, x, p.height - margin - markerSize);\n        }\n\n        // Left and right markers\n        for (let i = 1; i < markerCount; i++) {\n            const y = p.lerp(margin + cornerSize, p.height - margin - cornerSize, i / markerCount);\n\n            // Left markers\n            p.line(margin, y, margin + markerSize, y);\n            // Right markers\n            p.line(p.width - margin, y, p.width - margin - markerSize, y);\n        }\n\n        // Status indicators in corners\n        p.fill(255, alpha * 0.6);\n        p.noStroke();\n        p.textAlign(p.LEFT, p.TOP);\n        p.textSize(mobile ? 8 : 11);\n        const step = mobile ? 10 : 13;\n        // System status text\n        p.text(\"SYS: CAUTION\", margin + 0.5*cornerSize, margin + 1*step);\n        p.text(\"SOL: \" + sols.toString(), margin + 0.5*cornerSize, margin + 2*step);\n        p.text(\"SIG: -27dBm\", margin + 0.5*cornerSize, margin + 3*step);\n        p.text(\"RCS: ON\", margin + 0.5*cornerSize, margin + 4*step);\n        /*\n        p.textAlign(p.RIGHT, p.TOP);\n        p.text(\"SOL:\" + sols.toString(), p.width - margin - cornerSize, margin + 5);\n        p.textAlign(p.LEFT, p.BOTTOM);\n        p.text(\"SIG:-32dBm\", margin + cornerSize, p.height - margin - 5);\n        p.textAlign(p.RIGHT, p.BOTTOM);\n        p.text(\"BATT:64%\", p.width - margin - cornerSize, p.height - margin - 5);\n        */\n    }\n\n\n    function loadPreviewMedia(planetButton, project) {\n        if (project && project.images && project.images.length > 0) {\n            const firstMedia = project.images[0];\n            const pathString = getMediaPath(firstMedia);\n            const isVideo = isVideoFile(pathString);\n\n            if (isVideo) {\n                // For videos, try to load thumbnail first, fall back to placeholder\n                if (project.thumbnails && project.thumbnails[firstMedia]) {\n                    p.loadImage(project.thumbnails[firstMedia], (img) => {\n                        planetButton.previewMedia = img;\n                    }, (err) => {\n                        console.warn('Failed to load thumbnail for preview:', err);\n                    });\n                }\n            } else {\n                // For images, load directly\n                p.loadImage(pathString, (img) => {\n                    planetButton.previewMedia = img;\n                }, (err) => {\n                    console.warn('Failed to load image for preview:', err);\n                });\n            }\n        }\n    }\n\n\n    function renderInfoCard(project) {\n        // Calculate card size based on screen size\n        const { width: cardWidth, height: cardHeight, x: cardX, y: cardY, isMobile } = getCardDimensions();\n\n        // Card background with semi-transparent overlay\n        p.fill(0, 0, 0, 120 * (infoCardAlpha / 255));\n        p.noStroke();\n        p.rect(0, 0, p.width, p.height);\n\n        // Main card background\n        p.fill(23, 23, 23, 240 * (infoCardAlpha / 255));\n        p.stroke(230, infoCardAlpha);\n        p.strokeWeight(2);\n        p.rect(cardX, cardY, cardWidth, cardHeight);\n\n        // Close button\n        const closeButtonSize = isMobile ? 44 : 30;\n        const closeButtonX = cardX + cardWidth - closeButtonSize - 10;\n        const closeButtonY = cardY + 10;\n        renderCloseButton(closeButtonX, closeButtonY, closeButtonSize, infoCardAlpha);\n\n        // Text styling\n        p.fill(230, infoCardAlpha);\n        p.noStroke();\n        p.textAlign(p.LEFT, p.TOP);\n\n        // Fixed text sizes for desktop and mobile with tighter mobile spacing\n        const padding = isMobile ? 20 : 24;\n        const baseLineHeight = isMobile ? 20 : 32; // Much tighter line height for mobile\n        let textY = cardY + padding;\n\n        // Project Name (larger) - with multiline support\n        p.textFont('BPdotsSquareVF', {\n            fontVariationSettings: `wght 900`\n        });\n        const nameSize = isMobile ? 22 : 32;\n        p.textSize(nameSize);\n\n        // Calculate approximate number of lines for project name\n        const nameWidth = cardWidth - 2 * padding - closeButtonSize;\n        const nameTextWidth = p.textWidth(project.name);\n        const estimatedLines = Math.ceil(nameTextWidth / nameWidth);\n\n        p.text(project.name, cardX + padding, textY, nameWidth);\n        textY += (estimatedLines * nameSize * 1.2) + (isMobile ? 8 : 16); // Use actual text size for height\n\n        // Type, then Year - Location on same line\n        p.textSize(isMobile ? 12 : 18);\n\n        // Type\n        p.text(project.type, cardX + padding, textY, cardWidth - 2 * padding);\n        textY += isMobile ? 14 : baseLineHeight; // Reduced spacing on mobile\n\n        // Year - Location (combined on one line)\n        const yearLocationText = `${project.year} - ${project.location}`;\n        p.text(yearLocationText, cardX + padding, textY, cardWidth - 2 * padding);\n        textY += isMobile ? 18 : baseLineHeight * 1.5; // Slightly more space before gallery\n\n        // Gallery section (if images exist)\n        if (project.images && project.images.length > 0) {\n            const galleryHeight = isMobile ? cardHeight * 0.3 : cardHeight * 0.4;\n            const galleryY = textY;\n            renderGallery(project.images, cardX + padding, galleryY, cardWidth - 2 * padding, galleryHeight, isMobile);\n            textY += galleryHeight + (isMobile ? 12 : baseLineHeight); // Much tighter spacing on mobile\n        }\n\n        // Description (if available)\n        if (project.description && project.description.length > 0) {\n            p.textFont('ZxGamut', { fontVariationSettings: `wght 400` });\n            p.textSize(isMobile ? 10 : 16);\n            p.fill(230, infoCardAlpha);\n            p.noStroke();\n            const descriptionHeight = cardHeight - (textY - cardY) - (isMobile ? 10 : padding);\n            p.text(project.description, cardX + padding, textY, cardWidth - 2 * padding, descriptionHeight);\n            // Reset font back to default\n            p.textFont('BPdotsSquareVF', {\n                fontVariationSettings: `wght 900`\n            });\n        }\n\n        // Navigation arrows (only show if there are multiple projects)\n        if (projects.length > 1) {\n            renderNavigationArrows(cardX, cardY, cardWidth, cardHeight, isMobile);\n        }\n    }\n\n    function renderNavigationArrows(cardX, cardY, cardWidth, cardHeight, isMobile) {\n        // Arrow button dimensions - responsive to screen size\n        const arrowSize = isMobile ? 50 : 40;\n        const arrowPadding = isMobile ? 20 : 15;\n        const arrowY = cardY + cardHeight + arrowPadding;\n\n        // Position arrows with counter centered between them\n        const counterWidth = 80; // Estimate width needed for counter text\n        const totalWidth = arrowSize * 2 + counterWidth + arrowPadding * 2; // 2 arrows + counter + spacing\n        const startX = cardX + (cardWidth - totalWidth) / 2;\n\n        const leftArrowX = startX;\n        const rightArrowX = startX + arrowSize + counterWidth + arrowPadding * 2;\n        const counterX = startX + arrowSize + arrowPadding;\n\n        // Arrows are always active with wraparound navigation\n        const arrowAlpha = infoCardAlpha;\n\n        // Left arrow (previous with wraparound)\n        renderArrowButton(leftArrowX, arrowY, arrowSize, 'left', arrowAlpha, isMobile);\n\n        // Right arrow (next with wraparound)\n        renderArrowButton(rightArrowX, arrowY, arrowSize, 'right', arrowAlpha, isMobile);\n\n        // Project counter text centered between arrows\n        p.fill(230, infoCardAlpha);\n        p.noStroke();\n        p.textAlign(p.CENTER, p.CENTER);\n        p.textFont('BPdotsSquareVF', { fontVariationSettings: `wght 600` });\n        p.textSize(isMobile ? 12 : 18);\n        p.text(`${activeInfoCard + 1} / ${projects.length}`, counterX + counterWidth/2, arrowY + arrowSize/2);\n    }\n\n    function renderArrowButton(x, y, size, direction, alpha, isMobile) {\n        // Button background\n        p.fill(40, 40, 40, alpha);\n        p.stroke(100, alpha);\n        p.strokeWeight(isMobile ? 2 : 1);\n        p.rect(x, y, size, size);\n\n        // Arrow symbol\n        p.fill(230, alpha);\n        p.noStroke();\n\n        const arrowPadding = size * 0.25;\n        const arrowCenterX = x + size/2;\n        const arrowCenterY = y + size/2;\n        const arrowWidth = size * 0.3;\n        const arrowHeight = size * 0.4;\n\n        if (direction === 'left') {\n            // Left-pointing triangle\n            p.triangle(\n                arrowCenterX - arrowWidth/2, arrowCenterY,\n                arrowCenterX + arrowWidth/2, arrowCenterY - arrowHeight/2,\n                arrowCenterX + arrowWidth/2, arrowCenterY + arrowHeight/2\n            );\n        } else {\n            // Right-pointing triangle\n            p.triangle(\n                arrowCenterX + arrowWidth/2, arrowCenterY,\n                arrowCenterX - arrowWidth/2, arrowCenterY - arrowHeight/2,\n                arrowCenterX - arrowWidth/2, arrowCenterY + arrowHeight/2\n            );\n        }\n    }\n\n    function navigateToProject(newIndex, fromHashChange = false) {\n        if (newIndex >= 0 && newIndex < projects.length && newIndex !== activeInfoCard) {\n            // Update active info card\n            activeInfoCard = newIndex;\n\n            // Reset gallery scroll\n            galleryScrollX = 0;\n            targetGalleryScrollX = 0;\n\n            // Close any expanded media\n            if (expandedMediaIndex !== null) {\n                closeExpandedMedia();\n            }\n\n            // Load media for new project\n            loadMediaForProject(projects[newIndex]);\n\n            // Update URL and breadcrumb\n            const newProject = projects[newIndex];\n            if (newProject && newProject.slug) {\n                const newPath = `/interactive/live/${newProject.slug}`;\n\n                // Only update URL if this wasn't triggered by a hash change\n                if (!fromHashChange) {\n                    window.history.replaceState(null, '', `#${newPath}`);\n                }\n                currentPath = newPath;\n\n                // Update breadcrumb\n                import(\"../elements/breadcrumb-nav.js\").then(({ updateBreadcrumb }) => {\n                    updateBreadcrumb(newPath);\n                });\n\n                // Update session storage\n                sessionStorage.setItem('installationsActiveProject', newProject.slug);\n            }\n        }\n    }\n\n    function getNavigationButtonHoverCheck() {\n        return (mouseX, mouseY) => {\n            if (activeInfoCard !== null && projects.length > 1) {\n                const { width: cardWidth, height: cardHeight, x: cardX, y: cardY, isMobile } = getCardDimensions();\n                const arrowSize = isMobile ? 50 : 40;\n                const arrowPadding = isMobile ? 20 : 15;\n                const arrowY = cardY + cardHeight + arrowPadding;\n\n                // Use new arrow positioning logic (same as in renderNavigationArrows)\n                const counterWidth = 80;\n                const totalWidth = arrowSize * 2 + counterWidth + arrowPadding * 2;\n                const startX = cardX + (cardWidth - totalWidth) / 2;\n\n                const leftArrowX = startX;\n                const rightArrowX = startX + arrowSize + counterWidth + arrowPadding * 2;\n\n                // Check left arrow (always active with wraparound)\n                if (mouseX >= leftArrowX && mouseX <= leftArrowX + arrowSize &&\n                    mouseY >= arrowY && mouseY <= arrowY + arrowSize) {\n                    return true;\n                }\n\n                // Check right arrow (always active with wraparound)\n                if (mouseX >= rightArrowX && mouseX <= rightArrowX + arrowSize &&\n                    mouseY >= arrowY && mouseY <= arrowY + arrowSize) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    function getTextAreasHoverCheck() {\n        return (mouseX, mouseY) => {\n            // Check if hovering over any text area\n            for (let i = 0; i < planetButtons.length; i++) {\n                const planetButton = planetButtons[i];\n                const project = projects[i];\n                if (project && isHoveringText(planetButton, mouseX, mouseY, project.name)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    // Track loaded media for cleanup\n    const loadedMediaForProject = new Map();\n\n    function loadMediaForProject(project) {\n        if (!project.images || project.images.length === 0) return;\n\n        // Clean up previous project media first\n        cleanupUnusedMedia(project);\n\n        project.images.forEach((mediaItem, index) => {\n            const pathString = getMediaPath(mediaItem);\n\n            if (!loadedMedia.has(pathString)) {\n                const isVideo = isVideoFile(pathString);\n\n                // Strict mobile handling - NEVER load video elements on mobile\n                const isMobileCheck = widthCheck(p.width);\n                if (isMobileCheck && isVideo) {\n                    if (project.thumbnails && project.thumbnails[mediaItem]) {\n                        // Lazy load thumbnail only when needed\n                        loadedMedia.set(pathString, { element: null, type: 'video-thumbnail-lazy', videoSrc: pathString, thumbnailPath: project.thumbnails[mediaItem], loaded: false });\n                    } else {\n                        // No thumbnail available - use black placeholder\n                        loadedMedia.set(pathString, { element: null, type: 'video-placeholder', videoSrc: pathString, loaded: true });\n                    }\n                    return;\n                }\n\n                // Desktop video loading\n                if (isVideo) {\n                    loadVideoElement(pathString);\n                } else {\n                    // Lazy load images as well\n                    loadedMedia.set(pathString, { element: null, type: 'image-lazy', imagePath: pathString, loaded: false });\n                }\n            }\n\n            // Track media for this project\n            if (!loadedMediaForProject.has(project.slug)) {\n                loadedMediaForProject.set(project.slug, new Set());\n            }\n            loadedMediaForProject.get(project.slug).add(pathString);\n        });\n    }\n\n    function loadVideoElement(pathString) {\n        // Only create video elements on desktop\n        const isMobileCheck = widthCheck(p.width);\n        if (isMobileCheck) {\n            console.warn('Attempted to load video on mobile - this should not happen');\n            return;\n        }\n\n        // Check if video is already loaded or being loaded\n        if (loadedMedia.has(pathString) || mediaBeingLoaded.has(pathString)) {\n            return;\n        }\n\n        // Mark as being loaded and set initial unloaded state\n        mediaBeingLoaded.add(pathString);\n        loadedMedia.set(pathString, { element: null, type: 'video', loaded: false });\n\n        const video = p.createVideo(pathString, () => {\n            // Only set loaded once when video is ready\n            const currentData = loadedMedia.get(pathString);\n            if (currentData && !currentData.loaded) {\n                loadedMedia.set(pathString, { element: video, type: 'video', loaded: true });\n                mediaBeingLoaded.delete(pathString);\n            }\n        });\n        video.hide();\n        video.volume(0);\n\n        // Set attributes for iOS compatibility\n        video.elt.setAttribute('playsinline', true);\n        video.elt.setAttribute('muted', true);\n        video.elt.setAttribute('preload', 'metadata');\n\n        // Desktop: autoplay looping for moving preview\n        video.loop();\n\n        // Single consolidated event listener to avoid multiple updates\n        video.elt.addEventListener('canplay', () => {\n            const currentData = loadedMedia.get(pathString);\n            if (currentData && !currentData.loaded) {\n                loadedMedia.set(pathString, { element: video, type: 'video', loaded: true });\n                mediaBeingLoaded.delete(pathString);\n            }\n        });\n\n        // Fallback timeout in case events don't fire\n        setTimeout(() => {\n            const currentData = loadedMedia.get(pathString);\n            if (currentData && !currentData.loaded) {\n                loadedMedia.set(pathString, { element: video, type: 'video', loaded: true });\n                mediaBeingLoaded.delete(pathString);\n            }\n        }, 3000);\n    }\n\n    function cleanupUnusedMedia(currentProject) {\n        // Clean up media from other projects to free memory\n        loadedMediaForProject.forEach((mediaSet, projectSlug) => {\n            if (projectSlug !== currentProject.slug) {\n                mediaSet.forEach(pathString => {\n                    const mediaData = loadedMedia.get(pathString);\n                    if (mediaData && mediaData.element) {\n                        // Remove video elements from DOM\n                        if (mediaData.type === 'video' && mediaData.element.elt) {\n                            mediaData.element.remove();\n                        }\n                    }\n                    loadedMedia.delete(pathString);\n                });\n                loadedMediaForProject.delete(projectSlug);\n            }\n        });\n    }\n\n    function lazyLoadMedia(pathString) {\n        const mediaData = loadedMedia.get(pathString);\n        if (!mediaData || mediaData.loaded || mediaBeingLoaded.has(pathString)) return;\n\n        // Mark as being loaded to prevent duplicates\n        mediaBeingLoaded.add(pathString);\n\n        if (mediaData.type === 'video-thumbnail-lazy') {\n            // Load thumbnail image\n            p.loadImage(mediaData.thumbnailPath, (img) => {\n                loadedMedia.set(pathString, {\n                    element: img,\n                    type: 'video-thumbnail',\n                    videoSrc: pathString,\n                    loaded: true\n                });\n                mediaBeingLoaded.delete(pathString);\n            }, (err) => {\n                console.error('Failed to load video thumbnail:', mediaData.thumbnailPath, err);\n                loadedMedia.set(pathString, {\n                    element: null,\n                    type: 'video-placeholder',\n                    videoSrc: pathString,\n                    loaded: true\n                });\n                mediaBeingLoaded.delete(pathString);\n            });\n        } else if (mediaData.type === 'image-lazy') {\n            // Load image\n            p.loadImage(mediaData.imagePath, (img) => {\n                loadedMedia.set(pathString, {\n                    element: img,\n                    type: 'image',\n                    loaded: true\n                });\n                mediaBeingLoaded.delete(pathString);\n            }, (err) => {\n                console.error('Failed to load image:', mediaData.imagePath, err);\n                mediaBeingLoaded.delete(pathString);\n            });\n        }\n    }\n\n\n    function renderGallery(images, x, y, width, height, isMobile) {\n        if (!images || images.length === 0) return;\n\n        // Gallery container background\n        p.fill(0, 0, 0, 100 * (infoCardAlpha / 255));\n        p.stroke(230, infoCardAlpha * 0.3);\n        p.strokeWeight(1);\n        p.rect(x, y, width, height);\n\n        // Set up clipping mask for gallery\n        p.push();\n\n        // Create clipping rectangle\n        p.drawingContext.save();\n        p.drawingContext.beginPath();\n        p.drawingContext.rect(x, y, width, height);\n        p.drawingContext.clip();\n\n        // Use 3:2 aspect ratio for gallery items with equal padding\n        const padding = isMobile ? 8 : 10; // Equal padding for all sides and between items\n        const itemHeight = height - (2 * padding); // Account for top and bottom padding\n        const itemWidth = itemHeight * 1.5; // 3:2 aspect ratio\n        const totalWidth = images.length * (itemWidth + padding) - padding; // Last item doesn't need trailing padding\n        const startX = x + padding; // Left padding\n        const startY = y + padding; // Top padding\n\n        // Constrain scroll bounds\n        const maxScroll = p.max(0, totalWidth - width + (2 * padding));\n        targetGalleryScrollX = p.constrain(targetGalleryScrollX, -maxScroll, 0);\n\n        // Render media items\n        images.forEach((mediaItem, index) => {\n            const pathString = getMediaPath(mediaItem);\n            const itemX = startX + index * (itemWidth + padding) + galleryScrollX;\n\n            // Only render if visible\n            if (itemX + itemWidth >= x && itemX <= x + width) {\n                const mediaData = loadedMedia.get(pathString);\n\n                // Lazy load media when it becomes visible\n                if (mediaData && !mediaData.loaded) {\n                    lazyLoadMedia(pathString);\n                }\n\n                if (mediaData && mediaData.loaded) {\n                    p.push();\n                    p.tint(255, infoCardAlpha);\n\n                    try {\n                        if (mediaData.type === 'image') {\n                            // Fill the entire box, cropping as needed\n                            const img = mediaData.element;\n                            const { sourceX, sourceY, sourceWidth, sourceHeight } = calculateCropDimensions(img.width, img.height, itemWidth, itemHeight);\n\n                            p.image(img, itemX, startY, itemWidth, itemHeight, sourceX, sourceY, sourceWidth, sourceHeight);\n                        } else if (mediaData.type === 'video-thumbnail') {\n                            // Mobile: Show thumbnail image (no play icon to avoid blocking taps)\n                            const img = mediaData.element;\n                            const { sourceX, sourceY, sourceWidth, sourceHeight } = calculateCropDimensions(img.width, img.height, itemWidth, itemHeight);\n\n                            p.image(img, itemX, startY, itemWidth, itemHeight, sourceX, sourceY, sourceWidth, sourceHeight);\n                        } else if (mediaData.type === 'video') {\n                            // Show first frame of video as preview (no play icon)\n                            const video = mediaData.element;\n                            if (video.elt && (video.elt.readyState >= 1 || video.elt.videoWidth > 0)) {\n                                const videoWidth = video.elt.videoWidth || video.width || 1920;\n                                const videoHeight = video.elt.videoHeight || video.height || 1080;\n                                const { sourceX, sourceY, sourceWidth, sourceHeight } = calculateCropDimensions(videoWidth, videoHeight, itemWidth, itemHeight);\n\n                                p.image(video, itemX, startY, itemWidth, itemHeight, sourceX, sourceY, sourceWidth, sourceHeight);\n                            } else {\n                                // Fallback to dark background if video not ready\n                                p.fill(40, 40, 40, 200 * (infoCardAlpha / 255));\n                                p.noStroke();\n                                p.rect(itemX, startY, itemWidth, itemHeight);\n                            }\n                        } else if (mediaData.type === 'video-placeholder') {\n                            // Mobile: Show black placeholder with play icon\n                            p.fill(23, 23, 23, 240 * (infoCardAlpha / 255));\n                            p.noStroke();\n                            p.rect(itemX, startY, itemWidth, itemHeight);\n\n                            // Small play icon overlay\n                            const playSize = itemWidth * 0.15;\n                            const playX = itemX + (itemWidth - playSize) / 2;\n                            const playY = startY + (itemHeight - playSize) / 2;\n                            renderPlayIcon(playX, playY, playSize, infoCardAlpha);\n                        }\n                    }\n                    catch (error) {\n                        console.warn('Error rendering media:', error);\n                        // Fall back to placeholder\n                        p.fill(80, 80, 80, 150 * (infoCardAlpha / 255));\n                        p.stroke(120, infoCardAlpha * 0.5);\n                        p.strokeWeight(1);\n                        p.rect(itemX, startY, itemWidth, itemHeight);\n\n                        // Show error text\n                        p.fill(200, infoCardAlpha * 0.7);\n                        p.noStroke();\n                        p.textAlign(p.CENTER, p.CENTER);\n                        p.textSize(isMobile ? 6 : 12);\n                        p.text(mediaData.type === 'video' ? 'Video Error' : 'Image Error', itemX + itemWidth / 2, startY + itemHeight / 2);\n                    }\n\n                    p.pop();\n                } else if (mediaData) {\n                    // Show appropriate placeholder based on type\n                    if (mediaData.type === 'video-thumbnail-lazy' || mediaData.type === 'image-lazy') {\n                        // Light placeholder for lazy loading items\n                        p.fill(60, 60, 60, 120 * (infoCardAlpha / 255));\n                        p.stroke(110, infoCardAlpha * 0.4);\n                        p.strokeWeight(1);\n                        p.rect(itemX, startY, itemWidth, itemHeight);\n\n                        // Subtle loading indicator\n                        p.fill(180, infoCardAlpha * 0.6);\n                        p.noStroke();\n                        p.textAlign(p.CENTER, p.CENTER);\n                        p.textSize(isMobile ? 6 : 12);\n                        p.text('•••', itemX + itemWidth / 2, startY + itemHeight / 2);\n                    } else {\n                        // Standard loading placeholder\n                        p.fill(50, 50, 50, 150 * (infoCardAlpha / 255));\n                        p.stroke(100, infoCardAlpha * 0.5);\n                        p.strokeWeight(1);\n                        p.rect(itemX, startY, itemWidth, itemHeight);\n\n                        // Loading text\n                        p.fill(150, infoCardAlpha * 0.7);\n                        p.noStroke();\n                        p.textAlign(p.CENTER, p.CENTER);\n                        p.textSize(isMobile ? 8 : 14);\n                        p.text('Loading...', itemX + itemWidth / 2, startY + itemHeight / 2);\n                    }\n                } else {\n                    // No media data available\n                    p.fill(40, 40, 40, 100 * (infoCardAlpha / 255));\n                    p.stroke(80, infoCardAlpha * 0.3);\n                    p.strokeWeight(1);\n                    p.rect(itemX, startY, itemWidth, itemHeight);\n                }\n\n                // Media border\n                p.noFill();\n                p.stroke(230, infoCardAlpha * 0.6);\n                p.strokeWeight(1);\n                p.rect(itemX, startY, itemWidth, itemHeight);\n            }\n        });\n\n        // Scroll indicators (if needed)\n        if (totalWidth > width) {\n            const indicatorAlpha = infoCardAlpha * 0.8;\n\n            // Left scroll indicator\n            if (galleryScrollX < 0) {\n                p.fill(230, indicatorAlpha);\n                p.noStroke();\n                p.triangle(x + 5, y + height / 2, x + 15, y + height / 2 - 5, x + 15, y + height / 2 + 5);\n            }\n\n            // Right scroll indicator\n            if (galleryScrollX > -maxScroll) {\n                p.fill(230, indicatorAlpha);\n                p.noStroke();\n                p.triangle(x + width - 5, y + height / 2, x + width - 15, y + height / 2 - 5, x + width - 15, y + height / 2 + 5);\n            }\n        }\n\n        // Restore clipping context\n        p.drawingContext.restore();\n\n        p.pop();\n    }\n\n\n    function openExpandedMedia(index) {\n        expandedMediaIndex = index;\n        targetExpandedAlpha = 255;\n        expandedMediaAnimationStart = p.millis();\n        expandedMediaAnimating = true;\n    }\n\n    function closeExpandedMedia() {\n        targetExpandedAlpha = 0;\n        expandedMediaAnimationStart = p.millis();\n        expandedMediaAnimating = true;\n\n        // Clean up native video element\n        if (nativeVideoElement) {\n            nativeVideoElement.remove();\n            nativeVideoElement = null;\n        }\n    }\n\n    function renderExpandedNativeVideo(videoPath) {\n        // Dark overlay\n        p.fill(0, 0, 0, 200 * (expandedMediaAlpha / 255));\n        p.noStroke();\n        p.rect(0, 0, p.width, p.height);\n\n        // Create or update native video element\n        if (!nativeVideoElement || nativeVideoElement.src !== videoPath) {\n            // Clean up existing video if it exists\n            if (nativeVideoElement) {\n                nativeVideoElement.remove();\n            }\n\n            nativeVideoElement = document.createElement('video');\n            nativeVideoElement.src = videoPath;\n            nativeVideoElement.controls = true;\n            nativeVideoElement.preload = 'metadata';\n            nativeVideoElement.setAttribute('playsinline', true);\n            nativeVideoElement.muted = true;\n\n            // Style the video element\n            nativeVideoElement.style.position = 'fixed';\n            nativeVideoElement.style.zIndex = '1000';\n            nativeVideoElement.style.backgroundColor = '#000';\n            nativeVideoElement.style.borderRadius = '8px';\n\n            // Add to DOM\n            document.body.appendChild(nativeVideoElement);\n        }\n\n        // Calculate video size and position (full width on mobile, 80% on desktop)\n        const isMobile = widthCheck(p.width);\n        const maxWidth = isMobile ? p.width : p.width * 0.8;\n        const maxHeight = isMobile ? p.height * 0.8 : p.height * 0.8;\n\n        // Use 16:9 aspect ratio as default, or actual video ratio if available\n        let aspectRatio = 16 / 9;\n        if (nativeVideoElement.videoWidth && nativeVideoElement.videoHeight) {\n            aspectRatio = nativeVideoElement.videoWidth / nativeVideoElement.videoHeight;\n        }\n\n        let videoWidth, videoHeight;\n        if (aspectRatio > maxWidth / maxHeight) {\n            videoWidth = maxWidth;\n            videoHeight = maxWidth / aspectRatio;\n        } else {\n            videoHeight = maxHeight;\n            videoWidth = maxHeight * aspectRatio;\n        }\n\n        // Position the video element\n        const videoX = (p.width - videoWidth) / 2;\n        const videoY = (p.height - videoHeight) / 2;\n\n        // Apply positioning and sizing\n        nativeVideoElement.style.left = videoX + 'px';\n        nativeVideoElement.style.top = videoY + 'px';\n        nativeVideoElement.style.width = videoWidth + 'px';\n        nativeVideoElement.style.height = videoHeight + 'px';\n        nativeVideoElement.style.opacity = expandedMediaAlpha / 255;\n\n        // Close button (centered below the video, similar to arrow buttons)\n        const closeSize = isMobile ? 50 : 40;\n        const closePadding = isMobile ? 20 : 15;\n        const closeY = videoY + videoHeight + closePadding;\n        const closeX = (p.width - closeSize) / 2; // Center horizontally\n\n        p.fill(0, 0, 0, 150 * (expandedMediaAlpha / 255));\n        p.stroke(255, expandedMediaAlpha);\n        p.strokeWeight(2);\n        p.rect(closeX, closeY, closeSize, closeSize);\n\n        // X symbol\n        p.stroke(255, expandedMediaAlpha);\n        p.strokeWeight(3);\n        const padding = closeSize * 0.3; // Proportional padding\n        p.line(closeX + padding, closeY + padding,\n            closeX + closeSize - padding, closeY + closeSize - padding);\n        p.line(closeX + closeSize - padding, closeY + padding,\n            closeX + padding, closeY + closeSize - padding);\n    }\n\n    function renderExpandedMedia() {\n        if (activeInfoCard === null || expandedMediaIndex === null) return;\n\n        const project = projects[activeInfoCard];\n        if (!project.images || expandedMediaIndex >= project.images.length) return;\n\n        const mediaItem = project.images[expandedMediaIndex];\n        let pathString;\n        if (typeof mediaItem === 'string') {\n            pathString = mediaItem;\n        } else if (mediaItem && typeof mediaItem === 'object') {\n            pathString = mediaItem.default || mediaItem.src || mediaItem.href || mediaItem.toString();\n        } else {\n            pathString = String(mediaItem);\n        }\n\n        const mediaData = loadedMedia.get(pathString);\n        const isVideo = pathString.toLowerCase().match(/\\.(mp4|mov|webm|avi)(\\?.*)?$/i);\n\n        // For videos or video placeholders, use native video player\n        if (isVideo || (mediaData && (mediaData.type === 'video-placeholder' || mediaData.type === 'video-thumbnail'))) {\n            // Use the original video source for native player\n            const videoSrc = mediaData && mediaData.videoSrc ? mediaData.videoSrc : pathString;\n            renderExpandedNativeVideo(videoSrc);\n            return;\n        }\n\n        // For images, continue with p5.js rendering\n        if (!mediaData || !mediaData.loaded) return;\n\n        // Dark overlay\n        p.fill(0, 0, 0, 200 * (expandedMediaAlpha / 255));\n        p.noStroke();\n        p.rect(0, 0, p.width, p.height);\n\n        // Calculate media size (full width on mobile, 80% on desktop)\n        const isMobile = widthCheck(p.width);\n        const maxWidth = isMobile ? p.width : p.width * 0.8;\n        const maxHeight = isMobile ? p.height * 0.8 : p.height * 0.8;\n        let mediaWidth, mediaHeight;\n\n        if (mediaData.type === 'image') {\n            const img = mediaData.element;\n            const aspectRatio = img.width / img.height;\n            if (aspectRatio > maxWidth / maxHeight) {\n                mediaWidth = maxWidth;\n                mediaHeight = maxWidth / aspectRatio;\n            } else {\n                mediaHeight = maxHeight;\n                mediaWidth = maxHeight * aspectRatio;\n            }\n        } else if (mediaData.type === 'video') {\n            const video = mediaData.element;\n            // Get video dimensions with fallbacks\n            let videoWidth = video.elt.videoWidth || video.width || 1920;\n            let videoHeight = video.elt.videoHeight || video.height || 1080;\n\n            // Ensure we have valid dimensions\n            if (videoWidth <= 0 || videoHeight <= 0) {\n                videoWidth = 1920;\n                videoHeight = 1080;\n            }\n\n            const aspectRatio = videoWidth / videoHeight;\n            if (aspectRatio > maxWidth / maxHeight) {\n                mediaWidth = maxWidth;\n                mediaHeight = maxWidth / aspectRatio;\n            } else {\n                mediaHeight = maxHeight;\n                mediaWidth = maxHeight * aspectRatio;\n            }\n        }\n\n        const mediaX = (p.width - mediaWidth) / 2;\n        const mediaY = (p.height - mediaHeight) / 2;\n\n        // Render expanded media\n        p.push();\n        p.tint(255, expandedMediaAlpha);\n        p.image(mediaData.element, mediaX, mediaY, mediaWidth, mediaHeight);\n        p.pop();\n\n        // Close button (centered below the image, similar to arrow buttons)\n        const closeSize = isMobile ? 50 : 40;\n        const closePadding = isMobile ? 20 : 15;\n        const closeY = mediaY + mediaHeight + closePadding;\n        const closeX = (p.width - closeSize) / 2; // Center horizontally\n\n        p.fill(0, 0, 0, 150 * (expandedMediaAlpha / 255));\n        p.stroke(255, expandedMediaAlpha);\n        p.strokeWeight(2);\n        p.rect(closeX, closeY, closeSize, closeSize);\n\n        // X symbol\n        p.stroke(255, expandedMediaAlpha);\n        p.strokeWeight(3);\n        const padding = closeSize * 0.3; // Proportional padding\n        p.line(closeX + padding, closeY + padding,\n            closeX + closeSize - padding, closeY + closeSize - padding);\n        p.line(closeX + closeSize - padding, closeY + padding,\n            closeX + padding, closeY + closeSize - padding);\n\n        // No custom controls needed - native video handles everything\n\n    };\n}\n\nexport const installationsSketch = (node, options = {}) => {\n    return new p5((p) => sketch(p, options), node);\n};\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$800sp","$baa6D","$7c52c1757ddfa23f$export$d038dabfbf61338f","p","options","smoothX","smoothY","short","animation_manager","font_sizes","ui","ui_opacity","intro_texts","animation_states","mobile","skipAnimations","setUIOpacity","v","layoutUI","length","gridCenterX","width","gridCenterY","height","gridSpacing","gridPositions","x","y","i","pos","textWriter","startX","startY","endX","endY","controlX","controlY","t","oneMinusT","setup","noCanvas","s","getViewportSize","createCanvas","widthCheck","background","noFill","stroke","strokeWeight","strokeCap","PROJECT","loadGoogleFontSet","textAlign","CENTER","min","s_font","Math","max","push","UICornerBoxButton","UIArcButton","UITriangleButton","PI","UIHexButton","textFont","fontVariationSettings","getFontSizes","padding","TextWriter","large","small","medium","renderSequentialRandom","bind","renderTransition","AnimationManager","window","addEventListener","event","millis","draw","cos","sin","smoothFollow","mouseX","deltaTime","mouseY","clear","forEach","ui_element","d","dist","cs","easeInCubic","map","contains","render","noStroke","fill","LEFT","TOP","execute","updateCursor","mousePressed","button","index","appRouter","setTimeout","navigate","console","log","windowResized","resizeCanvas","size","$82b1d05426f642e7$export$d038dabfbf61338f","fbo","pixelDensity","WEBGL","textureFiltering","NEAREST","noSmooth","ellipseMode","createFramebuffer","loading_div","bg","document","getElementById","shadowRoot","remove","begin","abs","frameCount","rotateX","rotateY","circle","end","image","$a850a1f0a1459307$export$d038dabfbf61338f","cx","cy","r","setTextOffset","radialToCartesian","a","zcn","z","noise","renderTriangle","renderDecor","m","createVector","c","new_v","p5","Vector","sub","h","heading","new_cx","mag","new_cy","a_mod","a0","a1","a2","c00","c01","c10","c11","c20","c21","line","ad","TWO_PI","lm","rmi","rmo","$JTwtx","$10c5b62b251f1acf$export$d038dabfbf61338f","smoothV","planetButtons","activeInfoCard","infoCardAlpha","infoCardAnimationStart","infoCardAnimating","targetAlpha","galleryScrollX","targetGalleryScrollX","galleryDragging","galleryDragStartX","galleryStartScrollX","loadedMedia","Map","expandedMediaIndex","expandedMediaAlpha","expandedMediaAnimating","expandedMediaAnimationStart","targetExpandedAlpha","nativeVideoElement","pendingProjectSlug","layoutInitialized","sols","currentPreviewIndex","previewStartTime","textCache","mediaBeingLoaded","Set","resizeTimeout","hashChangeHandler","getCardDimensions","isMobile","cardWidth","cardHeight","cardX","cardY","getGalleryLayout","lineHeight","galleryY","galleryHeight","initializeLayout","setupRadialLayout","textOffsetX","textSize","projects","project","words","name","split","lines","currentLine","word","trim","totalHeight","maxWidth","lineWidth","textWidth","set","nodeCount","baseRadius","step","centerX","angle","radialPos","nodeX","nodeY","planetButton","UIPlanetButton","random","hoverAlpha","targetHoverAlpha","openInfoCard","loadMediaForProject","body","style","overscrollBehavior","touchAction","screen","orientation","lock","catch","e","breadcrumbContainer","display","slug","Promise","resolve","then","updateBreadcrumb","navigateToProject","newIndex","newPath","location","hash","history","pushState","closeInfoCard","closeExpandedMedia","unlock","includes","sessionStorage","removeItem","getCloseButtonHoverCheck","isMobileCheck","closeSize","closeX","images","mediaHeight","mediaItem","pathString","default","src","href","toString","String","isVideo","toLowerCase","match","maxHeight","aspectRatio","videoWidth","videoHeight","mediaData","get","loaded","element","closeY","mediaY","closeButtonSize","closeButtonX","closeButtonY","isHoveringText","projectName","cached","textBounds","textY","renderArrowButton","direction","alpha","rect","arrowCenterX","arrowCenterY","arrowWidth","arrowHeight","triangle","fromHashChange","newProject","replaceState","setItem","cleanupSketch","path","type","removeEventListener","getItem","newHash","substr","cleanPath","startsWith","daysSince","targetIndex","floor","elapsedTime","targetPlanet","constrain","renderRadialLayout","pop","hoverX","hoverY","planetHovered","textHovered","isHovered","lerp","hoverDistance","virtualSmoothV","previewMedia","loadPreviewMedia","firstMedia","getMediaPath","isVideoFile","thumbnails","loadImage","img","warn","previewAlpha","previewSize","previewX","previewY","tint","mediaWidth","cropSize","cropX","cropY","noTint","cornerSize","corners","xDir","yDir","renderTitle","titleY","titleSize","text","renderPerimeterHUD","margin","SQUARE","markerCount","projectIndex","getProjectIndexBySlug","translate","rotate","elapsed","progress","hoverTargets","arrowSize","arrowPadding","arrowY","rightArrowX","leftArrowX","renderInfoCard","baseLineHeight","nameSize","nameWidth","estimatedLines","ceil","nameTextWidth","yearLocationText","year","renderGallery","drawingContext","save","beginPath","clip","itemHeight","itemWidth","totalWidth","maxScroll","itemX","lazyLoadMedia","has","add","thumbnailPath","videoSrc","delete","error","imagePath","sourceX","sourceY","sourceWidth","sourceHeight","calculateCropDimensions","video","elt","readyState","playSize","playX","playY","triangleSize","triangleCenterX","triangleCenterY","indicatorAlpha","restore","description","descriptionHeight","renderNavigationArrows","counterX","arrowAlpha","counterWidth","renderExpandedMedia","renderExpandedNativeVideo","videoPath","createElement","controls","preload","setAttribute","muted","position","zIndex","backgroundColor","borderRadius","appendChild","videoX","videoY","left","top","opacity","mediaX","clearTimeout","closePadding","prevIndex","nextIndex","planetClicked","textClicked","mouseDragged","dragDistance","mouseReleased","galleryAreaPadding","galleryX","galleryY_coords","mouseWheel","scrollAmount","delta","loadedMediaForProject","currentProject","mediaSet","projectSlug","loadVideoElement","createVideo","currentData","hide","volume","loop","$1e164a6ac005f7d0$export$b95f0ca738335a5f","LitElement","styles","css","properties","sketch","Boolean","Object","p5Instance","containerDiv","isInitialized","connectedCallback","updateComplete","initializeSketch","disconnectedCallback","updated","changedProperties","innerHTML","querySelector","node","html","customElements","define"],"version":3,"file":"blap64.f954e2fc.js.map"}