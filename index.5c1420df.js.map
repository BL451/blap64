{"mappings":"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","sources":["<anon>","src/views/elements/p5-element.js","src/views/Home/sketch.js","src/views/Oops/sketch.js","src/views/CodeArt/sketch.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $800sp = parcelRequire(\"800sp\");\nconst $7c52c1757ddfa23f$export$d038dabfbf61338f = function(p) {\n    let fbo = undefined;\n    let short = 128;\n    let smoothX = 0;\n    let smoothY = 0;\n    p.setup = function setup() {\n        p.noCanvas();\n        p.pixelDensity(1);\n        const s = getViewportSize();\n        p.createCanvas(s.width, s.height, p.WEBGL);\n        // Options for creating our framebuffer, width and height relative to the size of our canvas determine the pixelation appearance\n        const options = {\n            width: 128,\n            height: 128,\n            textureFiltering: p.NEAREST\n        };\n        // Disable p5's smoothing\n        p.noSmooth();\n        short = p.min(s.width, s.height);\n        // Make the framebuffer\n        fbo = p.createFramebuffer(options);\n        // p5 in instance mode doesn't seem to work well with elements in a shadow root and doesn't remove the \"p5_loading\" div by itself\n        let bg = document.getElementById(\"bg\");\n        let loading_div = bg.shadowRoot.getElementById(\"p5_loading\");\n        if (loading_div) loading_div.remove();\n    };\n    p.draw = function draw() {\n        smoothX = smoothX + 0.02 * (p.mouseX - smoothX);\n        smoothY = smoothY + 0.02 * (p.mouseY - smoothY);\n        p.clear();\n        fbo.begin(); // Begin drawing stuff in the framebuffer\n        p.noFill();\n        p.stroke(200, 20, 20);\n        p.strokeWeight(p.abs(p.sin(p.frameCount / 42)));\n        p.clear();\n        p.push();\n        p.rotateX(1.5 * p.PI * smoothY / p.height);\n        p.rotateY(1.5 * p.PI * -smoothX / p.width);\n        const s = 12;\n        p.translate(-3 * s, -3 * s, 0);\n        for(let i = 0; i < 7; i++)for(let j = 0; j < 7; j++){\n            p.push();\n            p.translate(i * s, j * s, 0);\n            p.rotateZ((1 + i + j) * p.frameCount / 100);\n            p.box(s * 0.8);\n            p.pop();\n        }\n        p.pop();\n        fbo.end(); // Finish drawing stuff in the framebuffer\n        // Render an image of the framebuffer, centering and stretching it to the size of the canvas\n        p.image(fbo, -short / 2, -short / 2, short, short);\n    };\n    p.windowResized = function windowResized() {\n        const s = getViewportSize();\n        p.resizeCanvas(s.width, s.height);\n        short = p.min(s.width, s.height);\n    };\n    function getViewportSize() {\n        let vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n        let vh = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\n        return {\n            width: vw,\n            height: vh\n        };\n    }\n};\nconst $7c52c1757ddfa23f$export$6704eadea0be434f = (node)=>{\n    new p5($7c52c1757ddfa23f$export$d038dabfbf61338f, node);\n};\n\n\nconst $82b1d05426f642e7$export$d038dabfbf61338f = function(p) {\n    let fbo = undefined;\n    let short = 128;\n    p.setup = function setup() {\n        p.noCanvas();\n        p.pixelDensity(1);\n        const s = getViewportSize();\n        p.createCanvas(s.width, s.height, p.WEBGL);\n        // Options for creating our framebuffer, width and height relative to the size of our canvas determine the pixelation appearance\n        const options = {\n            width: 128,\n            height: 128,\n            textureFiltering: p.NEAREST\n        };\n        // Disable p5's smoothing\n        p.noSmooth();\n        p.ellipseMode(p.CENTER);\n        short = p.min(s.width, s.height);\n        // Make the framebuffer\n        fbo = p.createFramebuffer(options);\n        // p5 in instance mode doesn't seem to work well with elements in a shadow root and doesn't remove the \"p5_loading\" div by itself\n        let bg = document.getElementById(\"bg\");\n        let loading_div = bg.shadowRoot.getElementById(\"p5_loading\");\n        if (loading_div) loading_div.remove();\n    };\n    p.draw = function draw() {\n        p.clear();\n        fbo.begin(); // Begin drawing stuff in the framebuffer\n        p.noFill();\n        p.stroke(200, 20, 20);\n        p.strokeWeight(p.abs(p.sin(p.frameCount / 42)));\n        p.clear();\n        p.rotateX(p.frameCount / 50);\n        p.rotateY(p.frameCount / 200);\n        p.circle(0, 0, 64);\n        p.rotateY(p.PI / 2);\n        p.circle(0, 0, 64);\n        fbo.end(); // Finish drawing stuff in the framebuffer\n        // Render an image of the framebuffer, centering and stretching it to the size of the canvas\n        p.image(fbo, -short / 2, -short / 2, short, short);\n    };\n    p.windowResized = function windowResized() {\n        const s = getViewportSize();\n        p.resizeCanvas(s.width, s.height);\n        short = p.min(s.width, s.height);\n    };\n    function getViewportSize() {\n        let vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n        let vh = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\n        return {\n            width: vw,\n            height: vh\n        };\n    }\n};\nconst $82b1d05426f642e7$export$121e7a268b92cc36 = (node)=>{\n    new p5($82b1d05426f642e7$export$d038dabfbf61338f, node);\n};\n\n\nconst $a850a1f0a1459307$export$d038dabfbf61338f = function(p) {\n    let fbo = undefined;\n    let short = 128;\n    let smoothX = 0;\n    let smoothY = 0;\n    p.setup = function setup() {\n        p.noCanvas();\n        p.pixelDensity(1);\n        const s = getViewportSize();\n        p.createCanvas(s.width, s.height, p.WEBGL);\n        // Options for creating our framebuffer, width and height relative to the size of our canvas determine the pixelation appearance\n        const options = {\n            width: 128,\n            height: 128,\n            textureFiltering: p.NEAREST\n        };\n        // Disable p5's smoothing\n        p.noSmooth();\n        short = p.min(s.width, s.height);\n        // Make the framebuffer\n        fbo = p.createFramebuffer(options);\n        // p5 in instance mode doesn't seem to work well with elements in a shadow root and doesn't remove the \"p5_loading\" div by itself\n        let bg = document.getElementById(\"bg\");\n        let loading_div = bg.shadowRoot.getElementById(\"p5_loading\");\n        if (loading_div) loading_div.remove();\n    };\n    p.draw = function draw() {\n        smoothX = smoothX + 0.02 * (p.mouseX - smoothX);\n        smoothY = smoothY + 0.02 * (p.mouseY - smoothY);\n        p.clear();\n        fbo.begin(); // Begin drawing stuff in the framebuffer\n        p.noFill();\n        p.stroke(200, 20, 20);\n        p.strokeWeight(p.abs(p.sin(0.01 * p.frameCount)));\n        p.clear();\n        p.push();\n        p.rotateX(1.5 * p.PI * smoothY / p.height);\n        p.rotateY(1.5 * p.PI * -smoothX / p.width);\n        p.sphere(42);\n        p.pop();\n        fbo.end(); // Finish drawing stuff in the framebuffer\n        // Render an image of the framebuffer, centering and stretching it to the size of the canvas\n        p.image(fbo, -short / 2, -short / 2, short, short);\n    };\n    p.windowResized = function windowResized() {\n        const s = getViewportSize();\n        p.resizeCanvas(s.width, s.height);\n        short = p.min(s.width, s.height);\n    };\n    function getViewportSize() {\n        let vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n        let vh = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\n        return {\n            width: vw,\n            height: vh\n        };\n    }\n};\nconst $a850a1f0a1459307$export$6d40932eaa280b79 = (node)=>{\n    new p5($a850a1f0a1459307$export$d038dabfbf61338f, node);\n};\n\n\nclass $1e164a6ac005f7d0$export$b95f0ca738335a5f extends (0, $800sp.LitElement) {\n    static styles = (0, $800sp.css)`\n        canvas {\n            display: block;\n            margin: 0;\n            padding: 0;\n            overflow: hidden;\n            width: 100%;\n            height: 100%;\n        }\n    `;\n    static properties = {\n        id: {\n            type: String\n        },\n        sketch: {\n            type: String\n        }\n    };\n    constructor(){\n        super();\n        this.id = \"bg\";\n        this.sketch = \"\";\n    }\n    script() {\n        let div = document.createElement(\"div\");\n        if (this.sketch === \"home\") (0, $7c52c1757ddfa23f$export$6704eadea0be434f)(div);\n        else if (this.sketch === \"codeart\") (0, $a850a1f0a1459307$export$6d40932eaa280b79)(div);\n        else (0, $82b1d05426f642e7$export$121e7a268b92cc36)(div);\n        /* // This works for embedding a sketch from OpenProcessing\n        let script = document.createElement(\"iframe\");\n        script.src =\n            \"https://openprocessing.org/sketch/2242565/embed/?plusEmbedHash=321f7b6f&userID=424615&plusEmbedFullscreen=true&show=sketch\";\n        script.width = \"400\";\n        script.height = \"400\";\n        */ return div;\n    }\n    render() {\n        return (0, $800sp.html)` ${this.script()} `;\n    }\n}\ncustomElements.define(\"p5-element\", $1e164a6ac005f7d0$export$b95f0ca738335a5f);\n\n\n//# sourceMappingURL=index.5c1420df.js.map\n","import { LitElement, html, css } from \"lit\";\nimport { homeSketch } from \"../Home/sketch.js\";\nimport { oopsSketch } from \"../Oops/sketch.js\";\nimport { codeartSketch } from \"../CodeArt/sketch.js\";\n\nexport class p5Element extends LitElement {\n    static styles = css`\n        canvas {\n            display: block;\n            margin: 0;\n            padding: 0;\n            overflow: hidden;\n            width: 100%;\n            height: 100%;\n        }\n    `;\n\n    static properties = {\n        id: { type: String },\n        sketch: { type: String },\n    };\n\n    constructor() {\n        super();\n        this.id = \"bg\";\n        this.sketch = \"\";\n    }\n\n    script() {\n        let div = document.createElement(\"div\");\n        if (this.sketch === \"home\") {\n            homeSketch(div);\n        } else if (this.sketch === \"codeart\") {\n            codeartSketch(div);\n        } else {\n            oopsSketch(div);\n        }\n\n        /* // This works for embedding a sketch from OpenProcessing\n        let script = document.createElement(\"iframe\");\n        script.src =\n            \"https://openprocessing.org/sketch/2242565/embed/?plusEmbedHash=321f7b6f&userID=424615&plusEmbedFullscreen=true&show=sketch\";\n        script.width = \"400\";\n        script.height = \"400\";\n        */\n        return div;\n    }\n\n    render() {\n        return html` ${this.script()} `;\n    }\n}\n\ncustomElements.define(\"p5-element\", p5Element);\n","export const sketch = function (p) {\n    let fbo = undefined;\n    let short = 128;\n    let smoothX = 0;\n    let smoothY = 0;\n\n    p.setup = function setup() {\n        p.noCanvas();\n        p.pixelDensity(1);\n        const s = getViewportSize();\n        p.createCanvas(s.width, s.height, p.WEBGL);\n        // Options for creating our framebuffer, width and height relative to the size of our canvas determine the pixelation appearance\n        const options = {\n            width: 128,\n            height: 128,\n            textureFiltering: p.NEAREST, // Required to prevent interpolation (blurring) when we upscale the image. Gives the pixelated effect that we're going for\n        };\n        // Disable p5's smoothing\n        p.noSmooth();\n        short = p.min(s.width, s.height);\n        // Make the framebuffer\n        fbo = p.createFramebuffer(options);\n        // p5 in instance mode doesn't seem to work well with elements in a shadow root and doesn't remove the \"p5_loading\" div by itself\n        let bg = document.getElementById(\"bg\");\n        let loading_div = bg.shadowRoot.getElementById(\"p5_loading\");\n        if (loading_div) loading_div.remove();\n    };\n\n    p.draw = function draw() {\n        smoothX = smoothX + 0.02 * (p.mouseX - smoothX);\n        smoothY = smoothY + 0.02 * (p.mouseY - smoothY);\n        p.clear();\n        fbo.begin(); // Begin drawing stuff in the framebuffer\n        p.noFill();\n        p.stroke(200, 20, 20);\n        p.strokeWeight(p.abs(p.sin(p.frameCount / 42)));\n        p.clear();\n        p.push();\n        p.rotateX((1.5 * p.PI * smoothY) / p.height);\n        p.rotateY((1.5 * p.PI * -smoothX) / p.width);\n        const s = 12;\n        p.translate(-3 * s, -3 * s, 0);\n        for (let i = 0; i < 7; i++) {\n            for (let j = 0; j < 7; j++) {\n                p.push();\n                p.translate(i * s, j * s, 0);\n                p.rotateZ(((1 + i + j) * p.frameCount) / 100);\n                p.box(s * 0.8);\n                p.pop();\n            }\n        }\n        p.pop();\n        fbo.end(); // Finish drawing stuff in the framebuffer\n        // Render an image of the framebuffer, centering and stretching it to the size of the canvas\n        p.image(fbo, -short / 2, -short / 2, short, short);\n    };\n\n    p.windowResized = function windowResized() {\n        const s = getViewportSize();\n        p.resizeCanvas(s.width, s.height);\n        short = p.min(s.width, s.height);\n    };\n\n    function getViewportSize() {\n        let vw = Math.max(\n            document.documentElement.clientWidth || 0,\n            window.innerWidth || 0,\n        );\n        let vh = Math.max(\n            document.documentElement.clientHeight || 0,\n            window.innerHeight || 0,\n        );\n        return { width: vw, height: vh };\n    }\n};\n\nexport const homeSketch = (node) => {\n    new p5(sketch, node);\n};\n","export const sketch = function (p) {\n    let fbo = undefined;\n    let short = 128;\n\n    p.setup = function setup() {\n        p.noCanvas();\n        p.pixelDensity(1);\n        const s = getViewportSize();\n        p.createCanvas(s.width, s.height, p.WEBGL);\n        // Options for creating our framebuffer, width and height relative to the size of our canvas determine the pixelation appearance\n        const options = {\n            width: 128,\n            height: 128,\n            textureFiltering: p.NEAREST, // Required to prevent interpolation (blurring) when we upscale the image. Gives the pixelated effect that we're going for\n        };\n        // Disable p5's smoothing\n        p.noSmooth();\n        p.ellipseMode(p.CENTER);\n        short = p.min(s.width, s.height);\n        // Make the framebuffer\n        fbo = p.createFramebuffer(options);\n        // p5 in instance mode doesn't seem to work well with elements in a shadow root and doesn't remove the \"p5_loading\" div by itself\n        let bg = document.getElementById(\"bg\");\n        let loading_div = bg.shadowRoot.getElementById(\"p5_loading\");\n        if (loading_div) loading_div.remove();\n    };\n\n    p.draw = function draw() {\n        p.clear();\n        fbo.begin(); // Begin drawing stuff in the framebuffer\n        p.noFill();\n        p.stroke(200, 20, 20);\n        p.strokeWeight(p.abs(p.sin(p.frameCount / 42)));\n        p.clear();\n        p.rotateX(p.frameCount / 50);\n        p.rotateY(p.frameCount / 200);\n        p.circle(0, 0, 64);\n        p.rotateY(p.PI / 2);\n        p.circle(0, 0, 64);\n        fbo.end(); // Finish drawing stuff in the framebuffer\n        // Render an image of the framebuffer, centering and stretching it to the size of the canvas\n        p.image(fbo, -short / 2, -short / 2, short, short);\n    };\n\n    p.windowResized = function windowResized() {\n        const s = getViewportSize();\n        p.resizeCanvas(s.width, s.height);\n        short = p.min(s.width, s.height);\n    };\n\n    function getViewportSize() {\n        let vw = Math.max(\n            document.documentElement.clientWidth || 0,\n            window.innerWidth || 0,\n        );\n        let vh = Math.max(\n            document.documentElement.clientHeight || 0,\n            window.innerHeight || 0,\n        );\n        return { width: vw, height: vh };\n    }\n};\n\nexport const oopsSketch = (node) => {\n    new p5(sketch, node);\n};\n","export const sketch = function (p) {\n    let fbo = undefined;\n    let short = 128;\n    let smoothX = 0;\n    let smoothY = 0;\n\n    p.setup = function setup() {\n        p.noCanvas();\n        p.pixelDensity(1);\n        const s = getViewportSize();\n        p.createCanvas(s.width, s.height, p.WEBGL);\n        // Options for creating our framebuffer, width and height relative to the size of our canvas determine the pixelation appearance\n        const options = {\n            width: 128,\n            height: 128,\n            textureFiltering: p.NEAREST, // Required to prevent interpolation (blurring) when we upscale the image. Gives the pixelated effect that we're going for\n        };\n        // Disable p5's smoothing\n        p.noSmooth();\n        short = p.min(s.width, s.height);\n        // Make the framebuffer\n        fbo = p.createFramebuffer(options);\n        // p5 in instance mode doesn't seem to work well with elements in a shadow root and doesn't remove the \"p5_loading\" div by itself\n        let bg = document.getElementById(\"bg\");\n        let loading_div = bg.shadowRoot.getElementById(\"p5_loading\");\n        if (loading_div) loading_div.remove();\n    };\n\n    p.draw = function draw() {\n        smoothX = smoothX + 0.02 * (p.mouseX - smoothX);\n        smoothY = smoothY + 0.02 * (p.mouseY - smoothY);\n        p.clear();\n        fbo.begin(); // Begin drawing stuff in the framebuffer\n        p.noFill();\n        p.stroke(200, 20, 20);\n        p.strokeWeight(p.abs(p.sin(0.01 * p.frameCount)));\n        p.clear();\n        p.push();\n        p.rotateX((1.5 * p.PI * smoothY) / p.height);\n        p.rotateY((1.5 * p.PI * -smoothX) / p.width);\n        p.sphere(42);\n        p.pop();\n        fbo.end(); // Finish drawing stuff in the framebuffer\n        // Render an image of the framebuffer, centering and stretching it to the size of the canvas\n        p.image(fbo, -short / 2, -short / 2, short, short);\n    };\n\n    p.windowResized = function windowResized() {\n        const s = getViewportSize();\n        p.resizeCanvas(s.width, s.height);\n        short = p.min(s.width, s.height);\n    };\n\n    function getViewportSize() {\n        let vw = Math.max(\n            document.documentElement.clientWidth || 0,\n            window.innerWidth || 0,\n        );\n        let vh = Math.max(\n            document.documentElement.clientHeight || 0,\n            window.innerHeight || 0,\n        );\n        return { width: vw, height: vh };\n    }\n};\n\nexport const codeartSketch = (node) => {\n    new p5(sketch, node);\n};\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$800sp","$7c52c1757ddfa23f$export$d038dabfbf61338f","p","fbo","short","smoothX","smoothY","getViewportSize","width","Math","max","document","documentElement","clientWidth","window","innerWidth","height","clientHeight","innerHeight","setup","noCanvas","pixelDensity","s","createCanvas","WEBGL","options","textureFiltering","NEAREST","noSmooth","min","createFramebuffer","loading_div","bg","getElementById","shadowRoot","remove","draw","mouseX","mouseY","clear","begin","noFill","stroke","strokeWeight","abs","sin","frameCount","push","rotateX","PI","rotateY","translate","i","j","rotateZ","box","pop","end","image","windowResized","resizeCanvas","$7c52c1757ddfa23f$export$6704eadea0be434f","node","p5","$82b1d05426f642e7$export$d038dabfbf61338f","ellipseMode","CENTER","circle","$82b1d05426f642e7$export$121e7a268b92cc36","$a850a1f0a1459307$export$d038dabfbf61338f","sphere","$a850a1f0a1459307$export$6d40932eaa280b79","$1e164a6ac005f7d0$export$b95f0ca738335a5f","LitElement","styles","css","properties","type","String","sketch","constructor","script","div","createElement","render","html","customElements","define"],"version":3,"file":"index.5c1420df.js.map"}